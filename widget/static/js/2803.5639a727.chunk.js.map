{"version":3,"file":"static/js/2803.5639a727.chunk.js","mappings":"4NASA,MAAMA,GAAiBC,EAAAA,EAAAA,OAAKC,IAAe,IAAd,KAAEC,GAAMD,EACnC,MAAME,EAAcD,EAAKE,SAAW,GAAKF,EAAKE,WAAaF,EAAKG,MAC1DC,EAAeJ,EAAKE,SAAW,EAAIF,EAAKE,SAAWF,EAAKG,MAE9D,OACEE,EAAAA,EAAAA,MAAA,KAAGC,KAAMN,EAAKO,IAAKC,OAAO,SAASC,IAAI,sBAAsBC,UAAU,kBAAiBC,SAAA,EACtFC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,SAAEX,EAAKa,QACzCZ,IACCI,EAAAA,EAAAA,MAAA,OAAKK,UAAU,uCAAsCC,SAAA,CAClDX,EAAKc,SAAUd,EAAKG,UAGvBH,EAAKG,MAAQ,GAAKH,EAAKE,SAAW,KAClCG,EAAAA,EAAAA,MAAA,OAAKK,UAAU,qBAAoBC,SAAA,CAChCX,EAAKc,SAAUV,OAGlB,IAIFW,EAAmBC,IAAkC,IAAjC,SAAEC,EAAQ,QAAEC,EAAO,KAAEC,GAAMH,EACnD,MAAOI,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,MAGzCC,GAAgBC,EAAAA,EAAAA,UAAQ,SAAAC,EAAAC,EAAA,OACrB,OAAPR,QAAO,IAAPA,GAAa,QAANO,EAAPP,EAASS,YAAI,IAAAF,GAAgB,QAAhBC,EAAbD,EAAeG,sBAAc,IAAAF,OAAtB,EAAPA,EAA+BG,UAAW,CAAC,CAAC,GAC3C,CAACX,IAGEY,GAAiBC,EAAAA,EAAAA,cAAaC,IACvB,OAAPd,QAAO,IAAPA,GAAAA,EAASS,OACXM,EAAAA,EAAAA,IAAkB,CAClB,EACF,GACC,CAACf,EAASC,IAEPe,GAAqBH,EAAAA,EAAAA,cAAY,CAACI,EAAOnC,KAC7CmC,EAAMC,kBACNN,EAAe9B,GACfqC,OAAOC,KAAKtC,EAAKO,IAAK,SAAS,GAC9B,CAACuB,IAEJ,OAAkB,OAAbP,QAAa,IAAbA,GAAAA,EAAegB,OAEbtB,EAASuB,KAAI,CAACxC,EAAMyC,KACzB,MAAMC,EAAY,WAAW1C,EAAK2C,OAAMC,EAAAA,EAAAA,QAClCC,EAAWzB,IAAgBqB,EAEjC,OACEpC,EAAAA,EAAAA,MAAA,OAAiCsC,GAAID,EAAWhC,UAAW,kBAAiBmC,EAAW,sBAAwB,IAAMC,KAAK,SAASC,MAAO,CACtIC,IAAKhD,EAAKiD,QAAQD,IAClBE,KAAMlD,EAAKiD,QAAQC,MAErBC,aAAcA,IAAM9B,EAAeoB,GAAQW,aAAcA,IAAM/B,EAAe,MAAOgC,QAAUC,GAAMpB,EAAmBoB,EAAGtD,GAAO,sBAAqB,EAAEW,SAAA,EACzJC,EAAAA,EAAAA,KAAA,OAAKF,UAAW,iBAAuC,IAAvBa,EAAcgC,KAAa,mBAAqB,IAAK5C,SAClF8B,EAAQ,KAGVe,EAAAA,EAAAA,eACC5C,EAAAA,EAAAA,KAAC6C,EAAAA,GAAO,CAAC/C,UAAU,iBAAiBgD,aAAc,IAAIhB,IAAaiB,WAAS,EAAAhD,UAC1EC,EAAAA,EAAAA,KAACf,EAAc,CAACG,KAAMA,MAExB4D,SAASC,QAbH,GAAG7D,EAAK2C,MAAMF,IAelB,IAtByB,IAwBjC,EAIEqB,GAAkBhE,EAAAA,EAAAA,MAAKiB,GAI7B,GAAegD,EAAAA,EAAAA,KADGC,IAAK,CAAQ9C,QAAS8C,EAAM9C,WAC9C,CAAiC4C,E","sources":["app/Themes/Elements/Hotspot/Hotspot.js"],"sourcesContent":["import React, { memo, useCallback, useMemo, useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { createPortal } from \"react-dom\";\r\nimport { Tooltip } from 'react-tooltip';\r\nimport \"./scss/Hotspot.scss\"; \r\nimport { generateUniqueString } from \"../../../../utils/Common\";\r\nimport { themePostTracking } from \"../../../../actions/moredataAction\";\r\n\r\n// Memoized components to prevent unnecessary re-renders\r\nconst TooltipContent = memo(({ item }) => {\r\n  const hasDiscount = item.discount > 0 && item.discount !== item.price;\r\n  const displayPrice = item.discount > 0 ? item.discount : item.price;\r\n  \r\n  return (\r\n    <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"tb_tooltip_wrap\">\r\n      <div className=\"tb_p_tooltip_title\">{item.title}</div>\r\n      {hasDiscount && (\r\n        <div className=\"tb_p_tooltip_price tb_price_disabled\">\r\n          {item.currency}{item.price}\r\n        </div>\r\n      )}\r\n      {(item.price > 0 || item.discount > 0) && (\r\n        <div className=\"tb_p_tooltip_price\">\r\n          {item.currency}{displayPrice}\r\n        </div>\r\n      )}\r\n    </a>\r\n  );\r\n});\r\n\r\nconst HotspotComponent = ({ products, appData, Post }) => {\r\n  const [activeIndex, setActiveIndex] = useState(null);\r\n  \r\n  // Memoized hotspot configuration\r\n  const hotspotConfig = useMemo(() => (\r\n    appData?.wall?.ProductSetting?.Hotspot || {}\r\n  ), [appData]);\r\n\r\n  // Stable event handlers\r\n  const handleTracking = useCallback((product) => {\r\n    if (appData?.wall) {\r\n      themePostTracking({\r\n      });\r\n    }\r\n  }, [appData, Post]);\r\n\r\n  const handleHotspotClick = useCallback((event, item) => {\r\n    event.stopPropagation();\r\n    handleTracking(item);\r\n    window.open(item.url, '_blank');\r\n  }, [handleTracking]);\r\n\r\n  if (!hotspotConfig?.status) return null;\r\n\r\n  return products.map((item, index) => {\r\n    const tooltipId = `hotspot-${item.id}-${generateUniqueString()}`;\r\n    const isActive = activeIndex === index;\r\n    \r\n    return (\r\n      <div key={`${item.id}-${index}`} id={tooltipId} className={`tb_hotspot_dot${isActive ? ' tb_hotspot_active_' : ''}`} role=\"button\" style={{ \r\n          top: item.hotspot.top, \r\n          left: item.hotspot.left \r\n        }}\r\n        onMouseEnter={() => setActiveIndex(index)} onMouseLeave={() => setActiveIndex(null)} onClick={(e) => handleHotspotClick(e, item)} data-tooltip-offset={7} >\r\n        <div className={`tb_hotspot__ ${hotspotConfig.type === 0 ? 'tb_hotspot_ani__' : ''}`}>\r\n          {index + 1}\r\n        </div>\r\n        \r\n        {createPortal(\r\n          <Tooltip className=\"tb_pro_tooltip\" anchorSelect={`#${tooltipId}`} clickable >\r\n            <TooltipContent item={item} />\r\n          </Tooltip>,\r\n          document.body\r\n        )}\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\n// Memoize the main component\r\nconst MemoizedHotspot = memo(HotspotComponent);\r\n\r\n// Optimized Redux connection\r\nconst mapState = (state) => ({ appData: state.appData });\r\nexport default connect(mapState)(MemoizedHotspot);"],"names":["TooltipContent","memo","_ref","item","hasDiscount","discount","price","displayPrice","_jsxs","href","url","target","rel","className","children","_jsx","title","currency","HotspotComponent","_ref2","products","appData","Post","activeIndex","setActiveIndex","useState","hotspotConfig","useMemo","_appData$wall","_appData$wall$Product","wall","ProductSetting","Hotspot","handleTracking","useCallback","product","themePostTracking","handleHotspotClick","event","stopPropagation","window","open","status","map","index","tooltipId","id","generateUniqueString","isActive","role","style","top","hotspot","left","onMouseEnter","onMouseLeave","onClick","e","type","createPortal","Tooltip","anchorSelect","clickable","document","body","MemoizedHotspot","connect","state"],"sourceRoot":""}