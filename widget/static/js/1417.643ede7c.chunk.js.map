{"version":3,"file":"static/js/1417.643ede7c.chunk.js","mappings":"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","sources":["actions/ImageRenewAction.js","app/Themes/Elements/Media/Image.js","app/Themes/Elements/Media/Video.js","app/Themes/GalleryTheme/Elements/Media.js"],"sourcesContent":["import { CloudUrl, NO_IMAGE } from \"../constants\";\r\nimport store from \"../store\";\r\nimport { isTagbox, isTagShop, tbox, UPDATE_STATUS } from \"./api\";\r\nimport { isUpdateFrom } from \"./commonAction\";\r\nimport HttpClient from \"./http-client\";\r\n\r\nlet imgQue = [];\r\nexport let dataSource;\r\n \r\nexport const checkImageUrl = async (url) =>\r\n    [\"taggbox.com\", \"tagbox.com\", \"tagembed.com\", \"socialwalls.com\"].some((item) => url.includes(item)) || \r\n    (await fetch(url).then((res) => res.ok).catch(() => false));\r\n \r\n\r\nexport const POPUP_IMAGE_RENEW_REQUEST = (event) => {\r\n    event.persist();\r\n    const target = event.target;\r\n    const { network, itemId, themeId } = target.dataset;\r\n    if (network == 1 && ![3, 4, 16, 47, 50, 55, 60].includes(themeId)) {\r\n        const element = document.querySelector(`.tb_media-${itemId}`);\r\n        if (element) element.style.display = \"none\";\r\n    } else if (!imgQue.includes(event)) {\r\n        imgQue.push(event);\r\n    }\r\n    if (imgQue.length === 1) processImageInQueue();\r\n};\r\n\r\nconst formatPostData = (data, wall, res) => {\r\n    const { UserPlan, Wall } = wall;\r\n    return {\r\n        table_name: UserPlan?.db_table,\r\n        ...data,\r\n        ...(res?.length ? {\r\n            feedId: res[0]?.feedId,\r\n            type: res[0]?.type,\r\n            link: res[0]?.link,\r\n            postFile: res[0]?.postFile,\r\n            mediaFile: res[0]?.mediaFile,\r\n        } : {}),\r\n        url: Wall?.url,\r\n    };\r\n};\r\n\r\n\r\n// export const updateInstagramPodstImage = (data) => {\r\n//     const { postData, wall } = store.getState().appData;\r\n//     const res = postData?.completeDataObject\r\n//         ? Object.values(postData.completeDataObject).filter((val) => val.id === data.postId)\r\n//         : [];\r\n\r\n//     if (res.length) {\r\n//         const dataFormatted = formatPostData(data, wall, res);\r\n//         checkImageUrl(res[0]?.postFileNew)\r\n//             .then((isValid) => {\r\n//                 if (!isValid) {\r\n//                     new HttpClient()\r\n//                         .post(UPDATE_STATUS, dataFormatted, { headers: isUpdateFrom })\r\n//                         .catch(console.error);\r\n//                 }\r\n//             })\r\n//             .catch(({ response }) => console.log(response));\r\n//     }\r\n// };\r\n\r\n\r\nconst processImageInQueue = async () => {\r\n    const { postData, wall } = store.getState().appData;\r\n    if (!wall || !Object.keys(wall).length || !imgQue.length) return;\r\n\r\n    const { User, Wall } = wall;\r\n    const ownerId = User?.id;\r\n    const wallId = isTagShop && dataSource === \"website\" && Wall?.wallId ? Wall.wallId : Wall?.id;\r\n\r\n    const target = imgQue[0]?.target;\r\n    const { filterId, network, itemId, load } = target.dataset;\r\n    const imgTargets = document.querySelector(`img[data-item-id=\"${itemId}\"]`);\r\n    const res = postData?.completeDataObject\r\n        ? Object.values(postData.completeDataObject).filter((val) => val.id === itemId)\r\n        : [];\r\n\r\n    if (res?.length) {\r\n        const isValid = await checkImageUrl(res[0]?.postFileNew);\r\n        if (!isValid && imgTargets) {\r\n            if (\r\n                [2, 18, 3, 28].includes(+network) &&\r\n                load === \"0\" &&\r\n                filterId !== \"34\" &&\r\n                !target.src.includes(\"cloud.taggbox.com\")\r\n            ) {\r\n                const dataFormatted = formatPostData(\r\n                    {\r\n                        wallId,\r\n                        postId: itemId,\r\n                        ownerId,\r\n                    },\r\n                    wall,\r\n                    res\r\n                );\r\n                try {\r\n                    const { data } = await new HttpClient().post(UPDATE_STATUS, dataFormatted, { headers: isUpdateFrom });\r\n                    const baseUrl = isTagShop || isTagbox ? \"\" : `https://images.${tbox}/`;\r\n                    target.src = network === \"18\" ? `${baseUrl}${data.media}` : data.media;\r\n                } catch {\r\n                    target.src = NO_IMAGE;\r\n                } finally {\r\n                    dataLoad(target);\r\n                }\r\n            } else {\r\n                target.src = NO_IMAGE;\r\n                dataLoad(target);\r\n            }\r\n            imgQue.shift();\r\n            processImageInQueue();\r\n        } else {\r\n            const src = `${CloudUrl}/media/images/no-image.svg`;\r\n            target.src = src;\r\n            target.srcset = src;\r\n            dataLoad(target);\r\n            imgQue.shift();\r\n        }\r\n    }\r\n};\r\n\r\nconst dataLoad = (target)=> target.setAttribute(\"data-load\", \"1\")\r\n \r\n\r\n\r\n","import React, { PureComponent, Suspense, lazy } from \"react\"; \r\nimport { GET_IMAGE_SIZE } from '../../../../utils/Common'\r\nimport { CloudUrl } from \"../../../../constants\";\r\nimport { POPUP_IMAGE_RENEW_REQUEST } from \"../../../../actions/ImageRenewAction\";\r\nconst Hotspot =  lazy(() => import('../Hotspot/Hotspot'));\r\nexport default class Image extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        const { mediaOnly, Post } = props;\r\n        this.state = {\r\n            height: mediaOnly?.height || Post?.media?.height || 0,\r\n            width: mediaOnly?.width || Post?.media?.width || 0,\r\n            currentHeight: 0,\r\n            currentWidth: 0,\r\n        };\r\n        this.mediaRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        requestAnimationFrame(() => {\r\n            this.updateMediaDimensions();\r\n            this.mediaSizeCalc();\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    updateMediaDimensions = () => {\r\n        if (this.mediaRef.current) {\r\n            const { offsetHeight, offsetWidth } = this.mediaRef.current;\r\n            this.setState({\r\n                currentHeight: offsetHeight,\r\n                currentWidth: offsetWidth,\r\n            });\r\n        }\r\n    };\r\n\r\n    mediaSizeCalc = async () => {\r\n        const { Post, mediaOnly } = this.props;\r\n        const media = mediaOnly ? mediaOnly : Post.media;\r\n        if (!media?.height && !media?.width) {\r\n            try {\r\n                const { width, height } = await GET_IMAGE_SIZE(media?.image?.small);\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        height: height,\r\n                        width: width,\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        height: 300,\r\n                        width: 300,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { height, width } = this.state;\r\n        const { ImageClass, Post, hotspot, size, blurBG, mediaOnly, inView, multiKey, index, ProductSetting  } = this.props;\r\n        const { id, link, products } = Post;\r\n        const media = mediaOnly ? mediaOnly : Post?.media;\r\n        const { currentWidth, currentHeight } = this.state;\r\n\r\n        const paddingSize = size || (height * 100) / width;\r\n        const imageStyle = {\r\n            paddingBottom: paddingSize === 1 ? null : `${paddingSize}%`,\r\n        };\r\n\r\n        const blurImgStyle = {\r\n            backgroundImage: inView ? `url(${media?.image?.small})` : null,\r\n        };\r\n\r\n        const newWidth = width > height ? '100%' : `${(width / height) * 100}%`;\r\n        const newHeight = width > height ? `${(height / width) * 100}%` : '100%';\r\n\r\n        const isHotspot = Post.isProduct && hotspot && Post.hotspot && ProductSetting?.Hotspot?.status;\r\n        const hotspotImgStyle = { width: isHotspot && size ? newWidth : null, height: isHotspot && size ? newHeight : null };\r\n        \r\n        return (\r\n            <div className={`${ImageClass}_wrap_`} style={imageStyle} ref={this.mediaRef}>\r\n                {isHotspot && blurBG ? <div className=\"tb_blur_bg_\" style={blurImgStyle}></div> : null}\r\n                <div className={`${ImageClass}_wrap_in`} style={hotspotImgStyle}>\r\n                    {isHotspot  ? (\r\n                        <Suspense fallback={<></>}>\r\n                            <Hotspot key={index} products={this.props.multiPic ? Post.mediaList[multiKey].product : products} hotspot={Post.hotspot} Post={Post} showTooltip={null} />\r\n                        </Suspense>\r\n                    ) : null}\r\n                    {inView ? <img\r\n                        key={`${id}-${height}-${width}-${inView}`}\r\n                        className={`${ImageClass} tb_media-${id}`}\r\n                        src={media?.image?.small}\r\n                        srcSet={`${media?.image?.small} 1x, ${media?.image?.large} 2x`}\r\n                        sizes={`${currentWidth}px`}\r\n                        loading={inView ? \"eager\" : \"lazy\"}\r\n                        decoding=\"async\"\r\n                        fetchPriority={inView ? \"high\" : \"low\"}\r\n                        data-id={id}\r\n                        height={currentHeight}\r\n                        width={currentWidth}\r\n                        data-height={height}\r\n                        data-width={width}\r\n                        data-link={link}\r\n                        onLoad={this.onLoad}\r\n                        onError={(e) => {\r\n                            e.target.src = `${CloudUrl}/media/error/no-image.svg`;\r\n                            e.target.srcset = `${CloudUrl}/media/error/no-image.svg`;\r\n                            POPUP_IMAGE_RENEW_REQUEST(e);\r\n                        }}\r\n                        alt={media?.title}\r\n                        title={media?.title}\r\n                    />:null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component, memo } from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { isSocialWall, isTagShop } from \"../../../../actions/api\";\r\nimport { GET_IMAGE_SIZE } from \"../../../../utils/Common\";\r\n\r\nclass Video extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadError: false,\r\n            videoLoaded: false,\r\n            calcHeight: 0,\r\n            calcWidth: 0,\r\n            currentHeight: 0,\r\n            currentWidth: 0,\r\n        };\r\n        this.mediaRef = React.createRef();\r\n        this._isMounted = false; // Track component mount status\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        requestAnimationFrame(() => {\r\n            this.updateMediaDimensions();\r\n            this.mediaSizeCalc();\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    updateMediaDimensions = () => {\r\n        if (this.mediaRef.current) {\r\n            const { offsetHeight, offsetWidth } = this.mediaRef.current;\r\n            this.setState({\r\n                currentHeight: offsetHeight,\r\n                currentWidth: offsetWidth,\r\n            });\r\n        }\r\n    };\r\n\r\n    mediaSizeCalc = async () => {\r\n        const { media } = this.props.Post;\r\n        if (!media?.height && !media?.width) {\r\n            try {\r\n                const { width, height } = await GET_IMAGE_SIZE(media?.image?.small);\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        calcHeight: height,\r\n                        calcWidth: width,\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        calcHeight: 300,\r\n                        calcWidth: 300,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    setVideoLoaded = (event) => {\r\n        if (this._isMounted) {\r\n            this.setState({ videoLoaded: event });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { VideoClass, Post, controls, autoPlay, handleVideoEnded, muted, intervalTime, size, inView } = this.props;\r\n        const { calcHeight, calcWidth, currentWidth, currentHeight } = this.state;\r\n        const { media, id, link, networkId } = Post;\r\n        const fullsize = size === 1;\r\n        const height = media?.height ? media?.height : calcHeight;\r\n        const width = media?.width ? media?.width : calcWidth;\r\n        const paddingSize = size ? size : (height * 100) / width;\r\n        const videoStyle = {\r\n            paddingBottom: `${fullsize ? null : paddingSize}%`,\r\n        };\r\n\r\n        return (\r\n            <div className={`${VideoClass}_wrap_`} style={videoStyle} ref={this.mediaRef}>\r\n                <ReactPlayer\r\n                    key={`${id}-${currentHeight}-${calcWidth}-${inView}`}\r\n                    className={`${VideoClass} tb_media-${id}`}\r\n                    url={media?.video?.clip ? media?.video?.clip : inView ? media?.video?.full : media?.image?.small}\r\n                    data-height={calcHeight}\r\n                    data-width={calcWidth}\r\n                    data-type=\"video\"\r\n                    data-network={networkId}\r\n                    data-link={link}\r\n                    data-item-id={id}\r\n                    data-load={0}\r\n                    config={{\r\n                        facebook: {\r\n                            appId: '117029975354072',\r\n                            attributes: {\r\n                                'data-width': width,\r\n                                'data-height': height,\r\n                                poster: media?.image?.small,\r\n                            },\r\n                        },\r\n                        file: {\r\n                            attributes: {\r\n                                preload: 'metadata',\r\n                                poster: media?.image?.small,\r\n                                height: currentHeight,\r\n                                width: currentWidth,\r\n                            },\r\n                        },\r\n                    }}\r\n                    loop={isSocialWall && !isTagShop && Post?.loopStop ? false : autoPlay}\r\n                    onError={(e) => {\r\n                        if (fullsize && handleVideoEnded) {\r\n                            setTimeout(() => {\r\n                                if (this._isMounted && handleVideoEnded) handleVideoEnded();\r\n                            }, intervalTime * 1000);\r\n                        }\r\n                        this.setVideoLoaded(false);\r\n                    }}\r\n                    autoPlay={inView && autoPlay ? 1 : 0}\r\n                    muted={muted}\r\n                    volume={autoPlay ? 1 : 0}\r\n                    playsinline={1}\r\n                    onReady={() => this.setVideoLoaded(!isTagShop)}\r\n                    playing={inView && autoPlay ? 1 : 0}\r\n                    controls={controls || false}\r\n                    onEnded={handleVideoEnded}\r\n                    title={media?.title}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default memo(Video);","import React, { Suspense, lazy } from \"react\";\r\nimport { isTagShop } from \"../../../../actions/api\";\r\nimport Image from \"../../Elements/Media/Image\";\r\nimport Video from \"../../Elements/Media/Video\";\r\nconst MediaIcon = lazy(() => import('../../Elements/MediaIcon/MediaIcon'));\r\nconst Media = ({ Post, ThemeStyle, index, inView, ProductSetting  }) => {\r\n  const mediaIcon = Post.hotspot ? false : true\r\n\r\n  const isVideo = (Post.type === 3 || Post.type === 5) && (ThemeStyle.autoPlay || !isTagShop) ? true : false\r\n  const size = 100\r\n  return <div className=\"tb_gt_media_wrap\">\r\n        <Suspense fallback={<></>}><MediaIcon Post={Post} IconClass=\"tb_gt_media_icon\" show={mediaIcon} hideVideo={ThemeStyle.autoPlay} /></Suspense>\r\n        {isVideo ? \r\n        <Video VideoClass=\"tb_gt_video\" Post={Post} size={size} isCover={true} controls={false} autoPlay={ThemeStyle.autoPlay} muted={true} index={index} inView={inView}/>\r\n        : \r\n        <Image ImageClass=\"tb_gt_image\" Post={Post} size={size}  ProductSetting={ProductSetting}  hotspot={isTagShop} blurBG={isTagShop} index={index} inView={inView} /> \r\n        }\r\n      </div>\r\n}\r\nexport default Media"],"names":["imgQue","POPUP_IMAGE_RENEW_REQUEST","event","persist","target","network","itemId","themeId","dataset","includes","push","element","document","querySelector","style","display","length","processImageInQueue","async","_imgQue$","postData","wall","store","getState","appData","Object","keys","User","Wall","ownerId","id","wallId","isTagShop","filterId","load","imgTargets","res","completeDataObject","values","filter","val","_res$6","isValid","some","item","url","fetch","then","ok","catch","checkImageUrl","postFileNew","src","dataFormatted","formatPostData","data","_res$","_res$2","_res$3","_res$4","_res$5","UserPlan","table_name","db_table","feedId","type","link","postFile","mediaFile","postId","HttpClient","post","UPDATE_STATUS","headers","isUpdateFrom","baseUrl","isTagbox","tbox","media","NO_IMAGE","dataLoad","shift","CloudUrl","srcset","setAttribute","Hotspot","lazy","Image","PureComponent","constructor","props","_Post$media","_Post$media2","super","updateMediaDimensions","this","mediaRef","current","offsetHeight","offsetWidth","setState","currentHeight","currentWidth","mediaSizeCalc","Post","mediaOnly","height","width","_media$image","GET_IMAGE_SIZE","image","small","_isMounted","error","state","React","componentDidMount","requestAnimationFrame","componentWillUnmount","render","_media$image2","_ProductSetting$Hotsp","_media$image3","_media$image4","_media$image5","ImageClass","hotspot","size","blurBG","inView","multiKey","index","ProductSetting","products","paddingSize","imageStyle","paddingBottom","blurImgStyle","backgroundImage","newWidth","newHeight","isHotspot","isProduct","status","hotspotImgStyle","_jsxs","className","ref","children","_jsx","Suspense","fallback","_Fragment","multiPic","mediaList","product","showTooltip","srcSet","large","sizes","loading","decoding","fetchPriority","onLoad","onError","e","alt","title","Video","Component","calcHeight","calcWidth","setVideoLoaded","videoLoaded","loadError","_media$video","_media$video2","_media$video3","VideoClass","controls","autoPlay","handleVideoEnded","muted","intervalTime","networkId","fullsize","videoStyle","ReactPlayer","video","clip","full","config","facebook","appId","attributes","poster","file","preload","loop","isSocialWall","loopStop","setTimeout","volume","playsinline","onReady","playing","onEnded","memo","MediaIcon","_ref","ThemeStyle","mediaIcon","isVideo","IconClass","show","hideVideo","isCover"],"sourceRoot":""}