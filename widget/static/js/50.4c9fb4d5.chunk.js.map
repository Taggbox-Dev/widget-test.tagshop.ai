{"version":3,"file":"static/js/50.4c9fb4d5.chunk.js","mappings":"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","sources":["../node_modules/swiper/modules/mousewheel.mjs","../node_modules/swiper/shared/create-element-if-not-defined.mjs","../node_modules/swiper/modules/navigation.mjs","../node_modules/swiper/shared/classes-to-selector.mjs","../node_modules/swiper/modules/pagination.mjs","../node_modules/swiper/modules/autoplay.mjs","../node_modules/swiper/modules/free-mode.mjs"],"sourcesContent":["import { a as getWindow } from '../shared/ssr-window.esm.mjs';\nimport { n as nextTick, d as now } from '../shared/utils.mjs';\n\n/* eslint-disable consistent-return */\nfunction Mousewheel(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  const window = getWindow();\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null,\n      noMousewheelClass: 'swiper-no-mousewheel'\n    }\n  });\n  swiper.mousewheel = {\n    enabled: false\n  };\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  }\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n  function animateSlider(newEvent) {\n    if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n    if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    }\n\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    lastScrollTime = new window.Date().getTime();\n    // Return false as a default\n    return false;\n  }\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  }\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n\n    // Ignore event if the target or its parents have the swiper-no-mousewheel class\n    if (event.target.closest(`.${swiper.params.mousewheel.noMousewheelClass}`)) return;\n    const params = swiper.params.mousewheel;\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    const targetElContainsTarget = targetEl && targetEl.contains(e.target);\n    if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n    const data = normalize(e);\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n    if (delta === 0) return true;\n    if (params.invert) delta = -delta;\n\n    // Get the scroll positions\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n    // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n    disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event\n      };\n\n      // Keep the most recent events\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta)\n      };\n      const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n          swiper.updateSlidesClasses();\n        }\n        if (swiper.params.loop) {\n          swiper.loopFix({\n            direction: newEvent.direction < 0 ? 'next' : 'prev',\n            byMousewheel: true\n          });\n        }\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              if (swiper.destroyed || !swiper.params) return;\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              if (swiper.destroyed || !swiper.params) return;\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplay.disableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (params.releaseOnEdges && (position === swiper.minTranslate() || position === swiper.maxTranslate())) {\n          return true;\n        }\n      }\n    }\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    return false;\n  }\n  function events(method) {\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    targetEl[method]('mouseenter', handleMouseEnter);\n    targetEl[method]('mouseleave', handleMouseLeave);\n    targetEl[method]('wheel', handle);\n  }\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n    if (swiper.mousewheel.enabled) return false;\n    events('addEventListener');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n    if (!swiper.mousewheel.enabled) return false;\n    events('removeEventListener');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n    if (swiper.mousewheel.enabled) disable();\n  });\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable\n  });\n}\n\nexport { Mousewheel as default };\n","import { e as elementChildren, c as createElement } from './utils.mjs';\n\nfunction createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n        if (!element) {\n          element = createElement('div', checkProps[key]);\n          element.className = checkProps[key];\n          swiper.el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}\n\nexport { createElementIfNotDefined as c };\n","import { c as createElementIfNotDefined } from '../shared/create-element-if-not-defined.mjs';\nimport { m as makeElementsArray } from '../shared/utils.mjs';\n\nfunction Navigation(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    prevEl: null\n  };\n  function getEl(el) {\n    let res;\n    if (el && typeof el === 'string' && swiper.isElement) {\n      res = swiper.el.querySelector(el) || swiper.hostEl.querySelector(el);\n      if (res) return res;\n    }\n    if (el) {\n      if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && res && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n        res = swiper.el.querySelector(el);\n      } else if (res && res.length === 1) {\n        res = res[0];\n      }\n    }\n    if (el && !res) return el;\n    // if (Array.isArray(res) && res.length === 1) res = res[0];\n    return res;\n  }\n  function toggleEl(el, disabled) {\n    const params = swiper.params.navigation;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (subEl) {\n        subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n        if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n        }\n      }\n    });\n  }\n  function update() {\n    // Update Navigation Buttons\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (swiper.params.loop) {\n      toggleEl(prevEl, false);\n      toggleEl(nextEl, false);\n      return;\n    }\n    toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    let nextEl = getEl(params.nextEl);\n    let prevEl = getEl(params.prevEl);\n    Object.assign(swiper.navigation, {\n      nextEl,\n      prevEl\n    });\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const initButton = (el, dir) => {\n      if (el) {\n        el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      }\n      if (!swiper.enabled && el) {\n        el.classList.add(...params.lockClass.split(' '));\n      }\n    };\n    nextEl.forEach(el => initButton(el, 'next'));\n    prevEl.forEach(el => initButton(el, 'prev'));\n  }\n  function destroy() {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const destroyButton = (el, dir) => {\n      el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n    };\n    nextEl.forEach(el => destroyButton(el, 'next'));\n    prevEl.forEach(el => destroyButton(el, 'prev'));\n  }\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (swiper.enabled) {\n      update();\n      return;\n    }\n    [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.add(swiper.params.navigation.lockClass));\n  });\n  on('click', (_s, e) => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const targetEl = e.target;\n    let targetIsButton = prevEl.includes(targetEl) || nextEl.includes(targetEl);\n    if (swiper.isElement && !targetIsButton) {\n      const path = e.path || e.composedPath && e.composedPath();\n      if (path) {\n        targetIsButton = path.find(pathEl => nextEl.includes(pathEl) || prevEl.includes(pathEl));\n      }\n    }\n    if (swiper.params.navigation.hideOnClick && !targetIsButton) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n      if (nextEl.length) {\n        isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      } else if (prevEl.length) {\n        isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    init();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    destroy();\n  };\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}\n\nexport { Navigation as default };\n","function classesToSelector(classes) {\n  if (classes === void 0) {\n    classes = '';\n  }\n  return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}\n\nexport { classesToSelector as c };\n","import { c as classesToSelector } from '../shared/classes-to-selector.mjs';\nimport { c as createElementIfNotDefined } from '../shared/create-element-if-not-defined.mjs';\nimport { m as makeElementsArray, f as elementOuterSize, h as elementIndex, a as elementParents } from '../shared/utils.mjs';\n\nfunction Pagination(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n  }\n  function setSideBullets(bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    if (!bulletEl) return;\n    bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n    if (bulletEl) {\n      bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n      bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n      if (bulletEl) {\n        bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n      }\n    }\n  }\n  function getMoveDirection(prevIndex, nextIndex, length) {\n    prevIndex = prevIndex % length;\n    nextIndex = nextIndex % length;\n    if (nextIndex === prevIndex + 1) {\n      return 'next';\n    } else if (nextIndex === prevIndex - 1) {\n      return 'previous';\n    }\n    return;\n  }\n  function onBulletClick(e) {\n    const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n    if (!bulletEl) {\n      return;\n    }\n    e.preventDefault();\n    const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n    if (swiper.params.loop) {\n      if (swiper.realIndex === index) return;\n      const moveDirection = getMoveDirection(swiper.realIndex, index, swiper.slides.length);\n      if (moveDirection === 'next') {\n        swiper.slideNext();\n      } else if (moveDirection === 'previous') {\n        swiper.slidePrev();\n      } else {\n        swiper.slideToLoop(index);\n      }\n    } else {\n      swiper.slideTo(index);\n    }\n  }\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    // Current/Total\n    let current;\n    let previousIndex;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      previousIndex = swiper.previousRealIndex || 0;\n      current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n      previousIndex = swiper.previousSnapIndex;\n    } else {\n      previousIndex = swiper.previousIndex || 0;\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n        el.forEach(subEl => {\n          subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n        });\n        if (params.dynamicMainBullets > 1 && previousIndex !== undefined) {\n          dynamicBulletIndex += current - (previousIndex || 0);\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.forEach(bulletEl => {\n        const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\n        bulletEl.classList.remove(...classesToRemove);\n      });\n      if (el.length > 1) {\n        bullets.forEach(bullet => {\n          const bulletIndex = elementIndex(bullet);\n          if (bulletIndex === current) {\n            bullet.classList.add(...params.bulletActiveClass.split(' '));\n          } else if (swiper.isElement) {\n            bullet.setAttribute('part', 'bullet');\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets(bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets(bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const bullet = bullets[current];\n        if (bullet) {\n          bullet.classList.add(...params.bulletActiveClass.split(' '));\n        }\n        if (swiper.isElement) {\n          bullets.forEach((bulletEl, bulletIndex) => {\n            bulletEl.setAttribute('part', bulletIndex === current ? 'bullet-active' : 'bullet');\n          });\n        }\n        if (params.dynamicBullets) {\n          const firstDisplayedBullet = bullets[firstIndex];\n          const lastDisplayedBullet = bullets[lastIndex];\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            if (bullets[i]) {\n              bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n          }\n          setSideBullets(firstDisplayedBullet, 'prev');\n          setSideBullets(lastDisplayedBullet, 'next');\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.forEach(bullet => {\n          bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n        });\n      }\n    }\n    el.forEach((subEl, subElIndex) => {\n      if (params.type === 'fraction') {\n        subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n          fractionEl.textContent = params.formatFractionCurrent(current + 1);\n        });\n        subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n          totalEl.textContent = params.formatFractionTotal(total);\n        });\n      }\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n          progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n          progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        });\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n        if (subElIndex === 0) emit('paginationRender', subEl);\n      } else {\n        if (subElIndex === 0) emit('paginationRender', subEl);\n        emit('paginationUpdate', subEl);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n      }\n    });\n  }\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.grid && swiper.params.grid.rows > 1 ? swiper.slides.length / Math.ceil(swiper.params.grid.rows) : swiper.slides.length;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          // prettier-ignore\n          paginationHTML += `<${params.bulletElement} ${swiper.isElement ? 'part=\"bullet\"' : ''} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n    }\n    swiper.pagination.bullets = [];\n    el.forEach(subEl => {\n      if (params.type !== 'custom') {\n        subEl.innerHTML = paginationHTML || '';\n      }\n      if (params.type === 'bullets') {\n        swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\n      }\n    });\n    if (params.type !== 'custom') {\n      emit('paginationRender', el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = [...document.querySelectorAll(params.el)];\n    }\n    if (!el) {\n      el = params.el;\n    }\n    if (!el || el.length === 0) return;\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n      el = [...swiper.el.querySelectorAll(params.el)];\n      // check if it belongs to another nested Swiper\n      if (el.length > 1) {\n        el = el.find(subEl => {\n          if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n          return true;\n        });\n      }\n    }\n    if (Array.isArray(el) && el.length === 1) el = el[0];\n    Object.assign(swiper.pagination, {\n      el\n    });\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (params.type === 'bullets' && params.clickable) {\n        subEl.classList.add(...(params.clickableClass || '').split(' '));\n      }\n      subEl.classList.add(params.modifierClass + params.type);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        subEl.classList.add(params.progressbarOppositeClass);\n      }\n      if (params.clickable) {\n        subEl.addEventListener('click', onBulletClick);\n      }\n      if (!swiper.enabled) {\n        subEl.classList.add(params.lockClass);\n      }\n    });\n  }\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => {\n        subEl.classList.remove(params.hiddenClass);\n        subEl.classList.remove(params.modifierClass + params.type);\n        subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.clickable) {\n          subEl.classList.remove(...(params.clickableClass || '').split(' '));\n          subEl.removeEventListener('click', onBulletClick);\n        }\n      });\n    }\n    if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\n  }\n  on('changeDirection', () => {\n    if (!swiper.pagination || !swiper.pagination.el) return;\n    const params = swiper.params.pagination;\n    let {\n      el\n    } = swiper.pagination;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    update();\n  });\n  on('snapGridLengthChange', () => {\n    render();\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    const el = makeElementsArray(swiper.pagination.el);\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n    }\n    init();\n    render();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}\n\nexport { Pagination as default };\n","import { g as getDocument } from '../shared/ssr-window.esm.mjs';\n\n/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nfunction Autoplay(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit,\n    params\n  } = _ref;\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: false,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime();\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  let pausedByPointerEnter;\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n    if (pausedByPointerEnter || e.detail && e.detail.bySwiperTouchMove) {\n      return;\n    }\n    resume();\n  }\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n  const getSlideDelay = () => {\n    let activeSlideEl;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.find(slideEl => slideEl.classList.contains('swiper-slide-active'));\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    }\n\n    // eslint-disable-next-line\n    return delay;\n  };\n  const start = () => {\n    autoplayStartTime = new Date().getTime();\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n    const proceed = () => {\n      emit('autoplayPause');\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n    swiper.autoplay.paused = true;\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n      slideChanged = false;\n      proceed();\n      return;\n    }\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pausedByPointerEnter = true;\n    if (swiper.animating || swiper.autoplay.paused) return;\n    pause(true);\n  };\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByPointerEnter = false;\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const detachMouseEvents = () => {\n    if (swiper.el && typeof swiper.el !== 'string') {\n      swiper.el.removeEventListener('pointerenter', onPointerEnter);\n      swiper.el.removeEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('_freeModeStaticRelease', () => {\n    if (pausedByTouch || pausedByInteraction) {\n      resume();\n    }\n  });\n  on('_freeModeNoMomentumRelease', () => {\n    if (!swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}\n\nexport { Autoplay as default };\n","import { d as now, k as elementTransitionEnd } from '../shared/utils.mjs';\n\nfunction freeMode(_ref) {\n  let {\n    swiper,\n    extendParams,\n    emit,\n    once\n  } = _ref;\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n  function onTouchStart() {\n    if (swiper.params.cssMode) return;\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n  function onTouchMove() {\n    if (swiper.params.cssMode) return;\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper;\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n  function onTouchEnd(_ref2) {\n    let {\n      currentPos\n    } = _ref2;\n    if (swiper.params.cssMode) return;\n    const {\n      params,\n      wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper;\n    // Time diff\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        elementTransitionEnd(wrapperEl, () => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            elementTransitionEnd(wrapperEl, () => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          elementTransitionEnd(wrapperEl, () => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      emit('_freeModeStaticRelease');\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}\n\nexport { freeMode as default };\n"],"names":["Mousewheel","_ref","swiper","extendParams","on","emit","window","getWindow","timeout","mousewheel","enabled","releaseOnEdges","invert","forceToAxis","sensitivity","eventsTarget","thresholdDelta","thresholdTime","noMousewheelClass","lastEventBeforeSnap","lastScrollTime","now","recentWheelEvents","handleMouseEnter","mouseEntered","handleMouseLeave","animateSlider","newEvent","params","delta","direction","isEnd","loop","animating","slideNext","raw","isBeginning","slidePrev","Date","getTime","handle","event","e","disableParentSwiper","target","closest","cssMode","preventDefault","targetEl","el","document","querySelector","targetElContainsTarget","contains","originalEvent","rtlFactor","rtlTranslate","data","sX","sY","pX","pY","detail","wheelDelta","wheelDeltaY","wheelDeltaX","axis","HORIZONTAL_AXIS","deltaY","deltaX","shiftKey","deltaMode","spinX","spinY","pixelX","pixelY","normalize","isHorizontal","Math","abs","positions","getTranslate","minTranslate","maxTranslate","nested","stopPropagation","freeMode","time","sign","ignoreWheelEvents","undefined","position","wasBeginning","wasEnd","setTransition","setTranslate","updateProgress","updateActiveIndex","updateSlidesClasses","loopFix","byMousewheel","sticky","clearTimeout","length","shift","prevEvent","firstEvent","push","splice","snapToThreshold","nextTick","destroyed","slideToClosest","speed","autoplay","disableOnInteraction","stop","releaseScroll","returnValue","events","method","enable","wrapperEl","removeEventListener","disable","addEventListener","Object","assign","createElementIfNotDefined","originalParams","checkProps","createElements","keys","forEach","key","auto","element","elementChildren","createElement","className","append","Navigation","getEl","res","isElement","hostEl","querySelectorAll","uniqueNavElements","toggleEl","disabled","navigation","makeElementsArray","subEl","classList","disabledClass","split","tagName","watchOverflow","isLocked","lockClass","update","nextEl","prevEl","rewind","onPrevClick","onNextClick","init","initButton","dir","add","destroy","destroyButton","remove","hideOnClick","hiddenClass","navigationDisabledClass","filter","_s","targetIsButton","includes","path","composedPath","find","pathEl","pagination","clickable","isHidden","toggle","classesToSelector","classes","trim","replace","Pagination","pfx","bulletSize","bulletElement","renderBullet","renderProgressbar","renderFraction","renderCustom","progressbarOpposite","type","dynamicBullets","dynamicMainBullets","formatFractionCurrent","number","formatFractionTotal","bulletClass","bulletActiveClass","modifierClass","currentClass","totalClass","progressbarFillClass","progressbarOppositeClass","clickableClass","horizontalClass","verticalClass","paginationDisabledClass","bullets","dynamicBulletIndex","isPaginationDisabled","Array","isArray","setSideBullets","bulletEl","onBulletClick","index","elementIndex","slidesPerGroup","realIndex","moveDirection","prevIndex","nextIndex","slides","slideToLoop","slideTo","rtl","current","previousIndex","slidesLength","virtual","total","ceil","snapGrid","previousRealIndex","floor","snapIndex","previousSnapIndex","activeIndex","firstIndex","lastIndex","midIndex","elementOuterSize","style","max","min","classesToRemove","map","suffix","s","flat","bullet","bulletIndex","setAttribute","firstDisplayedBullet","lastDisplayedBullet","i","dynamicBulletsLength","bulletsOffset","offsetProp","subElIndex","fractionEl","textContent","totalEl","progressbarDirection","scale","scaleX","scaleY","progressEl","transform","transitionDuration","innerHTML","render","grid","rows","paginationHTML","numberOfBullets","call","elementParents","Autoplay","raf","running","paused","timeLeft","delay","waitForTransition","stopOnLastSlide","reverseDirection","pauseOnMouseEnter","autoplayTimeLeft","wasPaused","isTouched","pausedByTouch","touchStartTimeout","slideChanged","pausedByInteraction","pausedByPointerEnter","autoplayDelayTotal","autoplayDelayCurrent","autoplayStartTime","onTransitionEnd","bySwiperTouchMove","resume","calcTimeLeft","requestAnimationFrame","run","delayForce","cancelAnimationFrame","currentSlideDelay","getSlideDelay","activeSlideEl","slideEl","parseInt","getAttribute","Number","isNaN","proceed","setTimeout","start","pause","internal","reset","onVisibilityChange","getDocument","visibilityState","onPointerEnter","pointerType","onPointerLeave","once","momentum","momentumRatio","momentumBounce","momentumBounceRatio","momentumVelocityRatio","minimumVelocity","onTouchStart","translate","touchEventsData","velocities","onTouchEnd","currentPos","onTouchMove","touches","touchStartTime","_ref2","timeDiff","lastMoveEvent","pop","velocityEvent","distance","velocity","momentumDuration","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","needsLoopFix","allowMomentumBounce","centeredSlides","nextSlide","j","swipeDirection","moveDistance","currentSlideSize","slidesSizesGrid","transitionStart","elementTransitionEnd","transitionEnd","longSwipesMs"],"sourceRoot":""}