{"version":3,"file":"static/js/6575.8c3d1170.chunk.js","mappings":"2LAKA,MAAMA,EAAgBA,CAACC,EAAWC,EAAQC,EAAMC,KAC9C,MAAMC,EAAU,CACdC,KAAM,iDAAgDC,EAAAA,EAAAA,IAAcL,KACpEM,QAAS,iDAAgDD,EAAAA,EAAAA,IAAcL,KACvEO,QAAS,gDAA+CF,EAAAA,EAAAA,IAAcL,MAExE,OAAqB,IAAdD,EAAkBI,EAAQD,GAAUD,CAAI,EAG3CO,EAAYC,IAA0D,IAAzD,MAAEC,EAAK,UAAEC,EAAS,KAAEC,EAAI,MAAEC,EAAK,OAAEC,EAAS,EAAC,KAAEC,GAAMN,EACpE,MAAMO,EAAUH,EAAQ,GAAII,EAAAA,EAAAA,IAAWJ,GAAS,GAChD,OAAOK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAyBC,KAAK,WAAW,uBAAqB,2BAA0BC,UAC5GC,EAAAA,EAAAA,MAAA,OAAKC,QAASC,IAAWA,EAAMC,kBAAmBC,OAAOC,KAAKhB,EAAW,SAAS,EAAKQ,UAAW,yDAAyDL,IAAU,aAAY,GAAGJ,UAAcK,WAAcC,IAAWI,KAAK,SAASQ,SAAS,IAAGP,SAAA,EACnPH,EAAAA,EAAAA,KAAA,OAAKC,UAAW,sCAAsCP,IAAOS,SAAC,OAC7DL,GAAUE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BE,SAAEL,IAAe,OAEpE,EAGO,MAAMa,UAAqBC,EAAAA,cACxCC,iBAAAA,GACE,IAAK,IAADC,EACF,MAAM,KAAEC,GAASC,KAAKC,MAChBC,EAAiB,+BAAmC,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAMI,KACtB,QAAtCL,EAAAM,SAASC,cAAcH,UAAe,IAAAJ,GAAtCA,EAAwCQ,iBAAiB,WAAW,SAAUhB,GAC1D,UAAdA,EAAMiB,KAAiC,MAAdjB,EAAMiB,MACjCjB,EAAMkB,iBACNR,KAAKS,QAET,GACF,CAAE,MAAOC,GACPC,QAAQC,IAAIF,EACd,CACF,CAEAG,MAAAA,GACE,MAAM,KAAEd,EAAI,UAAEe,EAAS,YAAEC,GAAgBf,KAAKC,OACxC,KAAEe,EAAI,MAAEC,GAAUH,EAClBI,EAAY,CAAEC,MAAQH,EAAKI,QAAuBH,EAAME,MAAnBH,EAAKG,OAE1CtD,EAAYkC,EAAKsB,WACjB,QAAEjD,EAAO,KAAEF,GAAS6B,EAAKpB,MACzB2C,EAAW,CAAC,EAAG,GAAI,GAAGC,SAAS1D,GAAa,OAAS,gBACrD2D,EAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IAAID,SAAS1D,GACrD4D,GAAqB,CAAC,GAAI,IAAIF,SAAS1D,GACvC6D,GAAcC,EAAAA,EAAAA,IAAiB9D,GAErC,MAAQ,CAAC,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAAI0D,SAAS1D,GASpD,MARFmB,EAAAA,EAAAA,KAAA,OAAKC,UAAW8B,EAAY5B,UAC1BC,EAAAA,EAAAA,MAAA,OAAKH,UAAU,qBAAqBC,KAAK,OAAMC,SAAA,CAC5CqC,IAAkBxC,EAAAA,EAAAA,KAACV,EAAS,CAACM,OAAQmB,EAAKI,GAAI3B,MAAOkD,EAAajD,UAAWb,EAAcC,EAAWkC,EAAK6B,OAAQ7B,EAAK8B,KAAM,QAASnD,KAAM4C,EAAUJ,UAAWA,EAAWvC,MAAOT,EAAMW,KAAK,SAC/L4C,IAAqBzC,EAAAA,EAAAA,KAACV,EAAS,CAACM,OAAQmB,EAAKI,GAAI3B,MAAOkD,EAAajD,UAAWb,EAAcC,EAAWkC,EAAK6B,OAAQ7B,EAAK8B,KAAM,WAAYnD,KAAM,UAAWwC,UAAWA,EAAWvC,MAAOP,EAASS,KAAK,YAC3L,IAAdhB,IAAmBmB,EAAAA,EAAAA,KAACV,EAAS,CAACM,OAAQmB,EAAKI,GAAI3B,MAAOkD,EAAajD,UAAWb,EAAcC,EAAWkC,EAAK6B,OAAQ7B,EAAK8B,KAAM,WAAYnD,KAAM,UAAWwC,UAAWA,EAAWvC,MAAOP,EAASS,KAAK,aACxMG,EAAAA,EAAAA,KAACV,EAAS,CAACE,MAAOkD,EAAa9C,OAAQmB,EAAKI,GAAI1B,UAAWsB,EAAK8B,KAAMnD,KAAM,MAAOwC,UAAWA,EAAWvC,MAAO,EAAGE,KAAK,aAIhI,E","sources":["app/Themes/Elements/SocialAction/SocialAction.js"],"sourcesContent":["import React, { PureComponent } from \"react\"; \nimport { convertToAtob, kFormatter } from \"../../../../utils/Common\";\nimport { GET_NETWORK_NAME } from \"../../../../utils/Network\";\nimport \"./scss/SocialAction.scss\";\n\nconst NetworkAction = (networkID, postID, Link, action) => {\n  const actions = {\n    like: `https://twitter.com/intent/favorite?tweet_id=${convertToAtob(postID)}`,\n    comment: `https://twitter.com/intent/tweet?in_reply_to=${convertToAtob(postID)}`,\n    retweet: `https://twitter.com/intent/retweet?tweet_id=${convertToAtob(postID)}`\n  };\n  return networkID === 1 ? actions[action] : Link;\n};\n\nconst SocialItm = ({ label, hrefClick, Icon, count, itemId = 0, type }) => {\n  const countNo = count > 0 ? kFormatter(count) : \"\";\n  return <div className=\"tb_social_action__list\" role=\"listitem\" aria-roledescription=\"post social action links\">\n    <div onClick={event => { event.stopPropagation(); window.open(hrefClick, \"_blank\"); }} className={`tb_social_action__ico_wrap tb_social_action__ico_wrap_${itemId}`} aria-label={`${label} post ${type} count ${countNo}`} role=\"button\" tabIndex=\"0\">\n      <div className={`tb_social_action_ico__ tb__icon tb-${Icon}`}>  </div>\n      {countNo ? <div className=\"tb_social_action_counts__\">{countNo}</div>:''}\n    </div>\n  </div>\n};\n\nexport default class SocialAction extends PureComponent {\n  componentDidMount() {\n    try {\n      const { Post } = this.props;\n      const socialActionId = `.tb_social_action__ico_wrap_${Post?.id}`;\n      document.querySelector(socialActionId)?.addEventListener('keydown', function (event) {\n        if (event.key === 'Enter' || event.key === ' ') {\n          event.preventDefault();\n          this.click(); // Triggers the existing onClick functionality\n        }\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    const { Post, CardStyle, actionClass } = this.props;\n    const { icon, style } = CardStyle;\n    const iconStyle = { color: !icon.default ? icon.color : style.color };\n\n    const networkID = Post.networkId;\n    const { comment, like } = Post.count;\n    const likeIcon = [3, 10, 7].includes(networkID) ? 'like' : 'heart-outline';\n    const likeIconStatus = [1, 2, 3, 7, 8, 9, 10, 18].includes(networkID);\n    const commentIconStatus = ![29, 19].includes(networkID);\n    const networkName = GET_NETWORK_NAME(networkID);\n\n    return ![29, 26, 23, 6, 5, 11, 12, 15, 20, 21].includes(networkID) ? (\n      <div className={actionClass}>\n        <div className=\"tb_social_action__\" role=\"list\">\n          {likeIconStatus && <SocialItm itemId={Post.id} label={networkName} hrefClick={NetworkAction(networkID, Post.postId, Post.link, 'like')} Icon={likeIcon} iconStyle={iconStyle} count={like} type=\"like\" />}\n          {commentIconStatus && <SocialItm itemId={Post.id} label={networkName} hrefClick={NetworkAction(networkID, Post.postId, Post.link, 'comment')} Icon={\"comment\"} iconStyle={iconStyle} count={comment} type=\"comment\" />}\n          {networkID === 1 && <SocialItm itemId={Post.id} label={networkName} hrefClick={NetworkAction(networkID, Post.postId, Post.link, 'retweet')} Icon={\"retweet\"} iconStyle={iconStyle} count={comment} type=\"comment\" />}\n          <SocialItm label={networkName} itemId={Post.id} hrefClick={Post.link} Icon={\"eye\"} iconStyle={iconStyle} count={0} type=\"view\" />\n        </div>\n      </div>\n    ) : null;\n  }\n}"],"names":["NetworkAction","networkID","postID","Link","action","actions","like","convertToAtob","comment","retweet","SocialItm","_ref","label","hrefClick","Icon","count","itemId","type","countNo","kFormatter","_jsx","className","role","children","_jsxs","onClick","event","stopPropagation","window","open","tabIndex","SocialAction","PureComponent","componentDidMount","_document$querySelect","Post","this","props","socialActionId","id","document","querySelector","addEventListener","key","preventDefault","click","e","console","log","render","CardStyle","actionClass","icon","style","iconStyle","color","default","networkId","likeIcon","includes","likeIconStatus","commentIconStatus","networkName","GET_NETWORK_NAME","postId","link"],"sourceRoot":""}