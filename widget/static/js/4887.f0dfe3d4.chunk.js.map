{"version":3,"file":"static/js/4887.f0dfe3d4.chunk.js","mappings":"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","sources":["app/Themes/HorizontalSlider/index.js"],"sourcesContent":["import React, { PureComponent, Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Splide } from '@splidejs/react-splide';\r\nimport '../scss/ThemesSplide.scss'\r\nimport './scss/HorizontalSlider.scss'\r\nimport { isSocialEmbed, isSocialWall, isTagShop } from \"../../../actions/api\"\r\nimport { detectMobile } from '../../../utils'\r\nimport { nextData } from \"../../../actions/moredataAction\";\r\nconst Card = React.lazy(() => import('./Elements/Card'));\r\n\r\nconst DivWrapper = ({ isTrue, children }) => {\r\n  return isTrue ? <div style={{ display: 'flex', justifyContent: \"center\" }}>{children}</div> : children\r\n}\r\nclass HorizontalSlider extends PureComponent {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { parent_id: '', postData: [] }\r\n    this.inputRefs = {}\r\n  }\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      const classNameRole = document.querySelectorAll('.splide__slide');\r\n      classNameRole && classNameRole.forEach((element) => {element.removeAttribute(\"aria-hidden\");element.removeAttribute(\"role\")});\r\n    }, 100);\r\n\r\n    const { Post } = this.props\r\n    this.setState({ Post })\r\n    window.addEventListener('keydown', this.handleKeyPress);\r\n  }\r\n\r\n  handleKeyPress = event => {\r\n    try {\r\n      const { ThemeStyle } = this.props\r\n      if (ThemeStyle.slide.autoSlide == 1) {\r\n        const isInput = ['INPUT', 'TEXTAREA'].includes(event.target.tagName);\r\n        if (!isInput && event.code === 'Space') {\r\n          const { parentID } = this.props\r\n          event.preventDefault(); // Prevent scrolling the page\r\n          var Autoplay = this.inputRefs[parentID].splide.Components.Autoplay;\r\n          if (Autoplay.isPaused()) Autoplay.play();\r\n          else Autoplay.pause();\r\n        }\r\n      }\r\n    }\r\n    catch (error) {\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyPress);\r\n  }\r\n  requestData = () => {\r\n    const { appendData, preRender, hasMoreData, nextData, ThemeStyle, ThemeInfo } = this.props;\r\n    if (hasMoreData) {\r\n      nextData(\r\n        isTagShop ? ThemeInfo.webId : ThemeInfo.wallId,\r\n        Math.floor(Date.now() / 1000),\r\n        ThemeStyle.totalPosts,\r\n        appendData.networkID,\r\n        appendData.after,\r\n        preRender,\r\n        appendData.heightEvent\r\n      );\r\n    }\r\n  };\r\n  autoScrollSlider = (splide) => {\r\n    const { ThemeStyle } = this.props\r\n    const autoScrollStatus = ThemeStyle.autoScrollStatus;\r\n    if (autoScrollStatus == 1 || isTagShop) {\r\n      const currentIndex = splide.index\r\n      const slideLength = splide.length\r\n      const permove = splide[\"_o\"].perPage\r\n      if (slideLength - currentIndex === permove) this.requestData()\r\n    }\r\n  }\r\n  render() {\r\n    const { postData, completeDataObject, CardStyle, ThemeStyle, ProductSetting, ThemeInfo, clickToShowPopUp, onClickToCTA, postSizeInPx, parentID, loaderData, onClickPopUpSlider, adjustWidth, cardNumber } = this.props;\r\n    const { ownerId } = ThemeInfo\r\n    const inputName = parentID;\r\n    var newPostdata = []\r\n    const numberOfCoumn = ThemeStyle.column.desktop;\r\n    const mobileColumn = ThemeStyle.column.mobile;\r\n    const slidePost = ThemeStyle.slide.autoSlide;\r\n    const slideDuration = ThemeStyle.slide.slideDuration;\r\n    const autoScrollStatus = ThemeStyle.autoScrollStatus;\r\n    const rowCount = !ThemeStyle.row || ThemeStyle.row === 0 ? 1 : (postData.length < 15 && (isSocialWall || isSocialEmbed)) ? 1 : ThemeStyle.row;\r\n\r\n    let isVisible = true\r\n    const cloneStatus = (ThemeInfo.productType == 9 || isTagShop) && (ownerId == 142546 || ownerId == 141171 || ThemeStyle.slide.clonePost !== undefined) ? (ownerId == 142546 || ownerId == 141171 || ThemeStyle.slide.clonePost === 0) ? { clones: 0 } : {} : {};\r\n\r\n\r\n    var i = 0, n = postData.length;\r\n    while (i < n) { newPostdata.push(postData.slice(i, i += rowCount)) }\r\n\r\n\r\n    if (isTagShop && cloneStatus && Object.keys(cloneStatus).length == 0) {\r\n      if (ThemeInfo.wallId == 16677) {\r\n        newPostdata = newPostdata\r\n        if (window.dataFilterType === 'product') isVisible = newPostdata && newPostdata.length >= 5 ? true : false\r\n      }\r\n      else newPostdata = newPostdata.length < 12 ? Array(15 - newPostdata.length).fill(newPostdata).flat() : newPostdata;\r\n    }\r\n\r\n    const isType = autoScrollStatus != 1 ? Object.keys(cloneStatus).length ? false : (ThemeInfo.productType == 9 || 'loop') : (isTagShop ? 'slide' : 'loop')\r\n\r\n    const isCenter = (ownerId == 142546 || ownerId == 141171) && (numberOfCoumn == 0 || mobileColumn == 0) && !detectMobile() ? parseInt(cardNumber) < postData.length ? false : true : false\r\n    const postLength = detectMobile() ? 1 : postData.length\r\n    const settings = {\r\n      ...cloneStatus,\r\n      type: autoScrollStatus === 1 ? false : isType,\r\n      rewind: false,\r\n      speed: 1000,\r\n      interval: slidePost === 1 ? (parseInt(slideDuration) * 1000) : 5000,\r\n      perPage: numberOfCoumn > 0 ? numberOfCoumn : ThemeInfo.productType == 9  ? 3 : postLength > 6 ? 6 : postLength,\r\n      perMove: 1,\r\n      gap: 0,\r\n      autoplay: slidePost === 1 ? true : false,\r\n      padding: 0,\r\n      updateOnMove: true,\r\n      pagination: false,\r\n      arrows: true,\r\n      breakpoints: {\r\n      560: { perPage: Math.max(mobileColumn || 1, 1) },\r\n      767: { perPage: Math.max(mobileColumn || 2, 2) },\r\n      991: { perPage: mobileColumn || Math.min(postLength, 3) },\r\n      1200: { perPage: numberOfCoumn || Math.min(postLength, 4) },\r\n      1400: { perPage: numberOfCoumn || Math.min(postLength, 5) },\r\n      1600: { \r\n        perPage: numberOfCoumn ||  Math.min(postLength, 6)\r\n      }\r\n    }\r\n  }\r\n    return (<>{parentID != \"\" ? <DivWrapper isTrue={isCenter}> <div className=\"tb_hs_post_container\" style={isCenter ? { maxWidth: postData.length * postSizeInPx.adjustWidth } : null}>\r\n      {isVisible ? <Splide hasTrack={false} className=\"tb_hs_post_slider\" options={settings} ref={(parentID) => this.inputRefs[inputName] = parentID} onMove={this.autoScrollSlider}>\r\n        <div className=\"splide__track\">\r\n          <div className=\"splide__list\">\r\n              {\r\n                (ThemeStyle.row > 1 && newPostdata.length !== 1 && newPostdata.length % 2 !== 0 ? newPostdata.pop() : newPostdata) && ((newPostdata && newPostdata.length > 0)) && newPostdata.map((item, index) => {\r\n                  return <div key={`tb_${index}_${index}`} className={`splide__slide splide__${index}`}>\r\n                    <div className=\"tb_hs_col_wrap\">\r\n                      {item.map((subItem) => {\r\n                          const cardData = completeDataObject[subItem];\r\n                          return <Suspense fallback={<div>Loading...</div>}><Card key={cardData.id} Post={cardData} index={index} CardStyle={CardStyle} ThemeStyle={ThemeStyle} ProductSetting={ProductSetting} ThemeInfo={ThemeInfo} clickToShowPopUp={clickToShowPopUp} onClickToCTA={onClickToCTA} postSizeInPx={postSizeInPx} onClickPopUpSlider={onClickPopUpSlider} adjustWidth={adjustWidth} isTrue={isCenter} /></Suspense>\r\n                        })\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                })}\r\n            </div>\r\n          </div>\r\n        <div className=\"splide__arrows splide__arrows--ltr tb_hs_arrow_wrapper_\">\r\n          <div className=\"tb_hs_arrow splide__arrow splide__arrow--prev tb_hs_arrow tb_hs_arrow_left__ tb__icon tb-arrow-left-alt\" role=\"button\" aria-label=\"Go to previous slide\" ><div></div></div>\r\n          <div className={`tb_hs_arrow splide__arrow splide__arrow--next  tb_hs_arrow_right__ tb__icon tb-arrow-right-alt ${loaderData.isShowMoreLoading ? `tb_a_spinner` : ``}`} onClick={isTagShop  ? event => this.requestData() : null} role=\"button\" aria-label=\"Go to next slide\" ><div></div></div>\r\n        </div>\r\n      </Splide> : null}\r\n    </div> </DivWrapper> : null}</>)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loaderData: state.loaderData,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    nextData: (wallID, timeStamp, postCount, networkId, after, postData, heightEvent, updateInStateNow) => dispatch(nextData(wallID, timeStamp, postCount, networkId, after, postData, heightEvent, updateInStateNow)),\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HorizontalSlider);"],"names":["Card","React","DivWrapper","_ref","isTrue","children","_jsx","style","display","justifyContent","HorizontalSlider","PureComponent","constructor","props","super","handleKeyPress","event","ThemeStyle","this","slide","autoSlide","includes","target","tagName","code","parentID","preventDefault","Autoplay","inputRefs","splide","Components","isPaused","play","pause","error","requestData","appendData","preRender","hasMoreData","nextData","ThemeInfo","isTagShop","webId","wallId","Math","floor","Date","now","totalPosts","networkID","after","heightEvent","autoScrollSlider","autoScrollStatus","currentIndex","index","length","perPage","state","parent_id","postData","componentDidMount","setTimeout","classNameRole","document","querySelectorAll","forEach","element","removeAttribute","Post","setState","window","addEventListener","componentWillUnmount","removeEventListener","render","completeDataObject","CardStyle","ProductSetting","clickToShowPopUp","onClickToCTA","postSizeInPx","loaderData","onClickPopUpSlider","adjustWidth","cardNumber","ownerId","inputName","newPostdata","numberOfCoumn","column","desktop","mobileColumn","mobile","slidePost","slideDuration","rowCount","row","isSocialWall","isSocialEmbed","isVisible","cloneStatus","productType","undefined","clonePost","clones","i","n","push","slice","Object","keys","dataFilterType","Array","fill","flat","isType","isCenter","detectMobile","parseInt","postLength","settings","type","rewind","speed","interval","perMove","gap","autoplay","padding","updateOnMove","pagination","arrows","breakpoints","max","min","_Fragment","_jsxs","className","maxWidth","Splide","hasTrack","options","ref","onMove","pop","map","item","subItem","cardData","Suspense","fallback","id","role","isShowMoreLoading","onClick","connect","dispatch","wallID","timeStamp","postCount","networkId","updateInStateNow"],"sourceRoot":""}