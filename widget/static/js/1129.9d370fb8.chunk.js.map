{"version":3,"file":"static/js/1129.9d370fb8.chunk.js","mappings":"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","sources":["app/Components/PostPopUp/Elements/PopUpVideo.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport ReactPlayer from \"react-player\"\r\nimport { isTagShop, isSocialWall } from \"../../../../actions/api\";\r\nimport { reelPlayTimeUpdateData } from \"../../../../utils/Common\";\r\n\r\nexport default class PopUpVideo extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            videoLoaded: false,\r\n            muted: true,\r\n            played: 0\r\n        }\r\n        this.VideoWrap = React.createRef();\r\n    }\r\n\r\n    setVideoLoaded = event => {\r\n        this.setState({\r\n            videoLoaded: event\r\n        })\r\n    }\r\n\r\n    muteToggle = () => {\r\n        this.setState({\r\n            muted: !this.state.muted,\r\n        })\r\n    }\r\n    componentWillUnmount() {\r\n        const { played } = this.state\r\n        if (isTagShop) reelPlayTimeUpdateData(played)\r\n    }\r\n    onUpdateTime = (progress) => {\r\n        try {\r\n            if (isTagShop) {\r\n                const { played } = this.state\r\n                this.setState({\r\n                    played: played + progress.playedSeconds\r\n                })\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n    render() {    \r\n        const { Post, mediaSize } = this.props\r\n        const { videoLoaded, muted } = this.state\r\n        const { media, id, link, networkId } = Post\r\n        const noMuteIcon = [7, 3, 25]\r\n        const muteIcon = !noMuteIcon.includes(Post.networkId) ? true : false\r\n        const { height, width } = mediaSize\r\n        return <div className={`tb_post_modal_video_holder${videoLoaded ? ' tb_post_video_loaded' : ''}`} ref={this.VideoWrap} key={media.video.full} >\r\n            { muteIcon ?\r\n                <div className=\"tb_m_mute_btn\" onClick={this.muteToggle}>\r\n                    <div className={`tb__icon tb-${!muted ? `unmute` : `mute`}`}><div></div></div>\r\n                </div>\r\n                : ''}\r\n            <ReactPlayer\r\n                className={`tb_post_modal_video tb_p_media-${id}`}\r\n                url={media.video.full}\r\n                data-height={height}\r\n                data-width={width}\r\n                data-type=\"video\"\r\n                data-network={networkId}\r\n                data-link={link}\r\n                data-item-id={id}\r\n                data-load={0}\r\n                config={{\r\n                    facebook: {\r\n                        appId: '117029975354072',\r\n                        attributes: {\r\n                            'data-width': width,\r\n                            'data-height': height,\r\n                            poster: media.image.small,\r\n                            muted\r\n                        }\r\n                    },\r\n                    file: {\r\n                        attributes: {\r\n                            preload: 'metadata',\r\n                            poster: media.image.small,\r\n                            muted\r\n                        }\r\n                    }\r\n                }}\r\n                loop={true}\r\n                autoPlay={true}\r\n                muted={muted}\r\n                volume={1}\r\n                playsinline={true}\r\n                onReady={(e) => { this.setVideoLoaded(true) }}\r\n                playing={true}\r\n                height={'100%'}\r\n                width={'100%'}\r\n                controls={!muteIcon ? true : false}\r\n                onProgress={this.onUpdateTime}\r\n            />\r\n            {!videoLoaded ? <div className='tb_post_modal_spinner'><div></div></div> : null}\r\n        </div>\r\n    }\r\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["PopUpVideo","PureComponent","constructor","props","super","setVideoLoaded","event","this","setState","videoLoaded","muteToggle","muted","state","onUpdateTime","progress","isTagShop","played","playedSeconds","e","console","log","VideoWrap","React","componentWillUnmount","reelPlayTimeUpdateData","render","Post","mediaSize","media","id","link","networkId","muteIcon","includes","height","width","_jsxs","className","ref","children","_jsx","onClick","ReactPlayer","url","video","full","config","facebook","appId","attributes","poster","image","small","file","preload","loop","autoPlay","volume","playsinline","onReady","playing","controls","onProgress","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"sourceRoot":""}