{"version":3,"file":"static/js/9554.1dae6183.chunk.js","mappings":"qLAGA,MAAMA,EAAiBC,EAAAA,MAAW,IAAM,kCA+BxC,EA9BmBC,IACZ,MAAM,KAAEC,EAAI,UAAEC,EAAS,SAAEC,EAAQ,UAAEC,EAAS,KAAEC,GAASL,EACjDM,IAAe,CAAC,EAAE,GAAGC,SAASN,EAAKO,MACnCC,EAAqC,IAApBR,EAAKS,QAAQC,GAC9BC,KAAiBX,EAAKY,WAAaZ,EAAKY,UAAUC,OAAS,GAC3DC,EAA2B,IAAjBd,EAAKc,QACfC,IAAaf,EAAKgB,UAElBC,GAAUC,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACC,UAAUF,EAAAA,EAAAA,KAAAG,EAAAA,SAAA,IAAMC,UAACJ,EAAAA,EAAAA,KAACrB,EAAc,CAACY,QAAS,CAAE,GAAM,EAAG,KAAQ,UAAW,KAAQ,WAAac,aAAc,qBAC/HC,GAAgBN,EAAAA,EAAAA,KAAA,OAAKO,UAAW,uCAAuCH,SAAC,OACxEI,GAAYR,EAAAA,EAAAA,KAAA,OAAKO,UAAU,iCAAgCH,SAAC,OAC5DK,GAAYT,EAAAA,EAAAA,KAAA,OAAKO,UAAW,gBAAeG,EAAAA,GAAa,wBAAwB,sBAAuBN,SAAC,OACxGO,GAAgBX,EAAAA,EAAAA,KAAA,OAAKO,UAAU,8BAA6BH,SAAC,OAC7DQ,GAAmBZ,EAAAA,EAAAA,KAAA,OAAKO,UAAU,8CAA6CH,SAAC,OAEtF,OAAOlB,GAAO2B,EAAAA,EAAAA,MAAAV,EAAAA,SAAA,CAAAC,SAAA,CAAGpB,IAAaM,GAAiBH,IACxC0B,EAAAA,EAAAA,MAAA,OAAKN,UAAW,GAAGxB,oBAA4BqB,SAAA,CACvCjB,IAAgBG,EAAgBsB,EAAmB,GACnDzB,GAAeG,EAAgBS,EAAU,MAEhD,KAEAF,GAAcJ,GAAiBN,GAChC0B,EAAAA,EAAAA,MAAA,OAAKN,UAAW,GAAGxB,mBAA2BqB,SAAA,CACtCP,EAAac,EAAgB,GAC7BlB,EAAgBa,EAAgB,GAC/BtB,IAAYG,GAAgBG,GAAkBL,EAA8C,GAAlCW,EAAUY,EAAYC,KACjF,QACF,IAAI,C,uJC5BxB,MAaA,EAbcK,IAAgE,IAA/D,KAAEhC,EAAI,UAAEiC,EAAS,WAAEC,EAAU,UAAEC,EAAS,MAAEC,EAAK,OAAEC,GAAQL,EAEtE,MAAMM,KAAU,CAAC,EAAE,GAAGhC,SAASN,EAAKO,QAAS4B,GAAqC,GAAvBD,EAAWK,UAEtE,OAAOR,EAAAA,EAAAA,MAAA,OAAKN,UAAU,mBAAkBH,SAAA,EACtCJ,EAAAA,EAAAA,KAACsB,EAAAA,QAAS,CAACxC,KAAMA,EAAMC,UAAU,mBAAmBG,MAAM,EAAMD,WAAW,IAC1EmC,GACCpB,EAAAA,EAAAA,KAACuB,EAAAA,EAAK,CAACC,WAAW,cAAc1C,KAAMA,EAAM2C,KAJnC,IAI+CC,SAAS,EAAMC,OAAO,EAAMN,UAAU,EAAMO,UAAU,EAAOV,MAAOA,EAAOC,OAAQA,KAE3InB,EAAAA,EAAAA,KAAC6B,EAAAA,EAAK,CAACC,WAAW,cAAchD,KAAMA,EAAM2C,KANnC,IAM+CG,UAAU,EAAOV,MAAOA,EAAOC,OAAQA,MAE7F,E,qCCTR,MAAMY,EAAUnD,EAAAA,MAAW,IAAM,kCAC3BoD,EAAapD,EAAAA,MAAW,IAAM,kCAGrB,MAAMqD,UAAaC,EAAAA,cAChCC,iBAAAA,GACE,MAAM,KAAErD,EAAI,mBAAEsD,EAAkB,UAAEC,GAAcC,KAAKzD,MACjDC,EAAKyD,SACPH,EAAmBC,EAAWvD,EAElC,CAEA0D,MAAAA,GACE,MAAM,UAAEH,EAAS,UAAEpB,EAAS,iBAAEwB,EAAgB,WAAEzB,EAAU,UAAED,EAAS,KAAEjC,EAAI,MAAEoC,EAAK,eAAEwB,GAAoBJ,KAAKzD,OAEvG,MAAE8D,EAAK,UAAEC,GAAc9D,GACvB,MAAE+D,EAAK,QAAEC,GAAa/B,EACtBgC,EAAY,CAAEC,gBAAiBH,EAAMI,YACrCC,KAAYC,EAAAA,IAAmC,IAAtBpC,EAAUqC,WAAmBtE,EAAKgB,WAAegD,EAAQO,QAClFC,EAA2B,GAAdT,EAAMU,MAAaJ,EAAAA,GAAa,QAAU,OACvDK,KAAa,CAAC,EAAG,GAAGpE,SAASN,EAAKO,OAAwC,IAA9B0B,EAAU0C,kBAA8B,OAALd,QAAK,IAALA,OAAK,EAALA,EAAOe,OAAQ,GAEpG,OACE1D,EAAAA,EAAAA,KAAC2D,EAAAA,EAAa,CAAAvD,SACXU,IAAA,IAAC,IAAE8C,EAAG,OAAEzC,GAAQL,EAAA,OACfd,EAAAA,EAAAA,KAAA,OAAK,UAASlB,EAAKU,GAAIA,GAAI,YAAYV,EAAKU,KAAMe,UAAU,qBAAqBqD,IAAKA,EAAKf,MAAO,CAAEgB,QAAShB,EAAMgB,QAAU,EAAGC,QAAS3C,EAAS,EAAI,EAAG4C,WAAY5C,EAAS,0BAA4B,IAAM,aAAYrC,EAAKe,WAAa,EAAIf,EAAKkF,UAAY,EAAI,EAAG,aAAYlF,EAAKgE,QAAQmB,KAAMC,KAAK,UAAU,UAASpF,EAAKqF,YAAcrF,EAAKqF,YAAcrF,EAAKU,GAAI,UAASV,EAAKsF,OAAOhE,UACnYS,EAAAA,EAAAA,MAAA,OAAKN,UAAW,kCAAkC4C,EAAAA,GAAsC,GAA1B,yBAAgCN,MAAOE,EAAWsB,QAAS5B,EAAiBJ,EAAWvD,GAAOoF,KAAK,SAAS,aAAW,QAAQI,SAAU,EAAElE,SAAA,CACtMoD,GAAYxD,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAAC5B,MAAY,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOe,QAAY,MAClD1D,EAAAA,EAAAA,KAACwE,EAAK,CAAC1F,KAAMA,EAAMiC,UAAWA,EAAWC,WAAYA,EAAY0B,eAAgBA,EAAiBzB,UAAWA,EAAWC,MAAOA,EAAOC,OAAQA,IAC5IgC,EAAAA,GAIE,MAHFnD,EAAAA,EAAAA,KAAA,OAAKO,UAAU,iBAAgBH,UAC7BJ,EAAAA,EAAAA,KAAA,OAAKO,UAAU,mBAAkBH,UAACJ,EAAAA,EAAAA,KAAA,eAItCa,EAAAA,EAAAA,MAAA,OAAKN,UAAU,qBAAoBH,SAAA,EACjCJ,EAAAA,EAAAA,KAAA,OAAKO,UAAU,gBAAeH,UAC5BJ,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACC,UAAUF,EAAAA,EAAAA,KAAAG,EAAAA,SAAA,IAAMC,UAACJ,EAAAA,EAAAA,KAAC+B,EAAO,CAAC1B,aAAc,oBAAqBuC,UAAWA,EAAW6B,UAAW1D,EAAU2D,WAEnHxB,GAAYlD,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACC,UAAUF,EAAAA,EAAAA,KAAAG,EAAAA,SAAA,IAAMC,UAACJ,EAAAA,EAAAA,KAACgC,EAAU,CAACjB,UAAWA,EAAW4D,SAAU,qBAAkC,SAExH3E,EAAAA,EAAAA,KAAA,OAAKO,UAAW,yCAAyC+C,IAAYlD,UAACJ,EAAAA,EAAAA,KAAA,gBAEpE,GAId,E,0BC1CF,MAAM4E,UAAkBC,EAAAA,UACtBC,WAAAA,CAAYjG,GACVkG,MAAMlG,GAAO,KAQfmG,YAAeC,IACb,MAAM,WAAEC,EAAU,UAAEC,EAAS,WAAEnE,EAAU,YAAEoE,EAAW,SAAEC,EAAQ,WAAEC,EAAU,cAAEC,GAAkBjD,KAAKzD,MACjGoG,EAAOO,SAAW,IAAOJ,IAAgBE,EAAWG,mBACtDJ,EACElC,EAAAA,GAAqB,OAATgC,QAAS,IAATA,OAAS,EAATA,EAAWO,MAAiB,OAATP,QAAS,IAATA,OAAS,EAATA,EAAWQ,OAC1CC,KAAKC,MAAMC,KAAKC,MAAQ,MACxBC,EAAAA,EAAAA,IAAeT,EAAcU,MAAOjF,EAAWkF,OAAQ,KACvDhB,EAAWiB,UACXjB,EAAWkB,MACXlB,EAAWmB,YAEf,EACD,KAMDC,WAAcC,GAAMjE,KAAKkE,SAAS,CAAEC,UAAW,IAAM,IAAKC,YAAW,IAAMpE,KAAKzD,MAAM8H,gBAAmB,IAAFJ,KAzBrGjE,KAAKsE,UAAY,CAAC,EAElBtE,KAAKuE,MAAQ,CACXJ,UAAW,EAEf,CAgBAK,kBAAAA,GACExE,KAAKzD,MAAMkI,cACb,CAIAvE,MAAAA,GACE,MAAM,SAAEwE,EAAQ,mBAAEC,EAAkB,iBAAExE,EAAgB,YAAE2C,EAAW,SAAE8B,EAAQ,UAAEC,EAAS,mBAAE/E,EAAkB,UAAErB,EAAS,WAAEC,EAAU,eAAE0B,EAAc,UAAEyC,EAAS,cAAEI,GAAkBjD,KAAKzD,MACjLuI,EAAYF,EACZG,EAAerG,EAAWkF,OAAOoB,OACjCC,EAAYvG,EAAWwG,MAAMC,UAC7BC,EAAgB1G,EAAWwG,MAAME,eACjC,SAAEjB,GAAanE,KAAKuE,MACpBc,EAAepC,EAAcU,MAAQ,IAAM,IAAM,IACjD2B,EAAYC,EAAAA,IAAY,CAAC,QAAQzI,SAAkB,OAAT+F,QAAS,IAATA,OAAS,EAATA,EAAW2C,SAAW,EAAI,GACpEC,GAAW/B,EAAAA,EAAAA,IAAeT,EAAcU,MAAOjF,EAAWkF,OAAQyB,GAExE,OACE3H,EAAAA,EAAAA,KAAAG,EAAAA,SAAA,CAAAC,SACG8G,IACClH,EAAAA,EAAAA,KAAA,OAAKO,UAAU,iCAAiCqD,IAAKtB,KAAK0F,aAAa5H,UACrEJ,EAAAA,EAAAA,KAACiI,EAAAA,GAAM,CACLrG,UAAU,EACVsG,gBAAgB,EAChBC,aAAc,EAEdvE,IAAMsD,GAAc5E,KAAKsE,UAAUQ,GAAaF,EAChDrE,MAAO,CAAEoD,MAAO,QAChBmC,SAAWnD,IAAa3C,KAAK0C,YAAYC,GAAawB,GAAWnE,KAAKgE,WAAW,EAAE,EACnF+B,YAAcpD,IAAa3C,KAAK0C,YAAYC,GAAawB,GAAWnE,KAAKgE,WAAW,EAAG,EACvFgC,WAAarD,IAAa3C,KAAK0C,YAAYC,GAAawB,GAAWnE,KAAKgE,YAAYiC,EAAAA,EAAAA,OAAkBlB,GAAgBK,EAAc,EAAI,EAAI,EAAG,EAC/Ic,MAAO,IACPC,oBAAoB,EACpBC,cAAeX,EAAUH,EACzBe,WAAY,GACZC,SAASL,EAAAA,EAAAA,MACTM,kBAAkB,EAClBC,SAAU,CAAEC,SAAS,EAAMC,QAAQ,EAAOC,oBAAqB,EAAGC,sBAAuB,GACzFC,YAAUhG,EAAAA,KAAa0E,EAAAA,KAAW,CAAEuB,MAAqB,IAAd7B,EAAkC,IAAhBG,EAAuB,KAAO2B,sBAAsB,EAAOC,mBAAmB,GAC3IC,MAAOnE,EACPoE,WAAY,CAAEC,aAAa,EAAMC,YAAa,GAC9CC,qBAAqB,EACrBC,QAAS,CAACC,EAAAA,GAAUC,EAAAA,GAAYC,EAAAA,IAChCxJ,UAAU,oBAAmBH,UAEpB,OAAR4G,QAAQ,IAARA,OAAQ,EAARA,EAAUrH,QAAS,GAClBqH,EAASgD,KAAI,CAACC,EAAM/I,KAClB,MAAMgJ,EAAWjD,EAAmBgD,GACpC,OAAQ9G,EAAAA,IAA+B,IAAlB+G,EAAS7K,MAC5BW,EAAAA,EAAAA,KAACmK,EAAAA,GAAW,CACR,UAASD,EAAS1K,GAElB4K,KAAMlD,EAAU3G,UAAW,MAAM2J,EAAS1K,KAAKY,SAC9CU,IAAA,IAAC,UAAEG,GAAWH,EAAA,OACbd,EAAAA,EAAAA,KAACiC,EAAI,CAAchB,UAAWA,EAAWnC,KAAMoL,EAAUhJ,MAAOA,EAAOH,UAAWA,EAAWC,WAAYA,EAAY0B,eAAgBA,EAAgByC,UAAWA,EAAW1C,iBAAkBA,EAAkBL,mBAAoBA,GAAvNlB,EAA6O,GAHtP,GAAGgJ,EAAS1K,MAAM0B,KAMzB,IAAI,KAhCPiG,MAuCjB,EAKF,MASA,GAAekD,EAAAA,EAAAA,OAAKC,EAAAA,EAAAA,KATKzD,IAAK,CAC5BvB,WAAYuB,EAAMvB,eAGQiF,IAAQ,CAClClF,SAAUA,CAACmF,EAAQC,EAAWC,EAAW9H,EAAWwD,EAAOY,EAAUX,EAAasE,IAChFJ,GAASlF,EAAAA,EAAAA,IAASmF,EAAQC,EAAWC,EAAW9H,EAAWwD,EAAOY,EAAUX,EAAasE,OAGzEL,CAA6C1F,G","sources":["app/Themes/Elements/MediaIcon/MediaIcon.js","app/Themes/ReelTheme/Elements/Media.js","app/Themes/ReelTheme/Elements/Card.js","app/Themes/ReelTheme/index.js"],"sourcesContent":["import React, { Suspense } from \"react\";\r\nimport { isSocialWall } from \"../../../../actions/api\";\r\nimport \"./scss/MediaIcon.scss\"\r\nconst DefaultNetwork = React.lazy(() => import(\"../Network/DefaultNetwork\"));\r\nconst MediaIcon = (props) => {\r\n       const { Post, IconClass, isCenter, hideVideo, show } = props;\r\n       const isMediaType = ([3,5].includes(Post.type)) ? true : false\r\n       const isYoutubePost = (Post.network.id === 7) ? true : false\r\n       const isMultiImages = (Post.mediaList && Post.mediaList.length > 0) ? true : false\r\n       const isAudio = Post.isAudio === 1 ? true : false\r\n       const isShopIcon = Post.isProduct ? true : false;\r\n       \r\n       const youtube = <Suspense fallback={<></>}><DefaultNetwork network={{ \"id\": 7, \"name\": \"YouTube\", \"icon\": \"youtube\" }} networkClass={'tb_youtube_ico'} /></Suspense>\r\n       const multipleMedia = <div className={`tb_multiple_ico tb__icon tb-multiple`}>  </div>\r\n       const audioIcon = <div className=\"tb_audio_ico tb__icon tb-audio\">  </div>\r\n       const videoIcon = <div className={`tb__icon tb-${isSocialWall?'reel-fill tb_reel_ico':'video tb_video_ico'}`}>  </div>\r\n       const shoppableIcon = <div className=\"tb_shop_ico tb__icon tb-bag\">  </div>\r\n       const roundedVideoIcon = <div className=\"tb_center_video_ico tb__icon tb-play-circle\">  </div>\r\n\r\n       return show ? <>{isCenter && (isYoutubePost || isMediaType) ? \r\n              <div className={`${IconClass} tb__media_ico_c`}>\r\n                     {isMediaType && !isYoutubePost ? roundedVideoIcon : ''}\r\n                     {isMediaType && isYoutubePost ? youtube : ''}\r\n              </div>\r\n              :null}\r\n              \r\n              {isShopIcon || isMultiImages || isMediaType ?\r\n              <div className={`${IconClass} tb__media_ico_`}>\r\n                     {isShopIcon ? shoppableIcon : ''}\r\n                     {isMultiImages ? multipleMedia : ''}\r\n                     {!isCenter && isMediaType && !isYoutubePost && !hideVideo ? isAudio ? audioIcon : videoIcon : ''}\r\n              </div>: null}\r\n              </> : null\r\n}\r\nexport default MediaIcon","import React from \"react\";\r\nimport Image from '../../Elements/Media/Image';\r\nimport Video from '../../Elements/Media/Video';\r\nimport MediaIcon from '../../Elements/MediaIcon/MediaIcon';\r\nconst Media = ({ Post, CardStyle, ThemeStyle, isVisible, index, inView }) => {\r\n\r\n  const isVideo = [3,5].includes(Post.type) && isVisible && (ThemeStyle.autoPlay == 1) ? true : false\r\n  const size = 178\r\n  return <div className=\"tb_rt_media_wrap\">\r\n    <MediaIcon Post={Post} IconClass=\"tb_rt_media_icon\" show={true} hideVideo={true} />\r\n    {isVideo ?\r\n      <Video VideoClass=\"tb_rt_video\" Post={Post} size={size} isCover={true} muted={true} autoPlay={true} observer={false} index={index} inView={inView} />\r\n      :\r\n      <Image ImageClass=\"tb_rt_image\" Post={Post} size={size} observer={false} index={index} inView={inView} />\r\n    }\r\n  </div>\r\n}\r\nexport default Media","import React, { PureComponent, Suspense } from \"react\";\r\nimport Media from \"./Media\";\r\nimport { isTagShop } from \"../../../../actions/api\";\r\nimport ViewCount from '../../Elements/ViewCount';\r\nimport InViewWrapper from '../../Elements/InViewWrapper';\r\n\r\nconst Network = React.lazy(() => import('../../Elements/Network/Network'));\r\nconst ShopButton = React.lazy(() => import('../../Elements/ShopButton/ShopButton'));\r\n\r\n\r\nexport default class Card extends PureComponent {\r\n  componentDidMount() {\r\n    const { Post, onClickPopUpSlider, itemIndex } = this.props\r\n    if (Post.isPopUp) {\r\n      onClickPopUpSlider(itemIndex, Post)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { itemIndex, isVisible, clickToShowPopUp, ThemeStyle, CardStyle, Post, index, ProductSetting  } = this.props;\r\n\r\n    const { count, networkId } = Post\r\n    const { style, content, } = CardStyle\r\n    const cardStyle = { backgroundColor: style.backgournd };\r\n    const isShopBtn = isTagShop && CardStyle.shopText != '' && (Post.isProduct) && !content.status ? true : false;\r\n    const themeMode = (style.mode == 0 && isTagShop) ? 'light' : 'dark'\r\n    const reelCount = ([3, 5].includes(Post.type)) && CardStyle.viewCountStatus === 1 && count?.views > 0 ? true : false\r\n\r\n    return (\r\n      <InViewWrapper>\r\n        {({ ref, inView }) => (\r\n          <div data-id={Post.id} id={`tb_rt_id-${Post.id}`} className=\"tb_rt_post_wrapper\" ref={ref} style={{ padding: style.padding / 2, opacity: inView ? 1 : 0, transition: inView ? 'opacity .2s ease-in-out' : '' }} tb-product={Post.isShopIcon ? 1 : Post.isHotspot ? 2 : 0} area-label={Post.content.text} role=\"article\" post-id={Post.referenceId ? Post.referenceId : Post.id} feed-id={Post.feedId}>\r\n            <div className={`tb_rt_post_in tb_icon_animate ${!isTagShop ? 'tb_rt_post_in_animate' : ''}`} style={cardStyle} onClick={clickToShowPopUp(itemIndex, Post)} role=\"button\" aria-label=\"Popup\" tabIndex={0}>\r\n              {reelCount ? <ViewCount count={count?.views} /> : null}\r\n              <Media Post={Post} CardStyle={CardStyle} ThemeStyle={ThemeStyle} ProductSetting={ProductSetting}  isVisible={isVisible} index={index} inView={inView} />\r\n              {!isTagShop ?\r\n                <div className=\"tb_rt_play_ico\">\r\n                  <div className=\"tb__icon tb-play\"><div></div></div>\r\n                </div>\r\n                : null}\r\n\r\n              <div className=\"tb_rt_post_details\">\r\n                <div className=\"tb_rt_social_\">\r\n                  <Suspense fallback={<></>}><Network networkClass={'tb_rt_social_ico_'} networkId={networkId} iconStyle={CardStyle.icon} /></Suspense>\r\n                </div>\r\n                {isShopBtn ? <Suspense fallback={<></>}><ShopButton CardStyle={CardStyle} btnClass={'tb_rt_btn_wrap'} /></Suspense> : null}\r\n              </div>\r\n              <div className={`tb_rt_post_overlay tb_rt_post_overlay-${themeMode}`}><div></div></div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </InViewWrapper>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, memo, Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Autoplay, FreeMode, Mousewheel } from 'swiper/modules';\r\nimport '../scss/ThemesSwiper.scss';\r\nimport './scss/ReelTheme.scss';\r\nimport Card from \"./Elements/Card\"; \r\nimport { isTagShop, isTagbox } from '../../../actions/api';\r\nimport { detectMobile, getColumnCount } from \"../../../utils\";\r\nimport { nextData } from \"../../../actions/moredataAction\";\r\n\r\nclass ReelTheme extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.inputRefs = {};\r\n\r\n    this.state = {\r\n      loadData : false \r\n    }\r\n  }\r\n\r\n  requestData = (swiper) => {\r\n    const { appendData, ThemeInfo, ThemeStyle, hasMoreData, nextData, loaderData, containerSize } = this.props;\r\n    if (swiper.progress > 0.8 && hasMoreData && !loaderData.isShowMoreLoading) { \r\n      nextData(\r\n        isTagShop ? ThemeInfo?.webId : ThemeInfo?.wallId,\r\n        Math.floor(Date.now() / 1000),\r\n        getColumnCount(containerSize.width, ThemeStyle.column, 280),\r\n        appendData.networkID,\r\n        appendData.after,\r\n        appendData.heightEvent\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.props.loadBranding()\r\n  }\r\n\r\n  updatepost = (e)=>  this.setState({ loadData : true},()=> setTimeout(() => this.props.loadMoredata(), (e*1000)))\r\n      \r\n  render() {\r\n    const { postData, completeDataObject, clickToShowPopUp, hasMoreData, parentID, keyRender, onClickPopUpSlider, CardStyle, ThemeStyle, ProductSetting, ThemeInfo, containerSize } = this.props;\r\n    const inputName = parentID;\r\n    const mobileColumn = ThemeStyle.column.mobile;\r\n    const slidePost = ThemeStyle.slide.autoSlide;\r\n    const slideDuration = ThemeStyle.slide.slideDuration;\r\n    const { loadData } = this.state\r\n    const minCardSize =  containerSize.width > 767 ? 260 : 280;\r\n    const halfSlide = isTagbox && [151513].includes(ThemeInfo?.ownerId) ? 0 : 0.4;\r\n    const columns =  getColumnCount(containerSize.width, ThemeStyle.column, minCardSize);\r\n\r\n    return (\r\n      <>\r\n        {parentID && (\r\n          <div className=\"tb_rt_post_container tb_swiper\" ref={this.sliderHeight}>\r\n            <Swiper\r\n              observer={true}\r\n              observeParents={true}\r\n              spaceBetween={0} \r\n              key={keyRender}\r\n              ref={(parentID) => (this.inputRefs[inputName] = parentID)}\r\n              style={{ width: '100%' }}\r\n              onScroll={(swiper) => { this.requestData(swiper); if(!loadData){ this.updatepost(3)}}}\r\n              onTouchMove={(swiper) => { this.requestData(swiper); if(!loadData){ this.updatepost(0) }}}\r\n              onAutoplay={(swiper) => { this.requestData(swiper); if(!loadData){ this.updatepost( detectMobile() && mobileColumn && slideDuration<5 ? 0 : 5) }}}\r\n              speed={700} // Adjust speed for slower animation\r\n              edgeSwipeDetection={true}\r\n              slidesPerView={columns + halfSlide}\r\n              touchRatio={.5} // Reduce touch ratio for slower dragging\r\n              cssMode={detectMobile()}\r\n              passiveListeners={true}\r\n              freeMode={{ enabled: true, sticky: false, momentumBounceRatio: 1, momentumVelocityRatio: 1 }} // Adjust momentum for slower dragging\r\n              autoplay={isTagShop || isTagbox ? { delay: slidePost === 1 ? slideDuration * 1000 : 99000, disableOnInteraction: false, pauseOnMouseEnter: true } : false}\r\n              loop={!hasMoreData}\r\n              mousewheel={{ forceToAxis: true, sensitivity: 1 }} // Reduce sensitivity for slower mousewheel scrolling\r\n              watchSlidesProgress={true}\r\n              modules={[Autoplay, Mousewheel, FreeMode]}\r\n              className=\"tb_rt_post_slider\"\r\n            >\r\n              {postData?.length > 0 &&\r\n                postData.map((item, index) => {\r\n                  const cardData = completeDataObject[item];\r\n                  return (isTagShop || cardData.type !== 1) ? (\r\n                    <SwiperSlide \r\n                        data-id={cardData.id} \r\n                        key={`${cardData.id}-${index}`}  // Use a combination of cardData.id and index for uniqueness\r\n                        p_id={parentID} className={`tb_${cardData.id}`}>\r\n                        {({ isVisible }) => (\r\n                          <Card  key={index} isVisible={isVisible} Post={cardData} index={index} CardStyle={CardStyle} ThemeStyle={ThemeStyle} ProductSetting={ProductSetting} ThemeInfo={ThemeInfo} clickToShowPopUp={clickToShowPopUp} onClickPopUpSlider={onClickPopUpSlider} />\r\n                        )}\r\n                    </SwiperSlide>\r\n                  ) : null;\r\n                })}\r\n            </Swiper>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loaderData: state.loaderData,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  nextData: (wallID, timeStamp, postCount, networkId, after, postData, heightEvent, updateInStateNow) =>\r\n    dispatch(nextData(wallID, timeStamp, postCount, networkId, after, postData, heightEvent, updateInStateNow)),\r\n});\r\n\r\nexport default memo(connect(mapStateToProps, mapDispatchToProps)(ReelTheme));"],"names":["DefaultNetwork","React","props","Post","IconClass","isCenter","hideVideo","show","isMediaType","includes","type","isYoutubePost","network","id","isMultiImages","mediaList","length","isAudio","isShopIcon","isProduct","youtube","_jsx","Suspense","fallback","_Fragment","children","networkClass","multipleMedia","className","audioIcon","videoIcon","isSocialWall","shoppableIcon","roundedVideoIcon","_jsxs","_ref","CardStyle","ThemeStyle","isVisible","index","inView","isVideo","autoPlay","MediaIcon","Video","VideoClass","size","isCover","muted","observer","Image","ImageClass","Network","ShopButton","Card","PureComponent","componentDidMount","onClickPopUpSlider","itemIndex","this","isPopUp","render","clickToShowPopUp","ProductSetting","count","networkId","style","content","cardStyle","backgroundColor","backgournd","isShopBtn","isTagShop","shopText","status","themeMode","mode","reelCount","viewCountStatus","views","InViewWrapper","ref","padding","opacity","transition","isHotspot","text","role","referenceId","feedId","onClick","tabIndex","ViewCount","Media","iconStyle","icon","btnClass","ReelTheme","Component","constructor","super","requestData","swiper","appendData","ThemeInfo","hasMoreData","nextData","loaderData","containerSize","progress","isShowMoreLoading","webId","wallId","Math","floor","Date","now","getColumnCount","width","column","networkID","after","heightEvent","updatepost","e","setState","loadData","setTimeout","loadMoredata","inputRefs","state","componentDidUpdate","loadBranding","postData","completeDataObject","parentID","keyRender","inputName","mobileColumn","mobile","slidePost","slide","autoSlide","slideDuration","minCardSize","halfSlide","isTagbox","ownerId","columns","sliderHeight","Swiper","observeParents","spaceBetween","onScroll","onTouchMove","onAutoplay","detectMobile","speed","edgeSwipeDetection","slidesPerView","touchRatio","cssMode","passiveListeners","freeMode","enabled","sticky","momentumBounceRatio","momentumVelocityRatio","autoplay","delay","disableOnInteraction","pauseOnMouseEnter","loop","mousewheel","forceToAxis","sensitivity","watchSlidesProgress","modules","Autoplay","Mousewheel","FreeMode","map","item","cardData","SwiperSlide","p_id","memo","connect","dispatch","wallID","timeStamp","postCount","updateInStateNow"],"sourceRoot":""}