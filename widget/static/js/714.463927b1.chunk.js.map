{"version":3,"file":"static/js/714.463927b1.chunk.js","mappings":"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","sources":["app/Themes/Elements/Hotspot/Hotspot.js"],"sourcesContent":["import React, { memo, useCallback, useMemo, useState, useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Tooltip } from 'react-tooltip';\r\nimport \"./scss/Hotspot.scss\";\r\nimport { themePostTracking } from \"../../../../actions/moredataAction\";\r\nimport AppendedView from \"../../../../AppendedView\";\r\n\r\n// Memoized components to prevent unnecessary re-renders\r\nconst TooltipContent = memo(({ item }) => {\r\n  const hasDiscount = item.discount > 0 && item.discount !== item.price;\r\n  const displayPrice = item.discount > 0 ? item.discount : item.price;\r\n\r\n  return (\r\n    <a hotspot={1} href={item.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"tb_tooltip_wrap\">\r\n      <div hotspot={1} className=\"tb_p_tooltip_title\">{item.title}</div>\r\n      {hasDiscount && (\r\n        <div hotspot={1} className=\"tb_p_tooltip_price tb_price_disabled\">\r\n          {item.currency}{item.price}\r\n        </div>\r\n      )}\r\n      {(item.price > 0 || item.discount > 0) && (\r\n        <div hotspot={1} className=\"tb_p_tooltip_price\">\r\n          {item.currency}{displayPrice}\r\n        </div>\r\n      )}\r\n    </a>\r\n  );\r\n});\r\n\r\nconst HotspotComponent = ({ products, appData, Post, showTooltip, isPopup }) => {\r\n  const [activeIndex, setActiveIndex] = useState(null);\r\n\r\n  // Memoized hotspot configuration\r\n  const hotspotConfig = useMemo(() => (\r\n    appData?.wall?.ProductSetting?.Hotspot || {}\r\n  ), [appData]);\r\n\r\n  // Effect to handle showTooltip prop\r\n  useEffect(() => {\r\n    if (showTooltip) {\r\n      const productIndex = products.findIndex((product) => product.id === showTooltip);\r\n      if (productIndex !== -1) {\r\n        setActiveIndex(productIndex);\r\n      }\r\n    } else {\r\n      setActiveIndex(null); // Reset active index if showTooltip is 0\r\n    }\r\n  }, [showTooltip, products]);\r\n\r\n\r\n  // Stable event handlers\r\n  const handleTracking = useCallback((product) => {\r\n    if (appData?.wall) {\r\n      themePostTracking({ type: 1, action: 2, wall: appData?.wall?.ThemeInfo?.webId, product_id: product.id, post: Post.referenceId, owner: appData?.wall?.ThemeInfo?.ownerId, feed: Post.feedId, currency: product.currencyCode, price: Number(product.discount) > 0 ? product.discount : product.price })\r\n    }\r\n  }, [appData, Post]);\r\n\r\n  const handleHotspotClick = useCallback((event, item) => {\r\n    event.stopPropagation();\r\n    handleTracking(item);\r\n    window.open(item.url, '_blank');\r\n  }, [handleTracking]);\r\n\r\n  if (!hotspotConfig?.status) return null;\r\n\r\n\r\n  return products.map((item, index) => {\r\n    const tooltipId = `hotspot-${item.id}-${index}${isPopup ? '-pop' : ''}`;\r\n    const isActive = activeIndex === index;\r\n\r\n    return (\r\n      <div\r\n        key={`${item.id}-${index}`}\r\n        id={tooltipId}\r\n        className={`tb_hotspot_dot${isActive ? ' tb_hotspot_active_' : ''}`}\r\n        role=\"button\"\r\n        style={{\r\n          top: item.hotspot.top,\r\n          left: item.hotspot.left\r\n        }}\r\n        onMouseEnter={() => setActiveIndex(index)}\r\n        onMouseLeave={() => setActiveIndex(null)}\r\n        onClick={(e) => { handleHotspotClick(e, item) }}\r\n        data-tooltip-offset={7}\r\n      >\r\n        <div hotspot={1} className={`tb_hotspot__ ${hotspotConfig.type === 0 ? 'tb_hotspot_ani__' : ''}`}>\r\n          {index + 1}\r\n        </div>\r\n        <AppendedView wallId={tooltipId}>\r\n          <Tooltip\r\n            appendTo=\"body\"\r\n            data-tooltip-id={`tooltip-${item.id}-${index}${isPopup ? '-pop' : ''}`}\r\n            key={index}\r\n            className=\"tb_pro_tooltip\"\r\n            anchorSelect={`#${tooltipId}`}\r\n            clickable\r\n            {...(isPopup ? { isOpen: isActive } : {})} // Add `isOpen` only when `isPopup` is true\r\n          >\r\n            <TooltipContent item={item} />\r\n          </Tooltip>\r\n        </AppendedView>\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\n\r\n// Memoize the main component\r\nconst Hotspot = memo(HotspotComponent);\r\n\r\n// Optimized Redux connection\r\nconst mapState = (state) => ({ appData: state.appData });\r\nexport default connect(mapState)(Hotspot);"],"names":["TooltipContent","memo","_ref","item","hasDiscount","discount","price","displayPrice","_jsxs","hotspot","href","url","target","rel","className","children","_jsx","title","currency","HotspotComponent","_ref2","products","appData","Post","showTooltip","isPopup","activeIndex","setActiveIndex","useState","hotspotConfig","useMemo","_appData$wall","_appData$wall$Product","wall","ProductSetting","Hotspot","useEffect","productIndex","findIndex","product","id","handleTracking","useCallback","_appData$wall2","_appData$wall2$ThemeI","_appData$wall3","_appData$wall3$ThemeI","themePostTracking","type","action","ThemeInfo","webId","product_id","post","referenceId","owner","ownerId","feed","feedId","currencyCode","Number","handleHotspotClick","event","stopPropagation","window","open","status","map","index","tooltipId","isActive","role","style","top","left","onMouseEnter","onMouseLeave","onClick","e","AppendedView","wallId","Tooltip","appendTo","anchorSelect","clickable","isOpen","connect","state"],"sourceRoot":""}