{"version":3,"file":"static/js/8215.b2e52ab0.chunk.js","mappings":"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","sources":["app/Components/ReelPopUp/Elements/ReelBranding.js","app/Components/ReelPopUp/Elements/ReelProducts.js","app/Components/ReelPopUp/Elements/ReelMedia.js","app/Components/ReelPopUp/ReelBody.js","app/Components/ReelPopUp/PostPopUp.js","app/Components/ReelPopUp/index.js"],"sourcesContent":["import React, { PureComponent } from \"react\";\nimport { CloudUrl, WebUrl } from \"../../../../constants\";\n\nfunction importantCss(el) {\n  el.style.setProperty('visibility', 'visible', 'important');\n  el.style.setProperty('opacity', '1', 'important');\n  el.style.setProperty('display', 'flex', 'important');\n  el.style.setProperty('transform', 'none', 'important');\n  el.style.setProperty('clip-path', 'initial', 'important');\n  el.style.setProperty('border', 'none', 'important');\n}\n\nexport default class ReelBranding extends PureComponent {\n  render() {\n    const logoName = 'tagshop-branding.svg'\n    return (\n      <a href={WebUrl} target={'_blank'}\n        ref={(el) => {\n          if (el) {\n            el.style.setProperty('margin-right', '15px', 'important');\n            el.style.setProperty('width', '90px', 'important');\n            el.style.setProperty('height', 'auto', 'important');\n            importantCss(el)\n          }\n        }}>\n        <img ref={(el) => {\n          if (el) {\n            el.style.setProperty('width', '100%', 'important');\n            el.style.setProperty('height', 'auto', 'important');\n            importantCss(el)\n          }\n        }}\n          src={`${CloudUrl}/media/images/${logoName}`}\n        />\n      </a>\n    );\n  }\n}\n","import React, { useState, memo } from 'react'\nimport { themePostTracking } from '../../../../actions/themeActions';\nimport { fetchShopifyProduct } from '../../../../actions/cartActions';\n\nconst ReelProducts = ({ product, wall, onsetProductImg, openAddtocart, item, setOnProductDetails }) => {\n    const [noImg, setNoImg] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const ownerId = wall.User.id;\n    const Button = wall.ProductSetting.Button;\n    const tracking = (wall, product) => themePostTracking({ type: 1, action: 2, wall: wall?.Wall?.id, product_id: product.id, post: item.referenceId, owner: wall.Wall.owner, feed: item.feedId, currency: product.price_currency, price: product.product_discount > 0 ? product.product_discount : product.product_price })\n    const checkForShopify = async () => {\n        setLoading(true)\n        const itemDetails = {};\n        if (product && product.UgcProduct && product.UgcProduct.product_url) {\n            try {\n                if (wall?.Wall?.owner == 140717 || wall?.ProductSetting?.Button?.pdp_target == 1) {\n                    openUrl(product.UgcProduct.product_url)\n                    onsetProductImg(product.product_image)\n                    setLoading(false)\n                    tracking(wall, product.UgcProduct)\n                }\n                else {\n                    fetchShopifyProduct(product.UgcProduct.product_url)\n                        .then(res => {\n                            if (res.data) {\n                                itemDetails[product.id] = res.data;\n                                onsetProductImg(res.data.featured_image ? res.data.featured_image : product.product_image)\n                                setLoading(false)\n                                setOnProductDetails(itemDetails)\n                                openAddtocart(product.id, product)\n                            }\n                        })\n                        .catch(error => {\n                            console.log('error', error)\n                            openUrl(product.UgcProduct.product_url)\n                            onsetProductImg(product.product_image)\n                            setLoading(false)\n                            tracking(wall, product.UgcProduct)\n                        });\n                }\n\n\n            } catch (error) {\n                console.log('error', error)\n                openUrl(product.UgcProduct.product_url)\n                setLoading(false)\n\n            }\n        }\n    }\n    const openUrl = (url) => {\n        const { Button } = wall.ProductSetting\n        var newUrl = url;\n        if (parseInt(Button.newTab) == 2) window.parent.location.href = newUrl\n        else window.open(newUrl, '_blank');\n    }\n\n    const products = product.UgcProduct\n    return <div className={`tb_rpp_pro ${noImg ? \"ts_reelTheme_No_Product\" : \"\"}`}>\n        {!noImg ? <div className='tb_rpp_pro_img'>\n            <img src={products.product_image} alt=\"\" onError={() => setNoImg(true)} />\n        </div> : null}\n        <div className=\"tb_rpp_pro_cont\">\n            <div className=\"tb_rpp_pro_title\">\n                {products.product_title}\n            </div>\n            {products.product_price > 0 || products.product_discount > 0 ?\n                <div className=\"tb_rpp_p_wrap\">\n                    <div className=\"tb_rpp_p\">\n                        {products.price_currency_symbol}{products.product_discount > 0 ? products.product_discount : products.product_price}\n                    </div>\n                    {products.product_discount == 0 || products.product_price == products.product_discount ? <></> :\n                        <div className=\"tb_rpp_p tb_rpp_d_p\">\n                            {products.price_currency_symbol}{products.product_price}\n                        </div>}\n                </div> : null}\n            <div className={`tb_rpp_btn${loading ? ' tb_rpp_btn_spinner' : \"\"}`} disabled={loading} onClick={() => { checkForShopify(); }}>{Button.text} </div>\n\n        </div>\n    </div>\n}\n\nexport default memo(ReelProducts)","import React, { Component, Suspense, memo } from 'react'\n\nconst Image = React.lazy(() => import('../../../Themes/Elements/Media/Image'));\nconst ReelVideo = React.lazy(() => import('./ReelVideo'));\nconst ReelMediaSlider = React.lazy(() => import('./ReelMediaSlider'));\n\nconst ReelMedia = (props) => {\n       const { itemData, wallID, ownerId, wall, muted, autoPlay, index } = props\n       const size = false\n       return <div className=\"tb_rp_media_wrap\" role=\"button\" tabindex=\"0\" aria-label=\"Pop Up Button\">\n              {\n                     itemData.imageList && itemData.imageList.length > 0 ?\n                            <Suspense fallback={<></>}><ReelMediaSlider imageList={itemData.imageList} {...props} /></Suspense>\n                            : (itemData.type === 2 || itemData.type === 4 || !autoPlay) ?\n                                   <Suspense fallback={<></>}>\n                                          <Image ImageClass=\"tb_rp_image\" data={{ ...itemData, postFileNew: itemData.filename }} wallID={wallID} themeID={wall.Personalization.widgetTheme} ownerId={ownerId} size={size} ThemeRule={wall.ThemeRule} />\n                                   </Suspense>\n                                   : (itemData.type === 3 || itemData.type === 5) ?\n                                          <Suspense fallback={<></>}><ReelVideo VideoClass=\"tb_rp_video\" data={{ ...itemData, postFileNew: itemData.filename }} wallID={wallID} themeID={wall.Personalization.widgetTheme} ownerId={ownerId} size={size} isCover={true} controls={false} autoPlay={autoPlay} muted={muted} handleVideoEnded={() => { }} index={index} /></Suspense>\n                                          : null\n              }\n       </div>\n}\nexport default memo(ReelMedia)\n\n\n\n\n\n","import React, { Component, memo } from 'react';\nimport ReelProducts from './Elements/ReelProducts'\nimport ReelMedia from './Elements/ReelMedia'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport ReelBranding from './Elements/ReelBranding';\nimport 'swiper/css';\n\nconst ReelBody = ({ wall, item, personalization, productLoading, showAddToCart, onsetProductImg, openAddtocart, setOnProductDetails, isFreePlan, index, currentVideo, muteToggle, muted }) => {\n    const ugcProduct = item.ugc_products\n    const autoPlay = (item.type === 3 || item.type === 5) && currentVideo ? true : false\n\n    return (\n        <>\n            <ReelMedia itemData={item} wallID={wall.Wall.wallId} ownerId={wall.Wall.owner} ThemeID={personalization.widgetTheme} wall={wall} muted={muted} autoPlay={autoPlay} index={index} />\n            <div className='tb_rp_content'>\n                {wall.ProductSetting && personalization.themeType == 1 && ugcProduct && ugcProduct.length > 0 ?\n                    <Swiper\n                        autoHeight={true}\n                        speed={400}\n                        edgeSwipeDetection={true}\n                        slidesPerView={item.ugc_products && item.ugc_products.length > 1 ? 1.3 : 1}\n                        touchRatio={2}\n                        spaceBetween={0}\n                        mousewheel={{ forceToAxis: true, sensitivity: 2 }}\n                        watchSlidesProgress={true}\n                        direction='horizontal'\n                        className=\"tb_rpp_wrap\">\n                        {item.ugc_products && item.ugc_products.map((product, index) => {\n                            return <SwiperSlide key={index}>\n                                <ReelProducts product={product} openAddtocart={openAddtocart} onsetProductImg={onsetProductImg} showAddToCart={showAddToCart} productLoading={productLoading} wall={wall} ugcSetting={wall.ProductSetting} item={item} setOnProductDetails={setOnProductDetails} />\n                            </SwiperSlide>\n                        })\n                        }\n                    </Swiper>\n                    : null}\n\n\n                {autoPlay ?\n                    <div className=\"tb_rp_mute_btn\" onClick={muteToggle}>\n                        <div className={`tb__icon tb-${!muted ? `unmute` : `mute`}`}><div></div></div>\n                    </div>\n                    : null}\n\n                {(wall.UserRule.branding_lite && wall.UserRule.branding_lite == 1) || isFreePlan ? <ReelBranding wallId={wall.Wall.id} themeID={wall.Personalization.widgetTheme} /> : null}\n            </div>\n        </>\n    );\n}\nexport default memo(ReelBody);","import React, { Component, memo } from \"react\";\nimport { isValidAuthorImage, IMG_DATA_FILTER } from '../../../utils';\nimport { themePostTracking } from '../../../actions/themeActions'\nimport { isTagEmbed, suiteTrack } from \"../../../actions/api\";\nimport AddToCart from \"./Elements/AddToCart\";\nimport CheckOut from \"./Elements/CheckOut\";\nimport CartPopUp from '../CartPopUp'\nimport ReelBody from \"./ReelBody\";\nimport { connect } from \"react-redux\";\nimport { getDataNextSteps } from \"../../../actions/themeActions\";\nimport { register } from 'swiper/element/bundle';\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport 'swiper/css';\n\nregister()\nclass PostPopUp extends Component {\n    constructor(props) {\n        super(props);\n        this.sliderRef = React.createRef();\n        this.state = {\n            currentIndex: this.props?.currentIndex,\n            item: this.props.item,\n            isVideoError: false,\n            windowWidth: window.innerWidth,\n            isAuthorImagevalid: true,\n            instaImg: IMG_DATA_FILTER(this.props.imgData, this.props.item.link),\n            isHotspot: false, addtoCartPopup: false,\n            allProductDetails: null, selectedProductId: null,\n            selectedProductDetails: null,\n            continueShopping: false,\n            selectedVariant: null,\n            showAddToCart: false,\n            productLoading: true,\n            productImg: '',\n            tagshopProductDeatil: null,\n            muted: false,\n            activeSlide: 0,\n            addCartSetTime: false,\n            selectedProdDetails: null, tagProdDetail: null\n        }\n        this.splideRef = React.createRef()\n    }\n\n    componentDidMount() {\n        const { currentIndex, item } = this.props;\n        const isAuthorImagevalid = isValidAuthorImage(item.author.picture);\n        this.setState({ currentIndex: currentIndex, item: item, isAuthorImagevalid: isAuthorImagevalid, instaImg: IMG_DATA_FILTER(this.props.imgData, this.props.item.link) });\n        this.splideRef.current.addEventListener('swiperslidechange', (event) => {\n            if (this.props.hasMoreData && event.detail[0].progress > 0.9) { this.requestData(); this.setState({ currentIndex: this.splideRef.current.swiper.activeIndex }) }\n        })\n\n    }\n\n    setMuted = event => this.setState({ muted: !this.state.muted, })\n    setOnProductDetails = (data) => this.setState({ allProductDetails: data })\n    componentWillReceiveProps(nextProps) {\n        const { currentIndex, item } = nextProps; const isAuthorImagevalid = isValidAuthorImage(item.author.picture);\n        this.setState({ currentIndex: currentIndex, item: item, isVideoError: false, isAuthorImagevalid: isAuthorImagevalid, instaImg: IMG_DATA_FILTER(this.props.imgData, this.props.item.link) });\n    }\n    onErrorVideo = (e) => this.setState({ isVideoError: true })\n    onMediaUpdate = (e) => this.setState({ isAuthorImagevalid: false });\n    onAddToCart = (id, product, item) => {\n        const { wall } = this.props;\n        setTimeout(() => {\n            this.setState({\n                addCartSetTime: true\n            })\n        }, 100);\n        const trackingData = {\n            type: 1, action: 2,\n            wall: wall.Wall.id,\n            feed: item.feedId,\n            post: item.referenceId ? item.referenceId : item.id,\n            owner: wall.Wall.owner,\n            product_id: product.UgcProduct.id,\n            currency: product.UgcProduct.price_currency, price: product.UgcProduct.product_discount > 0 ? product.UgcProduct.product_discount : product.UgcProduct.product_price\n        }\n        this.setState({ addtoCartPopup: true, selectedProductDetails: this.state.allProductDetails[id], tagshopProductDeatil: { ...product, trackingData } })\n    }\n\n\n    requestData = () => {\n        const { wall, appendData, hasMoreData, loaderData } = this.props;\n        const postCount = wall.ThemeRule.numberOfPosts;\n        const timeStamp = Math.floor(Date.now() / 1000);\n        if (hasMoreData && !loaderData.isShowMoreLoading) this.props.getDataNextSteps(wall.Wall.id, timeStamp, postCount, appendData.networkID, appendData.after, appendData.heightEvent)\n    }\n\n    onItemChange = (item) => this.setState({ item })\n\n    currentSwiperSlide = e => {\n        if (this.props.hasMoreData && e.progress > 0.9) { this.requestData(); }\n        this.onPopUpTrack(e.activeIndex)\n    }\n\n    onPopUpTrack = (currentIndex) => {\n        try {\n            const { wall, completeData } = this.props\n            let item = completeData[currentIndex] ? completeData[currentIndex] : null;\n            if (item) {\n                const requestData = { feed: item.feedId, post: item.referenceId ? item.referenceId : item.id }\n                const tagembedPayload = { wallId: wall.Wall.id, userId: wall.Wall.owner, feedId: item.feedId, postId: item.id }\n                const ugcPayload = { action: 2, wall: wall.Wall.id, feed: item.feedId, post: item.referenceId ? item.referenceId : item.id, type: 3, owner: wall.Wall.owner }\n                themePostTracking(isTagEmbed ? tagembedPayload : suiteTrack ? ugcPayload : { action: 2, wall: wall.Wall.id, ...requestData, owner: wall.Wall.owner })\n            }\n        }\n        catch (error) {\n            console.log(\"Error in PopUp Tracking\", error)\n        }\n\n    }\n\n    startSwiperSlide = e => {\n        this.setState({\n            activeSlide: e.activeIndex\n        })\n    }\n    onClickClosePopUp = (e) => this.setState({ addtoCartPopup: false, continueShopping: false, selectedProductDetails: null, addCartSetTime: false })\n    onClickCheckOut = (e) => this.setState({ addtoCartPopup: true, continueShopping: false })\n\n\n\n    render() {\n        const { personalization, onClosePopUp, slideWithArrowKeys, wall, webFilters, completeData, isFreePlan } = this.props;\n        const { currentIndex, item, isVideoError, instaImg, addtoCartPopup, selectedProductDetails, continueShopping, selectedVariant, showAddToCart, productImg, productLoading, tagshopProductDeatil, activeSlide, addCartSetTime, muted, selectedProdDetails, tagProdDetail } = this.state;\n\n\n        return <div className={`modalId${item.id} tb_rp_modal ${addCartSetTime ? 'tb_rp_add_cart_m' : ''}`} onKeyDown={slideWithArrowKeys} onKeyPress={slideWithArrowKeys} onLoad={slideWithArrowKeys} onClick={(e) => e.currentTarget == e.target && onClosePopUp(e)} >\n            <div className=\"tb_rp_dialog\">\n                {!(addtoCartPopup || continueShopping) ?\n                    <div className=\"tb_reel_close_btn\" onClick={onClosePopUp}>\n                        <div className='tb__icon tb-close-thin'><div></div></div>\n                    </div> : null}\n\n                <div className=\"tb_time_line_wrap\">\n                    <div className=\"tb_time_line\"><div></div></div>\n                </div>\n\n                <Swiper\n                    ref={this.splideRef}\n                    direction=\"vertical\"\n                    touchRatio={2}\n                    freeMode={JSON.stringify({ enabled: true, sticky: true })}\n                    height={`${window.innerHeight}`}\n                    initialSlide={currentIndex}\n                    passiveListeners={true}\n                    mousewheel={{ forceToAxis: true, sensitivity: 2 }}\n                    watchSlidesProgress={true}\n                    onSlideChange={swiper => this.currentSwiperSlide(swiper)}\n                // onSwiper={(swiper) => this.startSwiperSlide(swiper)}\n                >\n                    {\n                        (completeData && completeData.length > 0) ? completeData.map((item, index) => {\n                            return <SwiperSlide key={`${item.id}-${index}`}>\n                                {({ isActive }) => <ReelBody currentVideo={isActive} key={`${item.id}-${index}`} onClosePopUp={onClosePopUp} wall={wall} item={item} instaImg={instaImg} showAddToCart={showAddToCart} openAddtocart={(id, product) => this.onAddToCart(id, product, item)} onsetProductImg={(img) => this.setState({ productImg: img })} productLoading={productLoading} sliderRef={this.sliderRef} personalization={personalization} isVideoError={isVideoError} addtoCartPopup={addtoCartPopup} continueShopping={continueShopping} setOnProductDetails={this.setOnProductDetails} isFreePlan={isFreePlan} muteToggle={this.setMuted} muted={muted} />}\n                            </SwiperSlide>\n                        }) : <></>\n                    }\n\n                </Swiper>\n            </div>\n\n            {addtoCartPopup && selectedProductDetails ?\n                <>\n                    <div className=\"tb_rp_cart_overlay\"><div></div></div>\n                    <div className=\"tb_rp_cart_modal\">\n                        <div className=\"tb_rp_cart_body\">\n                            <div className=\"ts_reel_close_btn tb_reel_close_btn\" onClick={addtoCartPopup && !continueShopping ? this.onClickClosePopUp : continueShopping ? event => this.setState({ addtoCartPopup: true, continueShopping: false }) : null}>\n                                <div className='tb__icon tb-close-thin'><div></div></div>\n                            </div>\n                            <div className=\"tb_rp_cart_wrap\">\n\n                                {selectedProductDetails && Object.keys(selectedProductDetails).length > 0 ? <CartPopUp productImg={productImg} addtoCartPopup={addtoCartPopup} productDetails={{ data: selectedProductDetails }} tagshopProductDeatil={tagshopProductDeatil} closeCart={event => this.setState({ addtoCartPopup: false, continueShopping: false, selectedProductDetails: null })} onAddToCart={() => this.setState({ continueShopping: true })} onSelectedVariant={(value) => this.setState({ selectedVariant: value })} wall={wall} closePopUp={this.props.onClosePopUp} /> : null}\n                                {/* {continueShopping ? <CheckOut productImg={productImg} wall={wall} addtoCartPopup={addtoCartPopup} productDetails={selectedVariant} tagshopProductDeatil={tagshopProductDeatil} onBack={() => this.setState({ addtoCartPopup: true, continueShopping: false })} closeAddtocart={() => this.setState({ addtoCartPopup: false, continueShopping: false, selectedProductDetails: null })} />\n                                    : <AddToCart productImg={productImg} addtoCartPopup={addtoCartPopup} productDetails={selectedProductDetails} tagshopProductDeatil={tagshopProductDeatil} closeAddtocart={() => this.setState({ addtoCartPopup: false, continueShopping: false, selectedProductDetails: null })} onAddToCart={() => this.setState({ continueShopping: true })} onSelectedVariant={(value) => this.setState({ selectedVariant: value })} wall={wall} />} */}\n                            </div>\n                        </div>\n                    </div>\n                </>\n                : null}\n        </div>\n    }\n}\n\nconst mapStateToProps = state => {\n    const { appData } = state;\n    return {\n        loaderData: state.loaderData,\n        appendData: appData.postData.appendData,\n        hasMoreData: appData.postData.hasMoreData[0] ? appData.postData.hasMoreData[0].hasMoreData == false ? false : appData.postData.hasMoreData[appData.postData.appendData.networkID] ? appData.postData.hasMoreData[appData.postData.appendData.networkID].hasMoreData : true : true\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getDataNextSteps: (wallID, timeStamp, postCount, networkId, after, heightEvent, updateInStateNow) => dispatch(getDataNextSteps(wallID, timeStamp, postCount, networkId, after, heightEvent, updateInStateNow)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(memo(PostPopUp));","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { closePopUP } from '../../../actions/themeActions'\nimport './scss/ReelPopup.scss'\nimport PostPopUp from './PostPopUp'\n\nclass ReelPopUp extends PureComponent {\n  state = { isEnable: 0, eventData: {}, shareText: \"SHARE\", viewOnText: \"View on\", currentIndex: null, completeData: {}, personalization: {}, url: null, imgData: [] }\n\n  closeCommercePopUP = event => {\n    this.setState({ isEnable: 0, currentIndex: null }, () => this.props.closePopUP());\n    var taggBoxRoot = document.getElementsByTagName('html');\n    if (taggBoxRoot && taggBoxRoot[0]) taggBoxRoot[0].style.overflow = \"\";\n  };\n\n  getCommercePopUPEvent = (data) => {\n    if (data !== undefined && data !== \"\" && data.card) {\n      this.setState({ url: \"\", isEnable: 1, eventData: data, currentIndex: data.index, completeData: data.idArray, viewOnText: data.viewOnText, shareText: data.shareText, windowParent: data, imgData: data.imgData, personalization: data.personalization }, () => this.CommercePopUPSlideWithArrowKey());\n    }\n  };\n\n\n\n  /* POP SLIDER CHANGE INDEX WITH SLIDE */\n  featuredPopSliderChangeIndex = (currentIndex) => event => {\n    const { eventData } = this.state;\n    if (currentIndex === -1) this.setState({ currentIndex: eventData.idArray.length - 1 });\n    else this.setState({ currentIndex: eventData.idArray.length === currentIndex ? 0 : currentIndex });\n  };\n\n  SliderWithKey = (currentIndex) => {\n    const { eventData } = this.state;\n    if (currentIndex === -1) this.setState({ currentIndex: eventData.idArray.length - 1 });\n    else this.setState({ currentIndex: eventData.idArray.length === currentIndex ? 0 : currentIndex });\n\n  };\n\n  componentDidMount() {\n    const { data } = this.props;\n    this.getCommercePopUPEvent(data);\n\n    var taggBoxRoot = document.getElementsByTagName('html');\n    if (taggBoxRoot && taggBoxRoot[0]) {\n      taggBoxRoot[0].style.overflow = \"hidden\";\n    }\n\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.data !== prevProps.data) this.getCommercePopUPEvent(this.props.data)\n  }\n  /* POP SLIDER WITH ARROW KEYS EVENTS */\n  CommercePopUPSlideWithArrowKey = e => {\n    const { personalization } = this.state;\n\n    if (personalization && personalization.popupSlideShow === 1) {\n      e = e || window.event;\n      let self = this;\n      if (e && e.keyCode && e.keyCode !== undefined) {\n        if (e.keyCode === 37) self.SliderWithKey(self.state.currentIndex - 1)\n        else if (e.keyCode === 39) self.SliderWithKey(self.state.currentIndex + 1)\n        else if (e.keyCode === 27) this.closeCommercePopUP();\n      }\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { postData } = nextProps;\n    let { completeData, eventData } = this.state\n    if (completeData.length != postData.postData.length) {\n\n      // let item = completeData[currentIndex]\n      let updatePostData = postData.postData.map(pItem => postData.completeDataObject[pItem])\n      let filteredPostData = updatePostData.filter((filterData) => !String(filterData.id).includes(\"free_add_\"))\n      // let nIndex = findFromArray(filteredPostData, item.id, currentIndex)\n      eventData.idArray = filteredPostData\n      this.setState({ completeData: filteredPostData, eventData }, () => {\n        const { currentIndex } = this.state;\n        this.setState({ currentIndex: currentIndex + 1 })\n      })\n    }\n    else {\n      const hasMoreData = postData.hasMoreData && Object.keys(postData.hasMoreData).length > 0 ? postData.hasMoreData[0] && postData.hasMoreData[0].hasMoreData == false ? false : postData.hasMoreData[postData.appendData.networkID] ? postData.hasMoreData[postData.appendData.networkID].hasMoreData : true : true\n      if (!hasMoreData) {\n        // this.setState({ currentIndex: 0 })\n      }\n    }\n\n\n\n  }\n\n\n\n  render() {\n    const { viewOnText, isEnable, currentIndex, personalization, completeData, eventData, url, imgData } = this.state;\n    const { postData } = this.props\n    let data = null;\n    if (currentIndex === -1) data = completeData[eventData.idArray.length - 1];\n    else data = completeData[currentIndex];\n    const { wall, webFilters } = this.props;\n    return isEnable === 1 && wall && completeData && Object(completeData).length > 0 ? <PostPopUp webFilters={webFilters} wall={wall} item={data} completeData={completeData} onClosePopUp={this.closeCommercePopUP} currentIndex={currentIndex} personalization={personalization} viewOnText={viewOnText} slideWithArrowKeys={this.CommercePopUPSlideWithArrowKey} featuredPopSliderChangeIndex={this.featuredPopSliderChangeIndex} hostUrl={url} imgData={imgData} isFreePlan={postData && postData.isFreeAdsStatus} />\n      : null\n  }\n}\n\n\n\n\n\n\n\n\nconst mapStateToProps = state => {\n  return {\n    wall: state.appData.wall, webFilters: state.appData.webFilters,\n  }\n}\nconst mapDispatchToProps = dispatch => { return { closePopUP: (data) => dispatch(closePopUP(data)), } }\nexport default connect(mapStateToProps, mapDispatchToProps)(ReelPopUp);\n\n"],"names":["importantCss","el","style","setProperty","ReelBranding","PureComponent","render","_jsx","href","WebUrl","target","ref","children","src","concat","CloudUrl","ReelProducts","_ref","product","wall","onsetProductImg","openAddtocart","item","setOnProductDetails","noImg","setNoImg","useState","loading","setLoading","Button","User","id","ProductSetting","tracking","_wall$Wall","themePostTracking","type","action","Wall","product_id","post","referenceId","owner","feed","feedId","currency","price_currency","price","product_discount","product_price","openUrl","url","newUrl","parseInt","newTab","window","parent","location","open","products","UgcProduct","_jsxs","className","product_image","alt","onError","product_title","price_currency_symbol","_Fragment","disabled","onClick","async","itemDetails","product_url","_wall$Wall2","_wall$ProductSetting","_wall$ProductSetting$","pdp_target","fetchShopifyProduct","then","res","data","featured_image","catch","error","console","log","checkForShopify","text","memo","Image","React","ReelVideo","ReelMediaSlider","ReelMedia","props","itemData","wallID","ownerId","muted","autoPlay","index","role","tabindex","imageList","length","Suspense","fallback","VideoClass","postFileNew","filename","themeID","Personalization","widgetTheme","size","isCover","controls","handleVideoEnded","ImageClass","ThemeRule","ReelBody","personalization","productLoading","showAddToCart","isFreePlan","currentVideo","muteToggle","ugcProduct","ugc_products","wallId","ThemeID","themeType","Swiper","autoHeight","speed","edgeSwipeDetection","slidesPerView","touchRatio","spaceBetween","mousewheel","forceToAxis","sensitivity","watchSlidesProgress","direction","map","SwiperSlide","ugcSetting","UserRule","branding_lite","register","PostPopUp","Component","constructor","_this$props","super","setMuted","event","this","setState","state","allProductDetails","onErrorVideo","e","isVideoError","onMediaUpdate","isAuthorImagevalid","onAddToCart","setTimeout","addCartSetTime","trackingData","addtoCartPopup","selectedProductDetails","tagshopProductDeatil","requestData","appendData","hasMoreData","loaderData","postCount","numberOfPosts","timeStamp","Math","floor","Date","now","isShowMoreLoading","getDataNextSteps","networkID","after","heightEvent","onItemChange","currentSwiperSlide","progress","onPopUpTrack","activeIndex","currentIndex","completeData","tagembedPayload","userId","postId","ugcPayload","isTagEmbed","suiteTrack","startSwiperSlide","activeSlide","onClickClosePopUp","continueShopping","onClickCheckOut","sliderRef","windowWidth","innerWidth","instaImg","IMG_DATA_FILTER","imgData","link","isHotspot","selectedProductId","selectedVariant","productImg","selectedProdDetails","tagProdDetail","splideRef","componentDidMount","isValidAuthorImage","author","picture","current","addEventListener","detail","swiper","componentWillReceiveProps","nextProps","onClosePopUp","slideWithArrowKeys","webFilters","onKeyDown","onKeyPress","onLoad","currentTarget","freeMode","JSON","stringify","enabled","sticky","height","innerHeight","initialSlide","passiveListeners","onSlideChange","isActive","img","Object","keys","CartPopUp","productDetails","closeCart","onSelectedVariant","value","closePopUp","connect","appData","postData","dispatch","networkId","updateInStateNow","ReelPopUp","arguments","isEnable","eventData","shareText","viewOnText","closeCommercePopUP","closePopUP","taggBoxRoot","document","getElementsByTagName","overflow","getCommercePopUPEvent","undefined","card","idArray","windowParent","CommercePopUPSlideWithArrowKey","featuredPopSliderChangeIndex","SliderWithKey","popupSlideShow","self","keyCode","componentDidUpdate","prevProps","filteredPostData","pItem","completeDataObject","filter","filterData","String","includes","hostUrl","isFreeAdsStatus"],"sourceRoot":""}