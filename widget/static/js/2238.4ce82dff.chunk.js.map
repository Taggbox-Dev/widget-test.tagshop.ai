{"version":3,"file":"static/js/2238.4ce82dff.chunk.js","mappings":"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","sources":["app/Themes/ClassicPhoto/Elements/AuthorDetails.js","app/Themes/ClassicPhoto/Elements/Media.js","app/Themes/ClassicPhoto/Elements/Card.js","app/Themes/ClassicPhoto/index.js","app/Themes/Elements/Author/Author.js","app/Themes/Elements/Network/Network.js","app/Themes/Elements/Seprator/Seprator.js","app/Themes/Elements/Time/Time.js"],"sourcesContent":["import React from 'react'\r\nimport { isInstaUser } from '../../../../utils';\r\nimport Author from '../../Elements/Author/Author';\r\nimport Time from '../../Elements/Time/Time';\r\nimport Network from '../../Elements/Network/Network';\r\nimport Seprator from '../../Elements/Seprator/Seprator';\r\n\r\n  const AuthorDetails = ({ Post, CardStyle }) => {\r\n    const { author, networkId } = Post\r\n  const username = author.username ? author.username.length > 0 ? `@${author.username}` : `` : '';\r\n  const authorStatus = (CardStyle.author.status && !isInstaUser(author.name)) ? true : false;\r\n  const sepratorStatus = (authorStatus && CardStyle.timeStatus) ? true : false;\r\n  return <div className=\"tb_cp_author_wrapper\" aria-label=\"Author details\" aria-roledescription=\"post author details\">\r\n    <div className=\"tb_cp_author\">\r\n      {authorStatus ? \r\n          <Author author={author} networkId={networkId} authorClass={'tb_cp_author_profile'} />\r\n      : ''}\r\n\r\n      <div className=\"tb_cp_author_info\">\r\n        {authorStatus ? <div className=\"tb_cp_authorname\">{author.name}</div> : ''}\r\n        <div className=\"tb_cp_post_info\">\r\n          {authorStatus ? <div className=\"tb_cp_username\">{username}</div> : ''}\r\n          {sepratorStatus ? <Seprator sepClass={`tb_cp_seprator`} /> : ''}\r\n          {CardStyle.timeStatus ? \r\n              <Time createdAt={Post.createdAt} timeClass={`tb_cp_time tb-cTBfont-${CardStyle.author.variant}`} />\r\n          : ''}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"tb_cp_social_\">\r\n      <Network networkClass={'tb_cp_social_ico'} networkId={networkId} iconStyle={CardStyle.icon} />\r\n    </div>\r\n  </div>\r\n}\r\nexport default AuthorDetails","import React from 'react'\r\nimport { isTagShop } from \"../../../../actions/api\";\r\nimport Video from '../../Elements/Media/Video';\r\nimport Image from '../../Elements/Media/Image';\r\nimport MediaIcon from '../../Elements/MediaIcon/MediaIcon';\r\n\r\nconst Media = ({ Post, ThemeStyle, CardStyle, index, inView }) => {\r\n  const autoPlay = ([3,5].includes(Post.type) && ThemeStyle.autoPlay === 1) || false\r\n  const size = CardStyle.style.ratio ? CardStyle.style.ratio : false\r\n  const mediaIcon = isTagShop && Post.hotspot ? false : true\r\n\r\n  return <div className=\"tb_cp_media_wrap\">\r\n    <MediaIcon Post={Post} IconClass=\"tb_cp_media_icon\" show={mediaIcon}hideVideo={autoPlay}/>\r\n    {autoPlay ?\r\n      <Video VideoClass=\"tb_cp_video\" Post={Post} size={size} isCover={true} controls={false} autoPlay={true} muted={true} observer={true} index={index} inView={inView}/>\r\n      :\r\n      <Image ImageClass=\"tb_cp_image\" Post={Post} size={size} hotspot={isTagShop} blurBG={isTagShop} observer={true} index={index} inView={inView}/>\r\n    }\r\n  </div>\r\n}\r\nexport default Media","import React, { Suspense, lazy } from 'react'\r\nimport AuthorDetails from './AuthorDetails';\r\nimport Media from './Media';\r\nimport CTAButton from '../../Elements/CTA/CtaButton';\r\nimport SocialAction from '../../Elements/SocialAction/SocialAction';\r\nimport InViewWrapper from '../../Elements/InViewWrapper';\r\n\r\nconst ShareOnHover = lazy(() => import('../../Elements/ShareOnHover/ShareOnHover'));\r\nconst Card = ({ adjustWidth, clickToShowPopUp, handlePressStart, handlePressEnd, index, onClickToCTA, onClickPopUpSlider, ThemeStyle, CardStyle, Post, ThemeInfo }) => {\r\n  const mediaType = Post.type !== 1 ? true : false; \r\n\r\n  return <InViewWrapper>\r\n        {({ ref, inView }) => (\r\n          <div id={`tb_cp_id-${Post.id}`} ref={ref} className={`tb_cp_post_wrapper`} style={{width: `${adjustWidth}%`, padding: CardStyle.style.padding / 2, opacity: inView ? 1 : 0, transition: inView ? 'opacity .5s ease-in-out' : '' }} tb-network={Post.networkId} tb-product={ Post.isShopIcon ? 1 : Post.isHotspot ? 2 : 0} post-id={Post.referenceId ? Post.referenceId : Post.id} feed-id={Post.feedId} tabIndex={0} area-label={Post.content.text} role=\"article\">\r\n          <div className=\"tb_cp_post_in\" \r\n            onTouchStart={handlePressStart}\r\n            onTouchEnd={(e) => handlePressEnd(e, index, Post)}\r\n            onClick={clickToShowPopUp(index, Post)} role=\"button\" aria-label=\"Popup\" tabIndex={0}>\r\n            {CardStyle.shareStatus ? \r\n              <Suspense fallback={<></>}> \r\n                <ShareOnHover Post={Post} ThemeInfo={ThemeInfo} shareClass={'tb_cp_share_container'} />\r\n              </Suspense> \r\n            : ''}\r\n            {mediaType ? \r\n                <Media Post={Post} CardStyle={CardStyle} ThemeStyle={ThemeStyle} index={index} inView={inView}/>\r\n            : ''}\r\n            { Post.ctaStatus ? <div className=\"tb_cp_post_cta\">\r\n                <CTAButton ctaClass={'tb_cp_post_cta_btn'} Post={Post} onClickToCTA={onClickToCTA} />\r\n            </div> : ''}\r\n            <div className=\"tb_cp_contant_wrapper\">\r\n                <AuthorDetails Post={Post} CardStyle={CardStyle} ThemeStyle={ThemeStyle} />\r\n            </div>\r\n            {CardStyle.actionStatus ? \r\n                <SocialAction Post={Post} CardStyle={CardStyle} actionClass={`tb_cp_social_action__`} />\r\n            : ''}\r\n          </div>\r\n        </div>\r\n        )}\r\n      </InViewWrapper>\r\n}\r\nexport default Card","import React, { PureComponent } from \"react\";\r\nimport Masonry from 'react-masonry-component';\r\nimport { isTagShop } from '../../../actions/api'\r\nimport \"./scss/ClassicPhoto.scss\";\r\nimport Card from './Elements/Card';\r\n\r\nconst ClassicPhotoExtend = ({ Posts, completeDataObject, clickToShowPopUp, handlePressStart, handlePressEnd, adjustWidth, onClickToCTA, onClickPopUpSlider, CardStyle, ThemeStyle, ThemeInfo }) => {\r\n  return ((Posts && Posts.length > 0)) && Posts.map((item, index) => {\r\n    const Post = completeDataObject[item];\r\n    return <Card key={index} adjustWidth={adjustWidth} handlePressStart ={handlePressStart} handlePressEnd={handlePressEnd}  clickToShowPopUp={clickToShowPopUp} onClickToCTA={onClickToCTA} onClickPopUpSlider={onClickPopUpSlider} Post={Post} index={index} CardStyle={CardStyle} ThemeStyle={ThemeStyle}  ThemeInfo={ThemeInfo}/>\r\n  })\r\n}\r\n\r\nclass ClassicPhoto extends PureComponent {  \r\n      \r\n    state = {\r\n      loadDelaydata : false\r\n    }\r\n    \r\n    componentDidMount() {\r\n      window.addEventListener(\"scroll\", this.handleScroll);\r\n    }\r\n    componentWillUnmount() {\r\n      window.removeEventListener(\"scroll\", this.handleScroll);\r\n    }\r\n\r\n    handleScroll = () => {\r\n      if(!this.state.loadDelaydata){\r\n          this.setState({ loadDelaydata : true },()=>this.props.loadMoredata())\r\n      }\r\n    };\r\n\r\n  render() {\r\n    const { postData, completeDataObject, adjustWidth, CardStyle, ThemeStyle, ThemeInfo, clickToShowPopUp, handlePressStart, handlePressEnd, onClickToCTA, onClickPopUpSlider } = this.props;\r\n\r\n    return isTagShop ? <Masonry\r\n      className={`tb_cp_post_container`}\r\n      tabIndex='0'\r\n      aria-label={`There are ${(postData && postData.length > 0) ? postData.length : 0} posts in the feed`} role=\"feed\"\r\n      elementType={'div'}\r\n      options={{\r\n        transitionDuration: 0,\r\n        percentPosition: true,\r\n        itemSelector: '.tb_cp_post_wrapper',\r\n        horizontalOrder: true,\r\n        resize: true,\r\n      }}\r\n      disableImagesLoaded={false}\r\n      updateOnEachImageLoad={false}\r\n      imagesLoadedOptions={{}}\r\n      enableResizableChildren={true}>\r\n      <ClassicPhotoExtend clickToShowPopUp={clickToShowPopUp} handlePressStart ={handlePressStart} handlePressEnd={handlePressEnd} Posts={postData} completeDataObject={completeDataObject} adjustWidth={adjustWidth} onClickToCTA={onClickToCTA} onClickPopUpSlider={onClickPopUpSlider} CardStyle={CardStyle} ThemeStyle={ThemeStyle} ThemeInfo={ThemeInfo} />\r\n    </Masonry>\r\n    : \r\n    <div className=\"tb_cp_post_container\">\r\n      <ClassicPhotoExtend clickToShowPopUp={clickToShowPopUp} handlePressStart ={handlePressStart} handlePressEnd={handlePressEnd}  Posts={postData} completeDataObject={completeDataObject} adjustWidth={adjustWidth} onClickToCTA={onClickToCTA} onClickPopUpSlider={onClickPopUpSlider} CardStyle={CardStyle} ThemeStyle={ThemeStyle} ThemeInfo={ThemeInfo} />\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default ClassicPhoto\r\n\r\n\r\n","import React, {PureComponent } from \"react\";\r\nimport { GET_NETWORK_COLOR } from \"../../../../utils/Network\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nexport default class Author extends PureComponent {\r\n\r\n  render() {\r\n    const { author, authorClass, networkId, size } = this.props;\r\n\r\n    return <div key={Math.random()} className={authorClass} style={{ overflow: networkId == 4 ? 'visible' : '' }}>\r\n              <img className={`${authorClass}__`} src={author.picture} aria-label=\"author\" alt={ReactHtmlParser(author.name)} width={size ? size : 44} height={size ? size : 44}\r\n              onError={(e) => {\r\n                const networkColor = GET_NETWORK_COLOR(networkId); \r\n                const background = networkColor == '#ffffff' ? '000' : networkColor.replace(\"#\", \"\"); \r\n                e.target.src = author.errorPic ? author.errorPic : `https://ui-avatars.com/api/?name=${author.name.replace(/\\s/g, '')}&background=${background}&color=fff&length=1`}}\r\n              />\r\n          </div>\r\n  }\r\n}\r\n\r\n","import React, { PureComponent, Suspense } from \"react\";\r\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from \"../../../../utils/Network\";\r\nimport \"./IconDefaultColor.scss\"\r\nconst DefaultNetwork = React.lazy(() => import(\"./DefaultNetwork\"));\r\n\r\nexport default class Network extends PureComponent {\r\n  render() {\r\n    const { networkId, networkClass, iconStyle, isPopUp } = this.props;\r\n    const defaultNetworks = [7, 4, 36]\r\n    const isDefaultIcon = iconStyle?.default || (defaultNetworks.includes(networkId))\r\n    return (isDefaultIcon ?  <Suspense fallback={<></>}><DefaultNetwork networkId={networkId} networkClass={networkClass} /></Suspense> : <div className={`${networkClass} tb__icon tb-${GET_NETWORK_ICON(networkId)}`} aria-label={`post network ${GET_NETWORK_NAME(networkId)}`}><div></div></div>);\r\n  }\r\n}\r\n","import React from \"react\"; \r\nconst Seprator = (props) => {\r\n  const { sepClass } = props;\r\n  return <div className={sepClass}>   </div>\r\n}\r\n\r\nexport default Seprator","import React, { memo } from \"react\"; \r\nimport { timeAgo } from \"../../../../utils/Common\";\r\nconst Time = (props) => {\r\n  const { createdAt, timeClass } = props;\r\n  return <div className={timeClass} role=\"status\" aria-label={`post timestamp ${timeAgo(createdAt)}`}>{timeAgo(createdAt)}</div>\r\n}\r\n\r\nexport default memo(Time)"],"names":["_ref","Post","CardStyle","author","networkId","username","length","authorStatus","status","isInstaUser","name","sepratorStatus","timeStatus","_jsxs","className","children","_jsx","Author","authorClass","Seprator","sepClass","Time","createdAt","timeClass","variant","Network","networkClass","iconStyle","icon","ThemeStyle","index","inView","autoPlay","includes","type","size","style","ratio","mediaIcon","isTagShop","hotspot","MediaIcon","IconClass","show","hideVideo","Video","VideoClass","isCover","controls","muted","observer","Image","ImageClass","blurBG","ShareOnHover","lazy","adjustWidth","clickToShowPopUp","handlePressStart","handlePressEnd","onClickToCTA","onClickPopUpSlider","ThemeInfo","mediaType","InViewWrapper","_ref2","ref","id","width","padding","opacity","transition","isShopIcon","isHotspot","referenceId","feedId","tabIndex","content","text","role","onTouchStart","onTouchEnd","e","onClick","shareStatus","Suspense","fallback","_Fragment","shareClass","Media","ctaStatus","CTAButton","ctaClass","AuthorDetails","actionStatus","SocialAction","actionClass","ClassicPhotoExtend","Posts","completeDataObject","map","item","Card","ClassicPhoto","PureComponent","constructor","arguments","state","loadDelaydata","handleScroll","this","setState","props","loadMoredata","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","postData","Masonry","elementType","options","transitionDuration","percentPosition","itemSelector","horizontalOrder","resize","disableImagesLoaded","updateOnEachImageLoad","imagesLoadedOptions","enableResizableChildren","overflow","src","picture","alt","ReactHtmlParser","height","onError","networkColor","GET_NETWORK_COLOR","background","replace","target","errorPic","Math","random","DefaultNetwork","React","isPopUp","default","GET_NETWORK_ICON","GET_NETWORK_NAME","timeAgo","memo"],"sourceRoot":""}