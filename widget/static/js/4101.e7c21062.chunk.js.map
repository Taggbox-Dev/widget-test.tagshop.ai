{"version":3,"file":"static/js/4101.e7c21062.chunk.js","mappings":"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","sources":["app/Themes/Badge/index.js"],"sourcesContent":["import React, { PureComponent, Suspense } from \"react\";\nimport { componentWillAppendToBody } from \"react-append-to-body\";\nimport { connect } from 'react-redux';\nimport './scss/Badge.scss'\nimport { getDataNextSteps } from '../../../actions/themeActions'\nimport { isTagEmbed } from \"../../../actions/api\";\nconst SmallBranding = React.lazy(() => import('../Elements/Branding/SmallBranding'));\nconst ReviewHeader = React.lazy(() => import('../../ReviewHeader'));\nconst Filters = React.lazy(() => import('../../Components/Filters'));\nconst WidgetTheme = React.lazy(() => import('../WidgetTheme'));\nconst PopUpCard = React.lazy(() => import('./Elements/PopUpCard'));\nconst AverageRatingFixed = React.lazy(() => import('./Elements/AverageRatingFixed'));\nconst SeeMore = React.lazy(() => import(\"../Elements/SeeMore/SeeMore\"));\nconst MyComponent = ({ children }) => {\n  return children;\n}\nconst AppendedView = componentWillAppendToBody(MyComponent);\n\n\nclass Badge extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClickStoped: false,\n      isPopupVisible: false,\n      showFirstButton: true,\n      toggleSticky: false,\n    };\n    this.interval = null;\n  }\n  /*********************************************/\n  togglePopup = () => {\n    this.setState((prevState) => ({\n      isPopupVisible: !prevState.isPopupVisible,\n      showFirstButton: !prevState.showFirstButton\n    }));\n  };\n\n  toggleDivs = () => {\n    this.setState((prevState) => ({\n      toggleSticky: prevState.isClickStoped ? false : !prevState.toggleSticky\n    }));\n  };\n  /************************************************/\n\n\n  componentDidMount() {\n    /* Start the interval to toggle the divs every 5 seconds */\n    this.interval = setInterval(this.toggleDivs, 10000);\n    let wallEditor = document.getElementById(\"BadgeThemeScroll\")\n    if (wallEditor) wallEditor.addEventListener(\"scroll\", this.autoLoadEditorScrollData);\n\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  autoLoadEditorScrollData = event => {\n    const { wall, appendData, loaderData } = this.props;\n    const postCount = wall.ThemeRule.numberOfPosts;\n    if (wall.Personalization.autoScrollStatus === 1) {\n      let wallEditor = document.getElementById(\"BadgeThemeScroll\");\n      if (wallEditor) {\n        let documentHeight = document.body.scrollHeight;\n        let scrollTop = wallEditor.scrollTop;\n        let scrollHeight = wallEditor.scrollHeight;\n        if (scrollTop + wallEditor.clientHeight >= scrollHeight - 10) {\n          if (!(loaderData && loaderData.isShowMoreLoading)) {\n            const timeStamp = Math.floor(Date.now() / 1000);\n\n            // Call the function to load more data\n            this.props.getDataNextSteps(\n              wall.Wall.id,\n              timeStamp,\n              postCount,\n              appendData.networkID,\n              appendData.after,\n              appendData.heightEvent\n            );\n          }\n        }\n      }\n    }\n  }\n\n  render() {\n    const { postData, completeDataObject, adjustWidth, wall, reviewFilters, languageSetting, appendData, appData, filter_tags, webFilters, isFreeAdsStatus } = this.props;\n    const { isPopupVisible, showFirstButton, toggleSticky } = this.state;\n    const headerPositionTop = wall.Banner && Object.keys(wall.Banner).length > 0 && ((wall.Banner.status === 1 && wall.Banner.banner_position === 1) || wall.BannerImage.status === 1) ? true : false;\n    const headerPositionBottom = wall.Banner && Object.keys(wall.Banner).length > 0 && wall.Banner.status === 1 && wall.Banner.banner_position === 2 ? true : false;\n    const isReviewBanner = wall.Banner && Object.keys(wall.Banner).length > 0 && wall.Banner.status === 1 && wall.Banner.bannerType == 6 ? true : false\n    const web_Filter_Status = isTagEmbed ? wall.Personalization.filterStatus === 1 ? true : false : webFilters && webFilters.length > 1 ? true : false;\n    <Suspense fallback={<></>}><Filters type={wall.Personalization.filter_type} webFilters={webFilters} filter_tags={filter_tags} appendData={postData.appendData} wall={wall} languageSetting={languageSetting} postData={postData} /></Suspense>\n\n\n    const result = Object.keys(completeDataObject).map((key) => completeDataObject[key]);\n    const cardData = result.sort(() => Math.random() - Math.random())\n      .find(() => true);\n    return <div className=\"tb_bt__container\">\n\n      <AppendedView>\n\n        {<div className={`tb_bt_popup_wrapper tb_bt_popup_show`} style={{ display: !isPopupVisible ? 'none' : null }}>\n          <div className=\"tb_bt_popup_close_btn\" onClick={this.togglePopup}>\n            <div className=\"tb_bt_popup_close_ico tb__icon tb-close-alt\"></div>\n          </div>\n          <div className=\"tb_bt_head_title\">What our customer say</div>\n          <div className=\"tb_bt_post_wrap\" id=\"BadgeThemeScroll\">\n            {isReviewBanner && headerPositionTop ? <Suspense fallback={<></>}><ReviewHeader reviewFilters={reviewFilters} wall={wall} appendData={appendData} languageSetting={languageSetting} /></Suspense> : null}\n            {web_Filter_Status ? <Suspense fallback={<></>}><Filters type={wall.Personalization.filter_type} webFilters={webFilters} filter_tags={filter_tags} appendData={appendData} wall={wall} languageSetting={languageSetting} postData={postData} /></Suspense> : null}\n\n            <Suspense fallback={<></>}>\n              <WidgetTheme {...this.props} /></Suspense>\n            {wall.Personalization.loadMoreStatus === 1 ? <Suspense fallback={<></>}><SeeMore languageSetting={languageSetting} wall={wall} appendData={appendData} postData={appData.postData} /></Suspense> : null}\n            {isReviewBanner && headerPositionBottom ? <Suspense fallback={<></>}><ReviewHeader reviewFilters={reviewFilters} wall={wall} appendData={appendData} languageSetting={languageSetting} /></Suspense> : null}\n          </div>\n        </div>}\n      </AppendedView>\n\n      <div className=\"tb_bt_wrapper\">\n        {showFirstButton &&\n          <div className=\"tb_bt_post_wrapper\">\n\n            {!toggleSticky ?\n              <>\n                <div className={`tb_bt_average_sticky ${!toggleSticky ? 'tb_bt_show' : ''}`}>\n                  <Suspense fallback={<></>}>\n                    <AverageRatingFixed ThemeRule={wall.ThemeRule} reviewFilters={reviewFilters} togglePopup={this.togglePopup} />\n                  </Suspense>\n                </div>\n\n                {isFreeAdsStatus ? <Suspense fallback={<></>}><SmallBranding languageSetting={languageSetting} wallId={wall.Wall.id} themeID={wall.Personalization.widgetTheme} /> </Suspense> : null}\n              </>\n              : null}\n\n            {postData && postData.length > 0 && toggleSticky &&\n              <div className={`tb_bt_post_contain ${toggleSticky ? 'tb_bt_show' : ''}`}>\n                <Suspense key={cardData.id} fallback={<></>}>\n                  <PopUpCard\n                    ownerId={wall.Wall.owner}\n                    itemData={cardData}\n                    key={cardData.id}\n                    itemIndex={cardData.id}\n                    adjustWidth={adjustWidth}\n                    personalization={wall.Personalization}\n                    ThemeRule={wall.ThemeRule}\n                    wallID={wall.Wall.id}\n                    toggleDivs={this.toggleDivs}\n                  /></Suspense>\n              </div>\n            }\n\n          </div>}\n      </div>\n    </div>\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    appData: state.appData,\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    getDataNextSteps: (wallID, timeStamp, postCount, networkId, after, heightEvent, updateInStateNow) => dispatch(getDataNextSteps(wallID, timeStamp, postCount, networkId, after, heightEvent, updateInStateNow))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Badge);"],"names":["SmallBranding","React","ReviewHeader","Filters","WidgetTheme","PopUpCard","AverageRatingFixed","SeeMore","AppendedView","componentWillAppendToBody","_ref","children","Badge","PureComponent","constructor","props","super","togglePopup","this","setState","prevState","isPopupVisible","showFirstButton","toggleDivs","toggleSticky","isClickStoped","autoLoadEditorScrollData","event","wall","appendData","loaderData","postCount","ThemeRule","numberOfPosts","Personalization","autoScrollStatus","wallEditor","document","getElementById","body","scrollHeight","scrollTop","clientHeight","isShowMoreLoading","timeStamp","Math","floor","Date","now","getDataNextSteps","Wall","id","networkID","after","heightEvent","state","interval","componentDidMount","setInterval","addEventListener","componentWillUnmount","clearInterval","render","postData","completeDataObject","adjustWidth","reviewFilters","languageSetting","appData","filter_tags","webFilters","isFreeAdsStatus","headerPositionTop","Banner","Object","keys","length","status","banner_position","BannerImage","headerPositionBottom","isReviewBanner","bannerType","web_Filter_Status","isTagEmbed","filterStatus","Suspense","_Fragment","filter_type","cardData","map","key","sort","random","find","_jsxs","className","_jsx","style","display","onClick","fallback","type","loadMoreStatus","concat","wallId","themeID","widgetTheme","ownerId","owner","itemData","itemIndex","personalization","wallID","connect","dispatch","networkId","updateInStateNow"],"sourceRoot":""}