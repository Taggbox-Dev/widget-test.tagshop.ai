{"version":3,"file":"static/js/2873.2b59feed.chunk.js","mappings":"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","sources":["app/Themes/Elements/MediaIcon/MediaIcon.js","app/Themes/ReelTheme/Elements/Media.js","app/Themes/ReelTheme/Elements/Card.js","app/Themes/ReelTheme/index.js"],"sourcesContent":["import React, { Suspense } from \"react\";\nimport { isSocialWall } from \"../../../../actions/api\";\nimport \"./scss/MediaIcon.scss\"\nconst DefaultNetwork = React.lazy(() => import(\"../Network/DefaultNetwork\"));\nconst MediaIcon = (props) => {\n       const { Post, IconClass, isCenter, hideVideo, show } = props;\n       const isMediaType = ([3,5].includes(Post.type)) ? true : false\n       const isYoutubePost = (Post.network.id === 7) ? true : false\n       const isMultiImages = (Post.mediaList && Post.mediaList.length > 0) ? true : false\n       const isAudio = Post.isAudio === 1 ? true : false\n       const isShopIcon = Post.isProduct ? true : false;\n       \n       const youtube = <Suspense fallback={<></>}><DefaultNetwork network={{ \"id\": 7, \"name\": \"YouTube\", \"icon\": \"youtube\" }} networkClass={'tb_youtube_ico'} /></Suspense>\n       const multipleMedia = <div className={`tb_multiple_ico tb__icon tb-multiple`}>  </div>\n       const audioIcon = <div className=\"tb_audio_ico tb__icon tb-audio\">  </div>\n       const videoIcon = <div className={`tb__icon tb-${isSocialWall?'reel-fill tb_reel_ico':'video tb_video_ico'}`}>  </div>\n       const shoppableIcon = <div className=\"tb_shop_ico tb__icon tb-bag\">  </div>\n       const roundedVideoIcon = <div className=\"tb_center_video_ico tb__icon tb-play-circle\">  </div>\n\n       return show ? <>{isCenter && (isYoutubePost || isMediaType) ? \n              <div className={`${IconClass} tb__media_ico_c`}>\n                     {isMediaType && !isYoutubePost ? roundedVideoIcon : ''}\n                     {isMediaType && isYoutubePost ? youtube : ''}\n              </div>\n              :null}\n              \n              {isShopIcon || isMultiImages || isMediaType ?\n              <div className={`${IconClass} tb__media_ico_`}>\n                     {isShopIcon ? shoppableIcon : ''}\n                     {isMultiImages ? multipleMedia : ''}\n                     {!isCenter && isMediaType && !isYoutubePost && !hideVideo ? isAudio ? audioIcon : videoIcon : ''}\n              </div>: null}\n              </> : null\n}\nexport default MediaIcon","import React from \"react\";\nimport Image from '../../Elements/Media/Image';\nimport Video from '../../Elements/Media/Video';\nimport MediaIcon from '../../Elements/MediaIcon/MediaIcon';\nconst Media = ({ Post, CardStyle, ThemeStyle, isVisible, index, inView }) => {\n\n  const isVideo = [3,5].includes(Post.type) && isVisible && (ThemeStyle.autoPlay == 1) ? true : false\n  const size = 178\n  return <div className=\"tb_rt_media_wrap\">\n    <MediaIcon Post={Post} IconClass=\"tb_rt_media_icon\" show={true} hideVideo={true} />\n    {isVideo ?\n      <Video VideoClass=\"tb_rt_video\" Post={Post} size={size} isCover={true} muted={true} autoPlay={true} observer={false} index={index} inView={inView} />\n      :\n      <Image ImageClass=\"tb_rt_image\" Post={Post} size={size} observer={false} index={index} inView={inView} />\n    }\n  </div>\n}\nexport default Media","import React, { PureComponent, Suspense } from \"react\";\nimport Media from \"./Media\";\nimport { isTagShop } from \"../../../../actions/api\";\nimport ViewCount from '../../Elements/ViewCount';\nimport InViewWrapper from '../../Elements/InViewWrapper';\n\nconst Network = React.lazy(() => import('../../Elements/Network/Network'));\nconst ShopButton = React.lazy(() => import('../../Elements/ShopButton/ShopButton'));\n\n\nexport default class Card extends PureComponent {\n  componentDidMount() {\n    const { Post, onClickPopUpSlider, itemIndex } = this.props\n    if (Post.isPopUp) {\n      onClickPopUpSlider(itemIndex, Post)\n    }\n  }\n\n  render() {\n    const { itemIndex, isVisible, clickToShowPopUp, ThemeStyle, CardStyle, Post, index } = this.props;\n\n    const { count, networkId } = Post\n    const { style, content, } = CardStyle\n    const cardStyle = { backgroundColor: style.backgournd };\n    const isShopBtn = isTagShop && CardStyle.shopText != '' && (Post.isProduct) && !content.status ? true : false;\n    const themeMode = (style.mode == 0 && isTagShop) ? 'light' : 'dark'\n    const reelCount = ([3, 5].includes(Post.type)) && CardStyle.viewCountStatus === 1 && count?.views > 0 ? true : false\n\n    return (\n      <InViewWrapper>\n        {({ ref, inView }) => (\n          <div data-id={Post.id} id={`tb_rt_id-${Post.id}`} className=\"tb_rt_post_wrapper\" ref={ref} style={{ padding: style.padding / 2, opacity: inView ? 1 : 0, transition: inView ? 'opacity .2s ease-in-out' : '' }} tb-product={Post.isShopIcon ? 1 : Post.isHotspot ? 2 : 0} area-label={Post.content.text} role=\"article\" post-id={Post.referenceId ? Post.referenceId : Post.id} feed-id={Post.feedId}>\n            <div className={`tb_rt_post_in tb_icon_animate ${!isTagShop ? 'tb_rt_post_in_animate' : ''}`} style={cardStyle} onClick={clickToShowPopUp(itemIndex, Post)} role=\"button\" aria-label=\"Popup\" tabIndex={0}>\n              {reelCount ? <ViewCount count={count?.views} /> : null}\n              <Media Post={Post} CardStyle={CardStyle} ThemeStyle={ThemeStyle} isVisible={isVisible} index={index} inView={inView} />\n              {!isTagShop ?\n                <div className=\"tb_rt_play_ico\">\n                  <div className=\"tb__icon tb-play\"><div></div></div>\n                </div>\n                : null}\n\n              <div className=\"tb_rt_post_details\">\n                <div className=\"tb_rt_social_\">\n                  <Suspense fallback={<></>}><Network networkClass={'tb_rt_social_ico_'} networkId={networkId} iconStyle={CardStyle.icon} /></Suspense>\n                </div>\n                {isShopBtn ? <Suspense fallback={<></>}><ShopButton CardStyle={CardStyle} btnClass={'tb_rt_btn_wrap'} /></Suspense> : null}\n              </div>\n              <div className={`tb_rt_post_overlay tb_rt_post_overlay-${themeMode}`}><div></div></div>\n            </div>\n          </div>\n        )}\n      </InViewWrapper>\n    );\n  }\n}\n","import React, { Component, memo, Suspense } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { Autoplay, FreeMode, Mousewheel } from 'swiper/modules';\nimport '../scss/ThemesSwiper.scss';\nimport './scss/ReelTheme.scss';\nimport Card from \"./Elements/Card\"; \nimport { isTagShop, isTagbox } from '../../../actions/api';\nimport { detectMobile, getColumns } from \"../../../utils\";\nimport { nextData } from \"../../../actions/moredataAction\";\n\nclass ReelTheme extends Component {\n  constructor(props) {\n    super(props);\n    this.inputRefs = {};\n\n    this.state = {\n      loadData : false \n    }\n  }\n\n  requestData = (swiper) => {\n    const { appendData, ThemeInfo, ThemeStyle, preRender, hasMoreData, nextData, loaderData } = this.props;\n    if (swiper.progress > 0.8 && hasMoreData && !loaderData.isShowMoreLoading) { \n      nextData(\n        isTagShop ? ThemeInfo?.webId : ThemeInfo?.wallId,\n        Math.floor(Date.now() / 1000),\n        ThemeStyle?.totalPosts,\n        appendData.networkID,\n        appendData.after,\n        preRender,\n        appendData.heightEvent\n      );\n    }\n  }\n\n  componentDidMount() { \n    setTimeout(() => {\n      const classNameRole = document.querySelectorAll('.splide__slide');\n      classNameRole && classNameRole.forEach((element) => {\n        element.removeAttribute(\"aria-hidden\");\n        element.removeAttribute(\"role\");\n      });\n    }, 100);\n\n    const { postData } = this.props;\n    if (postData && postData.length === 1) {\n      const arrowLeft = document.querySelector(\".tb_rt_arrow_left__\");\n      const arrowRight = document.querySelector(\".tb_rt_arrow_right__\");\n      if (arrowLeft && arrowRight) {\n        arrowLeft.style.display = 'none';\n        arrowRight.style.display = 'none';\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    const value = Object.values(this.inputRefs)[0];\n    const { postData, completeDataObject, onClickPopUpSlider, parentID } = this.props;\n    if (value && Object.values(value)[5]?.length > 0) {\n      const data = Object.values(value)[5];\n      data.forEach((item) => {\n        if (item.classList) {\n          const filterID = String(item.classList.value).split(\" \").find((fCheck) => String(fCheck).includes(\"tb_\"));\n          const getID = filterID?.replace(\"tb_\", \"\");\n          if (getID) {\n            const findIndex = postData.findIndex((find) => find === getID);\n            const clickD = document.querySelectorAll(`.tb_rt_post_container #${item.id}`);\n            clickD.forEach((clickDD) => {\n              const p_id = clickDD.getAttribute('p_id');\n              if (String(parentID) === String(p_id)) {\n                clickDD.addEventListener('click', (event) => {\n                  event.preventDefault();\n                  const itemData = completeDataObject[getID];\n                  onClickPopUpSlider(findIndex, itemData);\n                });\n              }\n            });\n          }\n        }\n      });\n    }\n\n     this.props.loadBranding()\n  }\n\n  updatepost = (e)=>  this.setState({ loadData : true},()=> setTimeout(() => this.props.loadMoredata(), (e*1000)))\n      \n  render() {\n    const { postData, completeDataObject, clickToShowPopUp, hasMoreData, parentID, keyRender, onClickPopUpSlider, CardStyle, ThemeStyle, ProductSetting, ThemeInfo, containerSize } = this.props;\n    const inputName = parentID;\n    const desktopColumn = ThemeStyle.column.desktop;\n    const mobileColumn = ThemeStyle.column.mobile;\n    const slidePost = ThemeStyle.slide.autoSlide;\n    const slideDuration = ThemeStyle.slide.slideDuration;\n    const { loadData } = this.state\n    const minCardSize =  containerSize.width > 767 ? 260 : 280;\n    const halfSlide = isTagbox && [151513].includes(ThemeInfo?.ownerId) ? 0 : 0.4;\n    const responsiveColumns = Math.max((containerSize.width / minCardSize).toFixed(), 1)\n    const columns =  getColumns(containerSize.width, ThemeStyle.column, responsiveColumns);\n\n    return (\n      <>\n        {parentID && (\n          <div className=\"tb_rt_post_container tb_swiper\" ref={this.sliderHeight}>\n            <Swiper\n              observer={true}\n              observeParents={true}\n              spaceBetween={0} \n              key={keyRender}\n              ref={(parentID) => (this.inputRefs[inputName] = parentID)}\n              style={{ width: '100%' }}\n              onScroll={(swiper) => { this.requestData(swiper); if(!loadData){ this.updatepost(3)}}}\n              onTouchMove={(swiper) => { this.requestData(swiper); if(!loadData){ this.updatepost(0) }}}\n              onAutoplay={(swiper) => { this.requestData(swiper); if(!loadData){ this.updatepost( detectMobile() && mobileColumn && slideDuration<5 ? 0 : 5) }}}\n              speed={700} // Adjust speed for slower animation\n              edgeSwipeDetection={true}\n              slidesPerView={columns + halfSlide}\n              touchRatio={.5} // Reduce touch ratio for slower dragging\n              cssMode={detectMobile()}\n              passiveListeners={true}\n              freeMode={{ enabled: true, sticky: false, momentumBounceRatio: 1, momentumVelocityRatio: 1 }} // Adjust momentum for slower dragging\n              autoplay={isTagShop || isTagbox ? { delay: slidePost === 1 ? slideDuration * 1000 : 99000, disableOnInteraction: false, pauseOnMouseEnter: true } : false}\n              loop={!hasMoreData}\n              mousewheel={{ forceToAxis: true, sensitivity: 1 }} // Reduce sensitivity for slower mousewheel scrolling\n              watchSlidesProgress={true}\n              modules={[Autoplay, Mousewheel, FreeMode]}\n              className=\"tb_rt_post_slider\"\n            >\n              {postData?.length > 0 &&\n                postData.map((item, index) => {\n                  const cardData = completeDataObject[item];\n                  return (isTagShop || cardData.type !== 1) ? (\n                    <SwiperSlide \n                        data-id={cardData.id} \n                        key={`${cardData.id}-${index}`}  // Use a combination of cardData.id and index for uniqueness\n                        p_id={parentID} className={`tb_${cardData.id}`}>\n                        {({ isVisible }) => (\n                          <Card  key={index} isVisible={isVisible} Post={cardData} index={index} CardStyle={CardStyle} ThemeStyle={ThemeStyle} ProductSetting={ProductSetting} ThemeInfo={ThemeInfo} clickToShowPopUp={clickToShowPopUp} onClickPopUpSlider={onClickPopUpSlider} />\n                        )}\n                    </SwiperSlide>\n                  ) : null;\n                })}\n            </Swiper>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\n\n\nconst mapStateToProps = (state) => ({\n  loaderData: state.loaderData,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  nextData: (wallID, timeStamp, postCount, networkId, after, postData, heightEvent, updateInStateNow) =>\n    dispatch(nextData(wallID, timeStamp, postCount, networkId, after, postData, heightEvent, updateInStateNow)),\n});\n\nexport default memo(connect(mapStateToProps, mapDispatchToProps)(ReelTheme));"],"names":["DefaultNetwork","React","props","Post","IconClass","isCenter","hideVideo","show","isMediaType","includes","type","isYoutubePost","network","id","isMultiImages","mediaList","length","isAudio","isShopIcon","isProduct","youtube","_jsx","Suspense","fallback","_Fragment","children","networkClass","multipleMedia","className","audioIcon","videoIcon","isSocialWall","shoppableIcon","roundedVideoIcon","_jsxs","_ref","CardStyle","ThemeStyle","isVisible","index","inView","isVideo","autoPlay","MediaIcon","Video","VideoClass","size","isCover","muted","observer","Image","ImageClass","Network","ShopButton","Card","PureComponent","componentDidMount","onClickPopUpSlider","itemIndex","this","isPopUp","render","clickToShowPopUp","count","networkId","style","content","cardStyle","backgroundColor","backgournd","isShopBtn","isTagShop","shopText","status","themeMode","mode","reelCount","viewCountStatus","views","InViewWrapper","ref","padding","opacity","transition","isHotspot","text","role","referenceId","feedId","onClick","tabIndex","ViewCount","Media","iconStyle","icon","btnClass","ReelTheme","Component","constructor","super","requestData","swiper","appendData","ThemeInfo","preRender","hasMoreData","nextData","loaderData","progress","isShowMoreLoading","webId","wallId","Math","floor","Date","now","totalPosts","networkID","after","heightEvent","updatepost","e","setState","loadData","setTimeout","loadMoredata","inputRefs","state","classNameRole","document","querySelectorAll","forEach","element","removeAttribute","postData","arrowLeft","querySelector","arrowRight","display","componentDidUpdate","_Object$values$","value","Object","values","completeDataObject","parentID","item","classList","filterID","String","split","find","fCheck","getID","replace","findIndex","clickDD","p_id","getAttribute","addEventListener","event","preventDefault","itemData","loadBranding","keyRender","ProductSetting","containerSize","inputName","mobileColumn","column","desktop","mobile","slidePost","slide","autoSlide","slideDuration","minCardSize","width","halfSlide","isTagbox","ownerId","responsiveColumns","max","toFixed","columns","getColumns","sliderHeight","Swiper","observeParents","spaceBetween","onScroll","onTouchMove","onAutoplay","detectMobile","speed","edgeSwipeDetection","slidesPerView","touchRatio","cssMode","passiveListeners","freeMode","enabled","sticky","momentumBounceRatio","momentumVelocityRatio","autoplay","delay","disableOnInteraction","pauseOnMouseEnter","loop","mousewheel","forceToAxis","sensitivity","watchSlidesProgress","modules","Autoplay","Mousewheel","FreeMode","map","cardData","SwiperSlide","memo","connect","dispatch","wallID","timeStamp","postCount","updateInStateNow"],"sourceRoot":""}