{"version":3,"file":"static/js/7551.284874bf.chunk.js","mappings":"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","sources":["app/Header/HeaderType/Elements/HeaderConstant.js","app/Header/HeaderType/HeaderType4.js","utils/Common.js"],"sourcesContent":["export const styleHeaderBanner = (Banner) => {\n    const bannerStyle = {\n        backgroundImage: Banner.transparent == 1 || Banner.bannerType == 5 ? 'none' : `url(${Banner.CustomBannerImage})`,\n        backgroundColor: Banner.transparent == 1 ? 'transparent' : Banner.background_color, //rmoved :- || Banner.CustomBannerImage\n        height: Banner.banner_height+'px'\n    }\n    const bannerStyleBgRight = { backgroundColor: Banner.transparent == 1 ? 'transparent' : Banner.background_color_two }\n    const subTitleStyle = {\n        color: Banner.subTitle_font_color,\n        fontSize: Banner.subTitle_font_size,\n        fontFamily: Banner.subtitle_css_font == 'None' ? null : Banner.subtitle_css_font,\n    }\n    const subTitleVarentClass = Banner.subtitle_font_varient\n    const titleStyle = {\n        color: Banner.title_font_color,\n        fontSize: Banner.title_font_size,\n        fontFamily: Banner.title_css_font == 'None' ? null : Banner.title_css_font,\n    }\n    const titleVarentClass = Banner.title_font_varient\n    var socialIconSize = 50\n    if (Banner.social_icon_size > 50) socialIconSize = 50\n    else socialIconSize = Banner.social_icon_size\n    const iconAreaStyle = {\n        height: socialIconSize * 1.8,\n        width: socialIconSize * 1.8\n    }\n    const iconStyle = { fontSize: socialIconSize }\n    const facebookIconAreaStyle = { borderColor: (Banner.social_icon_color_status === 2) ? Banner.social_icon_color : '#1b74e4', }\n    const facebookIconStyle = { color: (Banner.social_icon_color_status === 2) ? Banner.social_icon_color : '#1b74e4', }\n    const twitterIconAreaStyle = { borderColor: (Banner.social_icon_color_status === 2) ? Banner.social_icon_color : '#000', }\n    const twitterIconStyle = { color: (Banner.social_icon_color_status === 2) ? Banner.social_icon_color : '#000', }\n    const instagramIconAreaStyle = { borderColor: (Banner.social_icon_color_status === 2) ? Banner.social_icon_color : '#E2306C', }\n    const instagramIconStyle = { color: (Banner.social_icon_color_status === 2) ? Banner.social_icon_color : '#E2306C', }\n    const isFacebook = String(Banner.social_icons).includes(\"1\");\n    const isTwitter = String(Banner.social_icons).includes(\"2\");\n    const isInstagram = String(Banner.social_icons).includes(\"3\");\n    return { bannerStyle, bannerStyleBgRight, subTitleStyle, titleStyle, iconAreaStyle, iconStyle, isFacebook, isTwitter, isInstagram, facebookIconAreaStyle, facebookIconStyle, twitterIconAreaStyle, twitterIconStyle, instagramIconAreaStyle, instagramIconStyle, subTitleVarentClass, titleVarentClass }\n}\n","import { styleHeaderBanner } from \"./Elements/HeaderConstant\";\nimport { TagboxUpload } from '../../../constants' \nimport './scss/HeaderType4.scss'\nimport { ensureFullyQualifiedUrl } from \"../../../utils/Common\";\n\nconst HeaderType4 = ({ Banner }) => {\n  const { bannerStyle, subTitleStyle, titleStyle, iconAreaStyle, iconStyle, isFacebook, isTwitter, isInstagram, facebookIconAreaStyle, facebookIconStyle, twitterIconAreaStyle, twitterIconStyle, instagramIconAreaStyle, instagramIconStyle, subTitleVarentClass, titleVarentClass } = styleHeaderBanner(Banner);\n\n  var bCustomStyle = bannerStyle;\n  \n  const NetworkIcon = (url,iconStyle,networkStyle,iconClass,label,iconAreaStyle,iconAreaStyleNetwork)=> <a href={url ? ensureFullyQualifiedUrl(url) : '#'} target=\"blank\" className=\"tb_header4_social_icon_list__\" role=\"button\" aria-label={label} rel=\"nofollow\" style={{ ...iconAreaStyle, ...iconAreaStyleNetwork }}>\n    <div className={`tb_header4_social_icon__ tb__icon  ${iconClass}`} style={{ ...iconStyle, ...networkStyle }}> </div>\n  </a> \n \n  if (bCustomStyle && bCustomStyle.backgroundImage.includes(\"bg-bnr-3.png\") && bCustomStyle.backgroundImage.includes(TagboxUpload)) bCustomStyle.backgroundImage = bCustomStyle.backgroundImage.replace(TagboxUpload, \"https://test.taggbox.com/widget/assets/media/banner/\")\n  return <div className=\"tb_wall_header_wrap__\" style={bCustomStyle}>\n    <div className=\"tb_header4_row__\">\n      <div className=\"tb_header4_column_content__\">\n        <div className=\"tb_header4_content__\">\n          <div className={`tb_header4_subtitle__ tb-cTBfont-${subTitleVarentClass}`} style={subTitleStyle}>{Banner.subTitle}</div>\n          <div className={`tb_header4_title__ tb-cTBfont-${titleVarentClass}`} style={titleStyle}>{Banner.title}</div>\n        </div>\n      </div>\n      <div className=\"tb_header4_column_icons__\">\n        {Banner.social_icon_status == 1 ? <div className=\"tb_header4_social_icons__\">\n\n          {isFacebook ?\n            <NetworkIcon url={Banner.facebook_url} iconStyle={iconStyle} networkStyle={facebookIconStyle} iconAreaStyle={iconAreaStyle} iconAreaStyleNetwork={facebookIconAreaStyle} iconClass=\"tb-facebook\" label=\"Facebook\"/>\n             : ''}\n            {isTwitter ?\n            <NetworkIcon url={Banner.twitter_url} iconStyle={iconStyle} networkStyle={twitterIconStyle} iconAreaStyle={iconAreaStyle} iconAreaStyleNetwork={twitterIconAreaStyle}  iconClass=\"tb-twitter\" label=\"Twitter\"/>\n           : ''}\n          {isInstagram ?\n            <NetworkIcon url={Banner.instagram_url} iconStyle={iconStyle} networkStyle={instagramIconStyle} iconAreaStyle={iconAreaStyle} iconAreaStyleNetwork={instagramIconAreaStyle}  iconClass=\"tb-instagram\" label=\"Instagram\"/>\n             : ''}\n        \n        </div>\n          : null}</div>\n    </div>\n  </div>\n}\nexport default HeaderType4\n","import { AUTH_TOKEN, isTagbox, isTagShop, Pwidget, reelsPlay, tagembed, tbox, test, wUrl } from \"../actions/api\";\nimport { WebUrl } from \"../constants\";\nimport store from \"../store\";\nimport { dataSource } from '../actions/themeActions'\n\nlet reelPlayTime = [];\nlet playAdded = false;\n\nconst headers = new Headers({\n    'Content-Type': 'application/json',\n    'Authorization': `Bearer ${AUTH_TOKEN}`,\n    'Productdomain': tbox\n});\n\n\nexport const tb_onsite_btn_disabled = (a) =>\n    document.getElementById(\"tb_onsite_btn_id\")?.classList.toggle(\"tb_onsite_btn_disabled\", a === 1);\n\n\nexport const onWindowEvent = (s) => ({\n    1: () => window.onShowDemoPost(1),\n    2: () => window.hendleFeeds(\"addFeeds\"),\n    3: () => window.hendleFeeds(\"manageFeeds\")\n}[s]?.());\n\nexport const formatUnixTimestamp = (timestamp) => {\n    const date = new Date(timestamp * 1000);\n    const monthNames = [\n        'January', 'February', 'March', 'April', 'May', 'June',\n        'July', 'August', 'September', 'October', 'November', 'December'\n    ];\n    return `${monthNames[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()}`;\n}\n\nexport const reelPlayTimeUpdateData = (time) => {\n    try {\n        reelPlayTime.push(time)\n    }\n    catch (ex) {\n        console.log(ex)\n    }\n}\n\nexport const isValidAuthorImage = (url) => url && url !== \"\" && !url.includes('ui-avatars');\n\nexport const bytesToSize = (b) => {\n    const units = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (!b) return '0 Byte';\n    const i = Math.floor(Math.log(b) / Math.log(1024));\n    return { size: Math.round(b / Math.pow(1024, i), 2), sizeText: units[i] };\n};\n\n\nexport const ensureFullyQualifiedUrl = (url) =>\n    url.startsWith('http://') || url.startsWith('https://') ? url : 'https://' + url;\n\nexport const timeAgo = (timestamp) => {\n    const diff = Date.now() - timestamp * 1000;\n    const units = [\n        { label: \"year\", ms: 31536000000 },\n        { label: \"month\", ms: 2592000000 },\n        { label: \"week\", ms: 604800000 },\n        { label: \"day\", ms: 86400000 },\n        { label: \"hour\", ms: 3600000 },\n        { label: \"minute\", ms: 60000 }\n    ];\n\n    if (diff < 60000) return \"just now\";\n\n    const unit = units.find(({ ms }) => diff >= ms);\n    const value = Math.floor(diff / unit.ms);\n    return `${value} ${unit.label}${value > 1 ? \"s\" : \"\"} ago`;\n}\n\n\nexport const STRING_TO_URL_CONVERT = (string) => {\n    try {\n        if (!string?.includes(\"http\")) return string;\n        return [...new Set(string.match(/(((ftp|https?):\\/\\/)[\\w@:%_\\+.~#?&//=]+)/g))].reduce(\n            (result, url) =>\n                result.replaceAll(\n                    url,\n                    `<a class=\"text_links_\" role=\"link\" target=\"_blank\" href=\"${url}\">${url}</a>`\n                ),\n            string\n        );\n    } catch {\n        return string;\n    }\n};\n\nexport const brandingUrl = () => [`${WebUrl}`, 'Website Widget'];\nexport const GET_MEDIA_NAME = (p) => p && String(p) ? unescape(p).split('/').pop().split(\"/\").slice(-1).join().split(\".\").shift() : '';\n\n\nexport const mainClass = ![\"localhost\", \"widget\", \"wall_id=\"].every((key) => wUrl(key))\n    ? (isTagbox || [`${Pwidget}.${tagembed}`, `${Pwidget}${test}${tagembed}`, `${Pwidget}s.${tagembed}`].some((url) => wUrl(url)))\n        ? \"tag_main__root\"\n        : isTagShop\n            ? \"taggShopRoot\"\n            : \"taggbox_main\"\n    : \"taggbox_main\";\n\n\nexport const kFormatter = (value) => {\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    const index = Math.floor(Math.log10(value) / 3) || 0;\n    return index ? +(value / Math.pow(1e3, index)).toFixed(0) + suffixes[index] : value;\n};\n\nexport const convertToAtob = (isValue) => isTagbox ? isValue : atob(isValue)\n\n\nexport const isHex = (color) => color?.startsWith('#');\n\nexport const hexToRgb = (hex) => {\n    if (isHex(hex)) {\n        const bigint = parseInt(hex.slice(1), 16);\n        return {\n            r: (bigint >> 16) & 255,\n            g: (bigint >> 8) & 255,\n            b: bigint & 255,\n        };\n    } else {\n        const matches = hex?.match(/\\d+/g)?.map(Number) || [0, 0, 0];\n        return { r: matches[0], g: matches[1], b: matches[2] };\n    }\n};\n\nexport const colorDistanceLight = (color) => {\n    const { r, g, b } = hexToRgb(color);\n    return Math.sqrt((255 - r) ** 2 + (255 - g) ** 2 + (255 - b) ** 2) <= 30;\n};\n\nexport const colorDistanceDark = (color) => {\n    const { r, g, b } = hexToRgb(color);\n    return Math.sqrt((r - 50) ** 2 + (g - 50) ** 2 + (b - 50) ** 2) < 50;\n};\n\n\nexport const getTextColor = (textColor, bgColor) => {\n\n    if (textColor?.startsWith('rgba')) textColor = '#000000';\n\n    const isColorMatch = (color, matches) => matches.some((match) => color?.includes(match));\n    const isWhite = (color) => isColorMatch(color, ['ffffff', '255, 255, 255', '#fff']);\n    const isBlack = (color) => isColorMatch(color, ['000000', '0, 0, 0', '#000']);\n\n    const [similarWhite, similarDark] = [colorDistanceLight(textColor), colorDistanceDark(textColor)];\n    const [similarWhiteBg, similarDarkBg] = [colorDistanceLight(bgColor), colorDistanceDark(bgColor)];\n\n    if ((similarWhite && similarWhiteBg) || (isWhite(textColor) && isWhite(bgColor))) return '#000000';\n    if ((similarDark && similarDarkBg) || (isBlack(textColor) && isBlack(bgColor))) return '#ffffff';\n\n    return textColor;\n}\n\n\nexport const findFromArray = (d, i, n) => d && d.length > 0 ? d.findIndex(c => c.id === i) : n;\n\n\nexport const reelPlayTimeUpdate = () => {\n    try {\n        const { wall } = store.getState().appData;\n        const { webId, wallId, ownerId } = wall.ThemeInfo;\n        if (!playAdded) {\n            window.addEventListener('beforeunload', () => {\n                if (reelPlayTime.length === 0) return;\n\n                const playTime = reelPlayTime.reduce((total, time) => total + time, 0);\n                if (playTime > 0) {\n                    fetch(reelsPlay, {\n                        method: 'POST',\n                        headers,\n                        body: JSON.stringify({\n                            action: 1,\n                            model: dataSource?.includes(\"website\") ? \"website\" : \"wall\",\n                            playCount: reelPlayTime.length,\n                            wall: isTagShop ? webId : wallId,\n                            playTime,\n                            owner: ownerId,\n                        }),\n                        keepalive: true,\n                    }).finally(() => (reelPlayTime = [], playAdded = false));\n                } else {\n                    reelPlayTime = [];\n                    playAdded = false;\n                }\n            });\n\n            playAdded = true;\n        }\n    } catch (ex) {\n        console.error(ex);\n    }\n};\n\n\nexport const GET_IMAGE_SIZE = (url) =>\n    new Promise((resolve, reject) =>\n        Object.assign(new Image(), {\n            onload: function () { resolve({ width: this.naturalWidth, height: this.naturalHeight }); },\n            onerror: (e) => reject(new Error(`Image loading error: ${e.message}`)),\n            src: url\n        })\n    );\n"],"names":["styleHeaderBanner","Banner","bannerStyle","backgroundImage","transparent","bannerType","CustomBannerImage","backgroundColor","background_color","height","banner_height","bannerStyleBgRight","background_color_two","subTitleStyle","color","subTitle_font_color","fontSize","subTitle_font_size","fontFamily","subtitle_css_font","subTitleVarentClass","subtitle_font_varient","titleStyle","title_font_color","title_font_size","title_css_font","titleVarentClass","title_font_varient","socialIconSize","iconAreaStyle","social_icon_size","width","iconStyle","facebookIconAreaStyle","borderColor","social_icon_color_status","social_icon_color","facebookIconStyle","twitterIconAreaStyle","twitterIconStyle","instagramIconAreaStyle","instagramIconStyle","isFacebook","String","social_icons","includes","isTwitter","isInstagram","_ref","bCustomStyle","NetworkIcon","url","networkStyle","iconClass","label","iconAreaStyleNetwork","_jsx","href","ensureFullyQualifiedUrl","target","className","role","rel","style","children","TagboxUpload","replace","_jsxs","subTitle","title","social_icon_status","facebook_url","twitter_url","instagram_url","reelPlayTime","playAdded","headers","Headers","AUTH_TOKEN","tbox","tb_onsite_btn_disabled","a","_document$getElementB","document","getElementById","classList","toggle","onWindowEvent","s","_$2$3$s","_$2$","window","onShowDemoPost","hendleFeeds","call","formatUnixTimestamp","timestamp","date","Date","getMonth","getDate","getFullYear","reelPlayTimeUpdateData","time","push","ex","console","log","isValidAuthorImage","bytesToSize","b","i","Math","floor","size","round","pow","sizeText","startsWith","timeAgo","diff","now","unit","ms","find","value","STRING_TO_URL_CONVERT","string","Set","match","reduce","result","replaceAll","brandingUrl","WebUrl","GET_MEDIA_NAME","p","unescape","split","pop","slice","join","shift","mainClass","every","key","wUrl","isTagbox","Pwidget","tagembed","test","some","isTagShop","kFormatter","index","log10","toFixed","convertToAtob","isValue","atob","hexToRgb","hex","bigint","parseInt","r","g","_hex$match","matches","map","Number","colorDistanceLight","sqrt","colorDistanceDark","getTextColor","textColor","bgColor","_textColor","isColorMatch","isWhite","isBlack","similarWhite","similarDark","similarWhiteBg","similarDarkBg","findFromArray","d","n","length","findIndex","c","id","reelPlayTimeUpdate","wall","store","getState","appData","webId","wallId","ownerId","ThemeInfo","addEventListener","playTime","total","fetch","reelsPlay","method","body","JSON","stringify","action","model","dataSource","playCount","owner","keepalive","finally","error","GET_IMAGE_SIZE","Promise","resolve","reject","Object","assign","Image","onload","this","naturalWidth","naturalHeight","onerror","e","Error","message","src"],"sourceRoot":""}