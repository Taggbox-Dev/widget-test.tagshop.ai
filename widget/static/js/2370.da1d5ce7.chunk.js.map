{"version":3,"file":"static/js/2370.da1d5ce7.chunk.js","mappings":"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","sources":["utils/display.js","app/Components/Announcements/index.js"],"sourcesContent":["\r\nexport const announcementsUtils = (timeStamp, showAt, endAt, every, anncKey) => {\r\n       try {\r\n              const timeInterval = getTimeFromDate(getConvertToDate(showAt)) / 1000;\r\n              const aEndTime = getTimeFromDate(getConvertToDate(endAt)) / 1000;\r\n              const repeatOnce = every !== 0\r\n                     ? (timeStamp - timeInterval + anncKey * 10) % (every * 60)\r\n                     : timeStamp - timeInterval - 23400 + anncKey * 10;\r\n              return { repeatOnce, timeInterval, aEndTime };\r\n       } catch {\r\n              return { repeatOnce: 0, timeInterval: 0, aEndTime: 0 };\r\n       }\r\n};\r\n\r\nexport const getConvertToDate = (date) => {\r\n       try {\r\n              if (navigator.userAgent.indexOf(\"Safari\") !== -1) {\r\n                     let dateData = new Date(date);\r\n                     let dateParts = dateData.split(/[- :T]/);\r\n                     let [year, month, day, hour, minute, second] = dateParts.map(Number);\r\n                     return new Date(year, month - 1, day, hour, minute, second);\r\n              } else {\r\n                     return new Date(date);\r\n              }\r\n       }\r\n       catch (ex) {\r\n              return new Date(date);\r\n       }\r\n}\r\n\r\n\r\nexport const getTimeFromDate = (date) => date.getTime();\r\nexport const setIntervalFunction = (intervalFunction, duration) => setInterval(intervalFunction, duration);\r\nexport const isFullScreen = () => isBrowser() || false;\r\nexport const isIframe = window.self !== window.top;\r\n\r\nconst isBrowser = () => typeof window !== 'undefined' && typeof document !== 'undefined';\r\nexport const isStudio = window.location.href.includes('studio=1')\r\n\r\n\r\n","import React, { Component, memo } from 'react';\r\nimport { setIntervalFunction, announcementsUtils } from '../../../utils/display'\r\nimport { CloudHostUrl } from '../../../constants';\r\nimport './scss/announcements.scss'\r\nclass Announcements extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            anmtData: null,\r\n            anmtDataKeys: null,\r\n            timeStamp: Math.floor(Date.now() / 1000),\r\n            imageError: false,\r\n            windowWidth: window.innerWidth,\r\n            windowHeight: window.innerHeight,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.onLoadAnmt()\r\n    }\r\n\r\n    timeInterval = null\r\n    onLoadAnmt = () => {\r\n        const { announcements } = this.props;\r\n        let anmtData = announcements;\r\n        let anmtDataKeys = Object.keys(anmtData).map(itemKey => anmtData[itemKey])\r\n        this.setState({ anmtData, anmtDataKeys, timeStamp: Math.floor(Date.now() / 1000), imageError: false }, () => this.AnmtInterval())\r\n    }\r\n\r\n    AnmtInterval = () => {\r\n        if (this.timeInterval) clearInterval(this.timeInterval)\r\n        const { anmtDataKeys, anmtData } = this.state;\r\n        if (anmtDataKeys != null && anmtData != null) this.timeInterval = setIntervalFunction(() => this.onLoadAnmt(), 10000)\r\n    }\r\n\r\n    render() {\r\n        const { anmtDataKeys, timeStamp, imageError, windowHeight, windowWidth } = this.state;\r\n        const lineClamp = windowWidth > windowHeight ? ((windowHeight - 400) / 50).toFixed() : (((windowHeight / 2) - 200) / 50).toFixed()\r\n        return <>{\r\n            anmtDataKeys !== null ? anmtDataKeys.map((item, index) => {\r\n                const { repeatOnce, timeInterval, aEndTime } = announcementsUtils(timeStamp, item.showAt, item.endAt, item.every, index);\r\n                if ((((repeatOnce === 0) || (repeatOnce < 10 && repeatOnce >= 0)) && (timeStamp >= timeInterval)) && timeStamp >= aEndTime) {\r\n                    let mediaFile = `${item.mediaFile}`;\r\n                    if (item.mediaFile.includes(CloudHostUrl)) mediaFile = item.mediaFile;\r\n                    const isMediaFile = !imageError && item.mediaFile != \"\" ? true : false;\r\n                    const onlyMedia = isMediaFile && (![1,4].includes(item.type)) ? true : false\r\n                    var lineClamp_ =  onlyMedia ? lineClamp : lineClamp * 2\r\n                    return <div key={index} id='announcement__' className='an_container'>\r\n                        <div className=\"an_overlay_\" style={{ backgroundImage: `url(${mediaFile})` }}></div>\r\n                        <div className=\"an_wrap\">\r\n                            <div className={`an_wrap_row ${onlyMedia? ' an_only_media' : ' an_only_text'}`}>\r\n                                {isMediaFile ?\r\n                                    <div className=\"an_media_\">\r\n                                        <img className=\"an_img_\" src={mediaFile} onError={() => this.setState({ imageError: true })}\r\n                                        //  height={800} width={1000} \r\n                                        alt=\"\" />\r\n                                    </div>\r\n                                    : null}\r\n                                {([1,4].includes(item.type)) ?\r\n                                    <div className=\"an_content_wrap\" ref={this.contentRef}>\r\n                                        <div className=\"an_content_in\">\r\n                                            <div className={`an_content an_con_line-${lineClamp_}`}>{item.description}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    : null}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                else return null;\r\n            }) : null}\r\n        </>\r\n    }\r\n}\r\n\r\nexport default memo(Announcements)"],"names":["announcementsUtils","timeStamp","showAt","endAt","every","anncKey","timeInterval","getTimeFromDate","getConvertToDate","aEndTime","repeatOnce","date","navigator","userAgent","indexOf","dateParts","Date","split","year","month","day","hour","minute","second","map","Number","ex","getTime","setIntervalFunction","intervalFunction","duration","setInterval","isFullScreen","isBrowser","isIframe","window","self","top","document","isStudio","location","href","includes","Announcements","Component","constructor","props","super","onLoadAnmt","announcements","this","anmtData","anmtDataKeys","Object","keys","itemKey","setState","Math","floor","now","imageError","AnmtInterval","clearInterval","state","windowWidth","innerWidth","windowHeight","innerHeight","componentDidMount","render","lineClamp","toFixed","_jsx","_Fragment","children","item","index","mediaFile","CloudHostUrl","isMediaFile","onlyMedia","type","lineClamp_","_jsxs","id","className","style","backgroundImage","src","onError","alt","ref","contentRef","description","memo"],"sourceRoot":""}