{"version":3,"file":"static/js/2837.d1296a9a.chunk.js","mappings":"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","sources":["app/Components/UserComponents/SharePost/Elements/SharedSuccess.js","app/Components/UserComponents/SharePost/index.js"],"sourcesContent":["import React, { PureComponent } from \"react\";\r\n\r\nexport default class SharedSuccess extends PureComponent {\r\n  render() {\r\n    return  <div className=\"tb_share_post_succ\">\r\n                <div className=\"tb_share_post_succ_00\">\r\n                    <div className=\"tb_share_post_title\">Success</div>\r\n                    <div className=\"tb_share_post_p\">Post shared successfully on email</div>\r\n                    <div className=\"tb_share_post_succ_ico\">\r\n                        <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 98.5 98.5\" enableBackground=\"new 0 0 98.5 98.5\" space=\"preserve\">\r\n                            <path className=\"tb_share_post_suc_svg\" fill=\"none\" strokeWidth=\"8\" strokeMiterlimit=\"10\" d=\"M81.7,17.8C73.5,9.3,62,4,49.2,4C24.3,4,4,24.3,4,49.2s20.3,45.2,45.2,45.2s45.2-20.3,45.2-45.2c0-8.6-2.4-16.6-6.5-23.4l0,0L45.6,68.2L24.7,47.3\"/>\r\n                        </svg>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport { connect } from 'react-redux'; \r\nimport SharedSuccess from \"./Elements/SharedSuccess\";\r\nimport { sharePostByEmail, sharePostClosePopUP } from \"../../../../actions/OtherActions\";\r\nimport './scss/SharePost.scss';\r\n\r\nconst validateEmail = (email) => {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\nclass SharePostModal extends PureComponent {\r\n\r\n    state = {\r\n        email: '',\r\n        emailError: false,\r\n        submitErrorMessage: null,\r\n        modalShow: false,\r\n        successModal: false,\r\n        loadbtn: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => this.setState({ modalShow: true }), 100);\r\n        this.popUpCloseClckOnWindow()\r\n    }\r\n    onTextEmail = event => {\r\n        this.setState({ email: event.target.value, emailError: false }, () => {\r\n            if (this.state.email == null || this.state.email.length == 0 || !validateEmail(this.state.email) || this.state.email.includes(\"mailinator\")) this.setState({ emailError: true })\r\n        })\r\n\r\n    }\r\n\r\n    onSubmitData = event => {\r\n        const { email } = this.state;\r\n        const { item } = this.props;\r\n        const userName = this.props.userName;\r\n        const postLink = this.props.postLink;\r\n\r\n        const postData = {image:item.file, rating: item.rating, network: item.network.id, authorImage: item.author.picture, authorName: item.author.name, authorUsername: item.author.username, content: item.content, time: item.createdAt, mediaType : item.type}\r\n\r\n\r\n\r\n        if ((email && email.length > 0 && validateEmail(email) && !email.includes(\"mailinator\"))) {\r\n            this.setState({ loadbtn: true })\r\n            sharePostByEmail({ email: email, username: userName, link: postLink, post_data: postData }).then((response) => {\r\n                this.setState({ successModal: true, loadbtn: false })\r\n            })\r\n                .catch((error) => {\r\n                    this.setState({ loadbtn: false })\r\n                    const { data } = error.response;\r\n                    if (data.response_code == 404) {\r\n                        this.setState({ submitErrorMessage: data.message })\r\n                    } else {\r\n                        this.setState({ submitErrorMessage: 'Something went wrong' })\r\n                    }\r\n                });\r\n        } \r\n        else {\r\n            if (this.state.email == null || this.state.email.length == 0 || !validateEmail(this.state.email) || email.includes(\"mailinator\")) this.setState({ emailError: true })\r\n        }\r\n    }\r\n\r\n    onClose = event => {\r\n        const { sharePostClosePopUP } = this.props;\r\n        sharePostClosePopUP();\r\n    }\r\n    popUpCloseClckOnWindow=()=>{\r\n        var self=this;\r\n            document.addEventListener(\r\n            \"click\",\r\n            (event)=>{if(event.target.matches(\".tb_share_post_modal\")){\r\n                self.props.sharePostClosePopUP()\r\n            }},\r\n            false\r\n        )\r\n      }\r\n    render() {\r\n        const { email, emailError, submitErrorMessage, successModal, modalShow, loadbtn } = this.state;\r\n        return (\r\n            <div className={`tb_share_post_modal ${modalShow ? `tb_modal_show` : ``}`}>\r\n                <div className=\"tb_share_post_container\">\r\n                    <div className=\"tb_share_post_body\">\r\n                        <div className=\"tb_share_post_close\" onClick={this.onClose}>\r\n                            <div className=\"tb_share_close_ico tb__icon tb-close-alt\"> </div>\r\n                        </div>\r\n                        {successModal ?\r\n                            <SharedSuccess />\r\n                            :\r\n                            <div className=\"tb_share_post_wrapper\">\r\n                                <div className=\"tb_share_post_title\">Share This Social Post On Email</div>\r\n                                <div className=\"tb_share_post_p\">Share the social media post with anyone by entering the email address below.</div>\r\n\r\n                                <div className=\"tb_share_post_form\">\r\n                                    <div className=\"tb_share_post_form_group\">\r\n                                        <div className=\"tb_share_post_label\">Email <div className=\"tb_share_post_required\">*</div></div>\r\n                                        <input type=\"email\" value={email} className=\"tb_share_post_input\" onChange={this.onTextEmail} placeholder=\"Enter email address\" />\r\n                                        {emailError ? <div className=\"tb_share_post_error_\">* Please enter correct email.</div> : null}\r\n                                    </div>\r\n                                    <div className=\"tb_share_post_buttons\">\r\n                                        <div className=\"tb_share_post_cancel\" onClick={this.onClose}>\r\n                                            Cancel\r\n                                        </div>\r\n                                        <div className={`tb_share_post_submit ${loadbtn ? 'tb_share_post_spinner' : ''}`} onClick={this.onSubmitData}>\r\n                                            Submit\r\n                                        </div>\r\n                                    </div>\r\n                                    {submitErrorMessage && submitErrorMessage.length > 0 ? <div className=\"tb_share_post_error\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\r\n                                            <g id=\"Stockholm-icons-/-Code-/-Info-circle\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\r\n                                                <rect id=\"bound\" x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                <circle id=\"Oval-5\" fill=\"#db4b20\" opacity=\"0.3\" cx=\"12\" cy=\"12\" r=\"10\" />\r\n                                                <rect id=\"Rectangle-9\" fill=\"#db4b20\" x=\"11\" y=\"10\" width=\"2\" height=\"7\" rx=\"1\" />\r\n                                                <rect id=\"Rectangle-9-Copy\" fill=\"#db4b20\" x=\"11\" y=\"7\" width=\"2\" height=\"2\" rx=\"1\" />\r\n                                            </g>\r\n                                        </svg>\r\n                                        {submitErrorMessage}\r\n                                    </div> : null}\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        item : state.modalPop.shareData\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        sharePostClosePopUP: () => dispatch(sharePostClosePopUP())\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SharePostModal);"],"names":["SharedSuccess","PureComponent","render","_jsx","className","children","_jsxs","version","id","xmlns","xlink","x","y","viewBox","enableBackground","space","fill","strokeWidth","strokeMiterlimit","d","validateEmail","email","test","String","toLowerCase","SharePostModal","constructor","arguments","state","emailError","submitErrorMessage","modalShow","successModal","loadbtn","onTextEmail","event","this","setState","target","value","length","includes","onSubmitData","item","props","userName","postLink","postData","image","file","rating","network","authorImage","author","picture","authorName","name","authorUsername","username","content","time","createdAt","mediaType","type","sharePostByEmail","link","post_data","then","response","catch","error","data","response_code","message","onClose","sharePostClosePopUP","popUpCloseClckOnWindow","self","document","addEventListener","matches","componentDidMount","setTimeout","onClick","onChange","placeholder","width","height","stroke","fillRule","opacity","cx","cy","r","rx","connect","modalPop","shareData","dispatch"],"sourceRoot":""}