{"version":3,"file":"static/js/9208.7937f8ff.chunk.js","mappings":"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","sources":["app/Components/PostPopUp/Elements/PopUpImage.js","app/Components/PostPopUp/Elements/PopUpMediaSlider.js","app/Components/PostPopUp/Elements/PopUpVideo.js","app/Themes/Elements/Hotspot/Hotspot.js"],"sourcesContent":["import React, { PureComponent, Component } from \"react\";\nimport { POPUP_IMAGE_RENEW_REQUEST } from '../../../../actions/themeActions'\nimport { getImageSize } from 'react-image-size';\nimport Hotspot from \"../../../Themes/Elements/Hotspot/Hotspot\";\nimport PostBranding from \"../../../Themes/Elements/Branding/PostBranding\";\nimport { GET_MEDIA_NAME } from \"../../../../utils\";\nimport { isTagShop } from \"../../../../actions/api\";\n\nexport default class PopUpImage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mediaLoaded: false,\n      largerHeight: 0,\n      imgSize: {\n        small: props.data.postFileNew,\n        large: props.data.filename,\n        orignal: props.data.file\n      }\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { data } = nextProps\n    if (this.props.data !== data) {\n      this.setState({\n        imgSize: {\n          small: data.postFileNew,\n          large: data.filename,\n          orignal: data.file\n        }\n      })\n    }\n  }\n  render() {\n    const { data, wall, opacity, mediaSize } = this.props\n    const { mediaLoaded, imgSize } = this.state\n    const isHotspot = data.hotspot && data.ugc_products.length > 0 ? true : false\n    const imgStyle = {\n      opacity: opacity, filter: mediaLoaded ? 'blur(2px)' : null,\n      //aspectRatio: `${mediaSize.width}/${mediaSize.height}` \n    }\n    return (\n      <div className={`tb_post_modal_img_holder`}>\n        {data?.postBranding ? <PostBranding size={2} /> : null}\n        {isHotspot ? <Hotspot product={data.ugc_products} dataItem={data} /> : null}\n        <img\n          className=\"tb_post_modal_img_\"\n          decoding=\"async\"\n          ref={this.mediaRef}\n          src={imgSize.small}\n          srcSet={`${imgSize.large}, 991w ${imgSize.small}, 480w`}\n          sizes={mediaSize && mediaSize.width}\n          alt={GET_MEDIA_NAME(imgSize.small)}\n          data-link={data.link}\n          data-network={data.network.id}\n          data-wall-id={wall.Wall.id}\n          data-owner-id={wall.Wall.owner}\n          data-item-id={data.id}\n          data-feed-id={data.feedId ? data.feedId : \"\"}\n          data-filter-id={data.filterId}\n          data-load=\"0\"\n          onLoad={this.handleImageLoad}\n          onError={!data.stories ? (e) => { POPUP_IMAGE_RENEW_REQUEST(e) } : null}\n          key={imgSize.small}\n          loading=\"lazy\"\n          draggable=\"false\"\n          width={mediaSize && mediaSize.width}\n          height={mediaSize && mediaSize.height}\n          style={imgStyle} />\n      </div>\n    );\n  }\n}\n\n","import React, { PureComponent } from \"react\";\nimport PopUpImage from \"./PopUpImage\";\nimport PopUpVideo from \"./PopUpVideo\";\nimport { Splide, SplideSlide, SplideTrack } from '@splidejs/react-splide';\nimport { isTagEmbed } from '../../../../actions/api'\n\nconst mediaDimension = JSON.parse(window.localStorage.getItem('mediaDimension'));\nexport default class PopUpMediaSlider extends PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      mediaSize: {\n        height: 1000,\n        width: 1000,\n      },\n      mediaLoaded: false,\n      imgUrl: props.data.postFileNew,\n      largerHeight: 0,\n\n      isFirst: false,\n      isLast: false,\n      currentIndex: 0\n    };\n    this.splideRef = React.createRef();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { data } = nextProps\n    const { ImageUrl } = nextProps;\n    if (this.state.imgUrl !== ImageUrl) {\n      this.setState({\n        imgUrl: ImageUrl,\n        mediaLoaded: false,\n        mediaSize: {\n          height: parseInt(data.mediaHeight),\n          width: parseInt(data.mediaWidth)\n        }\n      })\n    }\n  }\n\n  componentDidMount() {\n    const { data } = this.props\n    this.setState({\n      mediaSize: {\n        height: parseInt(data.mediaHeight),\n        width: parseInt(data.mediaWidth)\n      }\n    })\n\n    this.splideRef.current.splide.on('moved', this.handleSlideChange);\n    this.handleSlideChange(); // Check on initial load\n  }\n\n  componentWillUnmount() {\n    this.splideRef.current.splide.off('moved', this.handleSlideChange);\n  }\n\n  handleSlideChange = () => {\n    const splide = this.splideRef.current.splide;\n    const index = splide.index;\n    const isFirst = index === 0;\n    const isLast = index === splide.length - 1;\n\n    this.setState({ isFirst, isLast });\n  };\n\n  render() {\n    const { imageList, data, wall } = this.props\n\n    const { mediaSize, isFirst, isLast, currentIndex } = this.state\n    const settings = {\n      //type:'slide',\n      rewind: false,\n      speed: 400,\n      gap: 0,\n      autoplay: false,\n      autoHeight: true,\n      padding: 0,\n      pagination: true,\n      arrows: true,\n      classes: {\n        pagination: 'splide__pagination tb_modal_slider_dots',\n        page: 'splide__pagination__page tb_modal_slider_dot',\n      },\n    };\n\n    return <>\n\n      <PopUpImage ImageUrl={data.postFile} data={data} wall={wall}\n        //mediaSizeCallback={this.mediaSize} \n        opacity={0} />\n      <div className=\"tb_post_modal_slide_holder_\">\n        <Splide hasTrack={false} className=\"tb_post_modal_media_slider\" options={settings} ref={this.splideRef} onActive={(splide, prev, next) => this.setState({ currentIndex: prev.index })}>\n          <SplideTrack>\n            {imageList.map((imageItem, index) => {\n              const autoPlay = currentIndex == index ? true : false\n              const isPostFile = isTagEmbed ? imageItem.file : imageItem.postFile\n              return <SplideSlide key={index} style={{\n                margin: 0,\n              }}>\n                {(imageItem.type === 2 || imageItem.type === 4 || !autoPlay) ?\n                  <PopUpImage key={`multi-slider${index}`} ImageUrl={isPostFile} data={{ link: data.link, network: { id: data.network.id }, id: imageItem.id, filterId: data.filterId, stories: imageItem.stories, feedId: data.feedId, postFileNew: isPostFile, filename: isPostFile, file: isPostFile }} wall={wall}\n                    //mediaSizeCallback={this.mediaSize} \n                    opacity={1} />\n                  : (imageItem.type === 3 || imageItem.type === 5) ?\n                    <PopUpVideo data={{ mediaUrl: isTagEmbed ? imageItem.media : imageItem.mediaFile, link: data.link, network: { id: isTagEmbed ? imageItem.networkId : data.networkId }, id: imageItem.id, filterId: data.filterId, stories: imageItem.stories ? imageItem.stories : 0, postFileNew: isPostFile, filename: isPostFile, file: isPostFile, feedId: data.feedId }} wall={wall}\n                      //mediaSizeCallback={this.mediaSize} \n                      opacity={1} /> : null}\n              </SplideSlide>\n            }\n            )}\n          </SplideTrack>\n          <div className=\"splide__arrows splide__arrows--ltr tb_post_modal_arrow_wrapper_\">\n            <div className=\"splide__arrow splide__arrow--prev tb_post_modal_arrow tb_post_modal_arrow_left__ tb__icon tb-arrow-left-alt\" disabled={isFirst} role=\"button\" aria-label=\"Go to previous slide\"><div></div></div>\n            <div className=\"splide__arrow splide__arrow--next  tb_post_modal_arrow tb_post_modal_arrow_right__ tb__icon tb-arrow-right-alt\" disabled={isLast} role=\"button\" aria-label=\"Go to next slide\"><div></div></div>\n          </div>\n        </Splide>\n      </div>\n    </>\n  }\n}","import React, { PureComponent } from \"react\";\nimport ReactPlayer from \"react-player\"\nimport { POPUP_VIDEO_RENEW } from '../../../../actions/themeActions'\nimport { isTagShop } from \"../../../../actions/api\";\nimport { reelPlayTimeUpdateData } from \"../../../../utils\";\n\n\nconst mediaReplaceText = (mediaUrl, networkId) => {\n    switch (networkId) {\n        case 25:\n            const soundCloud = String(mediaUrl).replace(\"https://w.soundcloud.com/player/?url=\", \"\")\n            return soundCloud\n            break;\n\n        default:\n            return mediaUrl\n            break;\n    }\n\n}\nexport default class PopUpVideo extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            videoLoaded: false,\n            muted: false,\n            played: 0\n        }\n        this.VideoWrap = React.createRef();\n    }\n\n    setVideoLoaded = event => {\n        this.setState({\n            videoLoaded: event\n        })\n    }\n\n    muteToggle = () => {\n        this.setState({\n            muted: !this.state.muted,\n        })\n    }\n    componentWillUnmount() {\n        const { played } = this.state\n        if (isTagShop) reelPlayTimeUpdateData(played)\n    }\n    onUpdateTime = (progress) => {\n        try {\n            if (isTagShop) {\n                const { played } = this.state\n                this.setState({\n                    played: played + progress.playedSeconds\n                })\n            }\n        }\n        catch (e) {\n            console.log(e)\n        }\n\n    }\n    render() {\n        const { data, wall } = this.props\n        const { videoLoaded, muted } = this.state\n        const noMuteIcon = [7, 3, 25]\n        const muteIcon = !noMuteIcon.includes(data.network.id) ? true : false\n        return <div className={`tb_post_modal_video_holder${videoLoaded ? ' tb_post_video_loaded' : ''}`} ref={this.VideoWrap} key={data.mediaUrl} >\n            {muteIcon ?\n                <div className=\"tb_m_mute_btn\" onClick={this.muteToggle}>\n                    <div className={`tb__icon tb-${!muted ? `unmute` : `mute`}`}><div></div></div>\n                </div>\n                : ''}\n            <ReactPlayer\n                className={`tb_post_modal_video video${data.id}`}\n                url={mediaReplaceText(data.mediaUrl, data.network.id)}\n                data-type=\"video\"\n                data-network={data.network.id}\n                data-link={data.link}\n                data-wall-id={wall.Wall.id}\n                data-item-id={data.id}\n                data-feed-id={data.feedId ? data.feedId : \"\"}\n                data-load={0}\n                config={{\n                    facebook: {\n                        appId: '117029975354072',\n                        attributes: {\n                            'data-width': 'auto',\n                            // 'data-height': `${document.querySelector('.ts_rt_post_in') ? `${document.querySelector('.ts_rt_post_in').clientHeight} px` : '100%'}`\n                        }\n                    },\n                    file: {\n                        forceVideo: true,\n                        attributes: {\n                            muted,\n                            // onError: (e) => IMG_LOAD_AFTER_COMPLETE_LAYOUT_FOR_POP_UP_VIDEO(e)\n                        }\n                    }\n                    // tracks: [\n                    //     {kind: 'subtitles', src: `${CloudUrl}/media/images/subtitles.en.vtt`, srcLang: 'en', default: true},\n                    // ]\n                }}\n                loop={true}\n                //onError={(e) => { this.setVideoLoaded(false) }}\n                onError={(e) => {\n                    if (!data.stories || data.stories == 0) POPUP_VIDEO_RENEW(e, data.id)\n\n                    //this.setVideoLoaded(false)\n                }}\n                //(data.stories == 0) ? POPUP_VIDEO_RENEW(e) : null}\n                autoPlay={true}\n                muted={muted}\n                volume={1}\n                playsinline={true}\n                onReady={(e) => { this.setVideoLoaded(true) }}\n                playing={true}\n                height={'100%'}\n                width={'100%'}\n                controls={!muteIcon ? true : false}\n                style={{ backgroundImage: `url(${data.postFileNew})`, backgroundSize: 'cover', backgroundPosition: 'center', backgroundRepeat: 'no-repeat' }}\n                onProgress={this.onUpdateTime}\n            />\n        </div>\n    }\n}","import React, { PureComponent, Suspense } from \"react\";\nimport { connect } from 'react-redux';\nimport { componentWillAppendToBody } from \"react-append-to-body\";\nimport { Tooltip } from 'react-tooltip';\nimport \"./scss/Hotspot.scss\";\nimport { generateUniqueString } from '../../../../utils'\nimport { themePostTracking } from '../../../../actions/themeActions';\n\nconst MyComponent = ({ children }) => {\n  return children;\n}\n\nconst AppendedView = componentWillAppendToBody(MyComponent);\nconst htmlString = (product) => {\n  const discountPrice = product.product_discount > 0 ? product.product_discount : product.product_price;\n  const originalPrice = product.product_discount > 0 && product.product_discount != product.product_price ?\n    `<div class=\"tb_p_tooltip_price tb_price_disabled\">${product.price_currency_symbol}${product.product_price}</div>` : '';\n  const priceHtml = product.product_price > 0 || product.product_discount > 0 ?\n    `${originalPrice}<div class=\"tb_p_tooltip_price\">${product.price_currency_symbol}${discountPrice}</div>` : '';\n\n  return `<a href=\"${product.product_url}\" target=\"_blank\" class=\"tb_tooltip_wrap\">\n          <div class=\"tb_p_tooltip_title\">${product.product_title}</div>\n          ${priceHtml}\n        </a>`;\n}\n\nclass Hotspot extends PureComponent {\n  state = { activeMouse: null }\n\n  setActiveMouse = (index) => {\n    return index\n  }\n  tracking = (product) => {\n    const { appData, dataItem } = this.props;\n    if (appData && Object.keys(appData).length > 0) {\n      const { wall } = appData;\n      themePostTracking({\n        type: 1, action: 2, wall: wall?.Wall?.id, product_id: product.id, post: dataItem.referenceId, owner: wall?.Wall?.owner, feed: dataItem.feedId, currency: product.price_currency, price: product.product_discount > 0 ? product.product_discount : product.product_price\n      })\n    }\n  }\n  render() {\n    const { product, appData } = this.props;\n    const { activeMouse } = this.state;\n    const Hotspot = appData && Object.keys(appData).length > 0 ? appData.wall.ProductSetting.Hotspot : ''\n    return (Hotspot.status ? <div className=\"tb_hotspot_wrap\">\n      {product.map((item, index) => {\n        const uniqueString = generateUniqueString();\n        return <div key={index} href={item.product_url} id={`tb_hotspot-${item.id}${uniqueString}`} onClick={event => { this.tracking(item.UgcProduct); event.stopPropagation(); }} onMouseEnter={event => this.setActiveMouse(index)} onMouseOut={event => this.setActiveMouse(null)} className={`tb_hotspot_dot${activeMouse == index ? ' tb_hotspot_active_' : ''}`} style={{ top: item.hotspot_cordinates.top, left: item.hotspot_cordinates.left }} data-tooltip-offset={7}>\n          <div className={`tb_hotspot__ ${Hotspot.type == 0 ? 'tb_hotspot_ani__' : ''}`} onClick={event => window.open(item.UgcProduct.product_url, '_blank')}>{index + 1}</div>\n          <AppendedView><Tooltip className=\"tb_pro_tooltip\" anchorSelect={`#tb_hotspot-${item.id}${uniqueString}`} clickable html={htmlString(item.UgcProduct)} /></AppendedView>\n        </div>\n      })\n      }\n    </div >\n      : null\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    appData: state.appData\n  }\n}\n\nexport default connect(mapStateToProps)(Hotspot);"],"names":["PopUpImage","Component","constructor","props","super","this","state","mediaLoaded","largerHeight","imgSize","small","data","postFileNew","large","filename","orignal","file","componentWillReceiveProps","nextProps","setState","render","wall","opacity","mediaSize","isHotspot","hotspot","ugc_products","length","imgStyle","filter","_jsxs","className","children","postBranding","_jsx","PostBranding","size","Hotspot","product","dataItem","decoding","ref","mediaRef","src","srcSet","concat","sizes","width","alt","GET_MEDIA_NAME","link","network","id","Wall","owner","feedId","filterId","onLoad","handleImageLoad","onError","stories","e","POPUP_IMAGE_RENEW_REQUEST","loading","draggable","height","style","JSON","parse","window","localStorage","getItem","PopUpMediaSlider","PureComponent","handleSlideChange","splide","splideRef","current","index","isFirst","isLast","imgUrl","currentIndex","React","ImageUrl","parseInt","mediaHeight","mediaWidth","componentDidMount","on","componentWillUnmount","off","imageList","_Fragment","postFile","Splide","hasTrack","options","rewind","speed","gap","autoplay","autoHeight","padding","pagination","arrows","classes","page","onActive","prev","next","SplideTrack","map","imageItem","autoPlay","isPostFile","isTagEmbed","SplideSlide","margin","type","PopUpVideo","mediaUrl","media","mediaFile","networkId","disabled","role","mediaReplaceText","String","replace","setVideoLoaded","event","videoLoaded","muteToggle","muted","onUpdateTime","progress","isTagShop","played","playedSeconds","console","log","VideoWrap","reelPlayTimeUpdateData","muteIcon","includes","onClick","ReactPlayer","url","config","facebook","appId","attributes","forceVideo","loop","POPUP_VIDEO_RENEW","volume","playsinline","onReady","playing","controls","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","onProgress","AppendedView","componentWillAppendToBody","_ref","htmlString","discountPrice","product_discount","product_price","originalPrice","price_currency_symbol","priceHtml","product_url","product_title","arguments","activeMouse","setActiveMouse","tracking","appData","Object","keys","_wall$Wall","_wall$Wall2","themePostTracking","action","product_id","post","referenceId","feed","currency","price_currency","price","ProductSetting","status","item","uniqueString","generateUniqueString","href","UgcProduct","stopPropagation","onMouseEnter","onMouseOut","top","hotspot_cordinates","left","open","Tooltip","anchorSelect","clickable","html","connect"],"sourceRoot":""}