{"version":3,"file":"static/js/3336.20f6ceb8.chunk.js","mappings":"sNAOA,MAGMA,GAAaC,EAAAA,EAAAA,OAAKC,IAAA,IAAC,UAAEC,EAAS,MAAEC,EAAK,UAAEC,GAAWH,EAAA,OAAKI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UACnFF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,UAC3BF,EAAAA,EAAAA,KAAA,OAAKG,QAAQ,OAAOF,UAAU,eAAeG,OAAQ,GAAIC,MAAO,GAAIC,IAAKT,EAAWU,IAAI,GAAGC,QAASC,GAAKA,EAAEC,OAAOJ,IALhF,oCAKiGR,gBAAc,eAAP,sBAFxD,iBAAiBC,IAI3G,IAWN,MAAMY,UAAqBC,EAAAA,UACpBC,WAAAA,CAAYC,GACLC,MAAMD,GAAO,KAQpBE,eAAiB,KACVC,KAAKC,SAAS,CACPC,QAASF,KAAKG,MAAMD,QACzB,EACR,KAWDE,SAAYtB,IACL,MAAM,OAAEuB,GAAWL,KAAKH,MAClBS,EAAOD,EAAOE,MAAMC,GAASA,EAAKC,YAAc3B,IAClDwB,IArCFI,EAACD,EAAWE,KACrB,MAAMC,EAAOC,SAASC,cAAc,QACpCF,EAAKG,GAAK,QAAQN,IAClBG,EAAKI,IAAM,aACXJ,EAAKK,KAAO,WACZL,EAAKM,KAAO,GAAGC,EAAAA,gBAAsBR,QACrCE,SAASO,KAAKC,YAAYT,EAAK,EAgCjBF,CAAQ5B,EAAe,OAAJwB,QAAI,IAAJA,OAAI,EAAJA,EAAMgB,iBACzBtB,KAAKC,SAAS,CAAEK,OAAMxB,cAC7B,EACL,KACFyC,kBAAqBzC,GAAc0C,IAC5B,MAAM,QAAEC,GAAYzB,KAAKH,MACzB,GAAI4B,EAAS,CACN,MAAM,KAAEC,EAAI,SAAEC,GAAaF,EACrBG,EAAqB,OAARD,QAAQ,IAARA,OAAQ,EAARA,EAAUC,WACvBC,EAASC,KAAKC,MAAMC,KAAKC,MAAQ,KACvC,IAAIC,EAAYR,EAAKS,UAAUC,cAC/BpC,KAAKH,MAAMwC,8BACJX,EAAKY,KAAKvB,GACVc,EACAK,EACApD,EACU,OAAV8C,QAAU,IAAVA,OAAU,EAAVA,EAAYW,MACF,OAAVX,QAAU,IAAVA,OAAU,EAAVA,EAAYY,YACZ,MAEPxC,KAAKI,SAAStB,EACrB,GACN,KACD2D,mBAAsBjB,IACXxB,KAAK0C,YAAYC,UAAY3C,KAAK0C,YAAYC,QAAQC,SAASpB,EAAM/B,SAClEO,KAAKC,SAAS,CACPC,QAAQ,GAEtB,EAtDAF,KAAKG,MAAQ,CACNrB,UAAW,EACXwB,KAAM,KACNJ,QAAQ,GAEfF,KAAK0C,YAAcG,EAAAA,WAC1B,CAMAC,iBAAAA,GAAqB,IAADC,EACb,MAAM,OAAE1C,GAAWL,KAAKH,MACxBG,KAAKI,UAAe,OAANC,QAAM,IAANA,GAAW,QAAL0C,EAAN1C,EAAS,UAAE,IAAA0C,OAAL,EAANA,EAAatC,YAAaT,KAAKG,MAAMrB,WACnD+B,SAASmC,iBAAiB,QAAShD,KAAKyC,mBAC/C,CAEAQ,oBAAAA,GACOpC,SAASqC,oBAAoB,QAASlD,KAAKyC,mBAClD,CAoCAU,MAAAA,GACO,MAAM,OAAE9C,GAAWL,KAAKH,OAClB,KAAES,EAAI,UAAExB,EAAS,OAAEoB,GAAWF,KAAKG,MACzC,OAAOG,GAAQ8C,OAAOC,KAAK/C,GAAMgD,OAAS,GAAIC,EAAAA,EAAAA,MAAA,OAAKvE,UAAU,gBAA6CwE,MAAO,CAAEC,gBAAqB,OAAJnD,QAAI,IAAJA,OAAI,EAAJA,EAAMoD,kBAAmBzE,SAAA,EACtJsE,EAAAA,EAAAA,MAAA,OAAKvE,UAAU,mBAAkBC,SAAA,EAC1BsE,EAAAA,EAAAA,MAAA,OAAKvE,UAAU,iBAAgBC,SAAA,EACxBF,EAAAA,EAAAA,KAACN,EAAU,CAACG,UAAe,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAM1B,UAAWC,MAAW,OAAJyB,QAAI,IAAJA,OAAI,EAAJA,EAAMzB,MAAOC,UAAWA,KACvEyE,EAAAA,EAAAA,MAAA,OAAKvE,UAAU,kCAAkCwE,MAAO,CAAEG,WAAgB,OAAJrD,QAAI,IAAJA,OAAI,EAAJA,EAAMsD,gBAAkB3E,SAAA,EACvFF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAc,aAAgB,OAAJsB,QAAI,IAAJA,OAAI,EAAJA,EAAMzB,MAAO2E,MAAO,CAAEK,MAAW,OAAJvD,QAAI,IAAJA,OAAI,EAAJA,EAAMwD,iBAAkBC,SAAUC,SAAa,OAAJ1D,QAAI,IAAJA,OAAI,EAAJA,EAAM2D,kBAAmBhF,SAAM,OAAJqB,QAAI,IAAJA,OAAI,EAAJA,EAAMzB,SAClJE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAe,aAAgB,OAAJsB,QAAI,IAAJA,OAAI,EAAJA,EAAM4D,SAAUV,MAAO,CAAEK,MAAW,OAAJvD,QAAI,IAAJA,OAAI,EAAJA,EAAMwD,iBAAkBC,SAAUC,SAAa,OAAJ1D,QAAI,IAAJA,OAAI,EAAJA,EAAM6D,qBAAsBlF,SAAM,OAAJqB,QAAI,IAAJA,OAAI,EAAJA,EAAM4D,kBAIvKX,EAAAA,EAAAA,MAAA,OAAKvE,UAAU,kBAAkBoF,IAAKpE,KAAK0C,YAAYzD,SAAA,EAChDF,EAAAA,EAAAA,KAAA,OAAKC,UAAW,0BAA2BqF,QAA4B,IAAf,OAAJ/D,QAAI,IAAJA,OAAI,EAAJA,EAAMG,WAAiBe,GAAS8C,OAAOC,KAAS,OAAJjE,QAAI,IAAJA,OAAI,EAAJA,EAAMkE,WAAY,UAAYxE,KAAKD,eAAgByD,MAAO,CAAEC,gBAAqB,OAAJnD,QAAI,IAAJA,OAAI,EAAJA,EAAMmE,qBAAsBZ,MAAW,OAAJvD,QAAI,IAAJA,OAAI,EAAJA,EAAMoE,kBAAmBC,YAAiB,OAAJrE,QAAI,IAAJA,OAAI,EAAJA,EAAMmE,sBAAuBxF,SAAM,OAAJqB,QAAI,IAAJA,OAAI,EAAJA,EAAMsE,wBAC1R1E,IACMnB,EAAAA,EAAAA,KAAA,OAAKC,UAAW,oBAAmBkB,EAAS,gBAAkB,IAAKjB,SAC3DoB,EAAOwE,KAAI,CAACrE,EAAMsE,IAA6B,IAAf,OAAJtE,QAAI,IAAJA,OAAI,EAAJA,EAAMC,YACnC1B,EAAAA,EAAAA,KAAA,OAAiBC,UAAU,gBAAgBqF,QAAS7C,GAASnB,GAAUA,EAAOyE,GAAON,WAAaF,OAAOC,KAAKlE,EAAOyE,GAAON,WAAY,UAAY,KAAKvF,SAC7I,OAAJuB,QAAI,IAAJA,OAAI,EAAJA,EAAMuE,aADJD,GAED,gBAI9B,OAANzE,QAAM,IAANA,OAAM,EAANA,EAAQiD,QAAS,GAAIvE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,SAC9CoB,EAAOwE,KAAI,CAACrE,EAAMsE,KAAU/F,EAAAA,EAAAA,KAAA,OAAKC,UAAW,kBAAoB,OAAJwB,QAAI,IAAJA,OAAI,EAAJA,EAAMC,YAAa3B,EAAY,YAAc,IAAkB,kBAAqB,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMC,UAAW4D,QAASrE,KAAKuB,kBAAsB,OAAJf,QAAI,IAAJA,OAAI,EAAJA,EAAMC,WAAWxB,UACxMsE,EAAAA,EAAAA,MAAA,OAAKvE,UAAU,kDAAiDC,SAAA,CACrC,IAAf,OAAJuB,QAAI,IAAJA,OAAI,EAAJA,EAAMC,YAAiB1B,EAAAA,EAAAA,KAACiG,EAAAA,SAAQ,CAACC,UAAUlG,EAAAA,EAAAA,KAAAmG,EAAAA,SAAA,IAAMjG,UAACF,EAAAA,EAAAA,KAACoG,EAAAA,EAAc,CAACC,gBAAiB,cAAeC,QAAa,OAAJ7E,QAAI,IAAJA,OAAI,EAAJA,EAAM6E,QAASC,WAAW,MAAuB,MAC7JvG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,SAAqB,IAAf,OAAJuB,QAAI,IAAJA,OAAI,EAAJA,EAAMC,WAAiB,MAAY,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMuE,kBAH4BD,OAMnH,OA5BkE,WAAWhG,KA6BpF,IAChB,EAIP,MAUA,GAAeyG,EAAAA,EAAAA,KAVSpF,IACV,CACAsB,QAAStB,EAAMsB,YAGF+D,IACb,CACAnD,8BAA+BA,CAACoD,EAAQC,EAAWxD,EAAWzB,EAAW8B,EAAOC,EAAamD,IAAYH,GAASnD,EAAAA,EAAAA,GAA8BoD,EAAQC,EAAWxD,EAAWzB,EAAW8B,EAAOC,EAAamD,OAG3N,CAA4DjG,E,0EChI5D,MAAMkG,EAAqBC,GAElBC,MAAMC,KAAK,CAAEzC,OAAQuC,IAAS,CAACG,EAAGC,KACvClH,EAAAA,EAAAA,KAAA,OAAaC,UAAW,0BAAgBiH,EAAI,IAAIhH,UAACF,EAAAA,EAAAA,KAAA,WAAvCkH,KAIRC,EAAe,CACnB,GAAGnH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAClB,GAAGD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBC,UAACF,EAAAA,EAAAA,KAAA,YACzC,GAAGA,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UAACF,EAAAA,EAAAA,KAAA,YAChC,GAAGA,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,SAAE2G,EAAkB,KACzD,GAAG7G,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAACF,EAAAA,EAAAA,KAAA,YACjC,GAAGA,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,SAAE2G,EAAkB,KACzD,GAAG7G,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,SAAE2G,EAAkB,KAC1D,GAAG7G,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UAACF,EAAAA,EAAAA,KAAA,YAC7B,IAAIA,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UAACF,EAAAA,EAAAA,KAAA,YACjC,IAAIA,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UAACF,EAAAA,EAAAA,KAAA,YAC/B,IAAIA,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQC,UAACF,EAAAA,EAAAA,KAAA,YAC5B,IAAIA,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAACF,EAAAA,EAAAA,KAAA,YAClC,IAAIA,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBC,UAACF,EAAAA,EAAAA,KAAA,YAC1C,IAAIA,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASC,UAACF,EAAAA,EAAAA,KAAA,YAC7B,IAAIA,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,SAAE2G,EAAkB,KACzD,IAAI7G,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UAACF,EAAAA,EAAAA,KAAA,YAC/B,IAAIA,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UAACF,EAAAA,EAAAA,KAAA,YAC/B,IAAIA,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,UAACF,EAAAA,EAAAA,KAAA,YACnC,IAAIA,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,SAAE2G,EAAkB,KACzD,IAAI7G,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,SAAE2G,EAAkB,KAC1D,IAAI7G,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,UAACF,EAAAA,EAAAA,KAAA,YACtC,IAAIA,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,UAACF,EAAAA,EAAAA,KAAA,YAC3B,IAAIA,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,SAAE2G,EAAkB,KAC1D,IAAI7G,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,UAACF,EAAAA,EAAAA,KAAA,YAC3B,IAAIA,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,SAAE2G,EAAkB,KAC9D,IAAI7G,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,SAAE2G,EAAkB,KAC1D,IAAI7G,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,UAACF,EAAAA,EAAAA,KAAA,YACpC,IAAIA,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,SAAE2G,EAAkB,KAC5D,IAAI7G,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,SAAE2G,EAAkB,KAC9D,IAAI7G,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,SAAE2G,EAAkB,MAGvDO,GAAazH,EAAAA,EAAAA,OAAKC,IAAkC,IAAjC,UAAE8B,EAAS,aAAE2F,GAAczH,EAClD,MAAM0H,EAAiB,GAAGD,4BACpBE,EAAOJ,EAAazF,IAAc,GAExC,OAAO6F,GAAOvH,EAAAA,EAAAA,KAAA,OAAKC,UAAWqH,EAAepH,SAAEqH,IAAc,EAAE,IAGlD,MAAMC,UAAuBC,EAAAA,cAC1CrD,MAAAA,GACE,OAAOpE,EAAAA,EAAAA,KAACoH,EAAU,IAAKnG,KAAKH,OAC9B,E,sECnDF,MAKA,EALuBlB,IAA8C,IAA7C,gBAAEyG,EAAe,QAAEC,EAAO,UAAEC,GAAW3G,EAE7D,QADsB2G,KAAmB,CAAC,EAAE,EAAE,IAAImB,SAASpB,EAAQtE,KAC3ChC,EAAAA,EAAAA,KAACwH,EAAAA,QAAc,CAAClB,QAASA,EAASe,aAAchB,KACtErG,EAAAA,EAAAA,KAAA,OAAKC,UAAW,GAAGoG,iBAA+BC,EAAQiB,OAAOrH,UAACF,EAAAA,EAAAA,KAAA,WAAiB,C,uCCGnF2H,E,sFACG,IAAIC,EAEX,MA6CatE,EAAgCA,CACzCoD,EACAC,EACAxD,EACAzB,EACA8B,EACAC,EACAmD,IACEH,IAAc,IAADoB,EAAAC,EAAAC,EACf,MAAM,KAAEpF,EAAMC,SAAUoF,GAAaC,EAAAA,EAAMC,WAAWxF,QAChDyF,EAAkC,KAApB,OAAJxF,QAAI,IAAJA,GAAe,QAAXkF,EAAJlF,EAAMyF,iBAAS,IAAAP,OAAX,EAAJA,EAAiB7F,KAAqC,KAAV,QAAf8F,EAAAnF,EAAK0F,kBAAU,IAAAP,OAAA,EAAfA,EAAiBQ,KAGxDC,EADUlE,OAAOC,MAAa,OAAR0D,QAAQ,IAARA,OAAQ,EAARA,EAAUQ,qBAAsB,CAAC,GACjCC,QACxB,CAAC3B,EAAO4B,KAAG,IAAAC,EAAA,OACP7B,GAAuB,IAAdpF,IAAmD,QAAhCiH,EAAAX,EAASQ,mBAAmBE,UAAI,IAAAC,OAAA,EAAhCA,EAAkCpE,SAAe,EAAE,IAC3E,OAARyD,QAAQ,IAARA,GAAuC,QAA/BD,EAARC,EAAUQ,mBAAmB9G,UAAU,IAAAqG,OAA/B,EAARA,EAAyCxD,SAAU,GAGjDqE,EAAYZ,EAASnF,WAAWW,MAEhCqF,EAlEeC,KACrB,MAAMC,EAASxD,OAAOyD,SAAS7G,KACzB8G,EAAoBH,EAAM,OAAOA,IAAQ,WAC/C,IAAII,EAAa,CAAC,EACdC,EAAa,CAAC,EAElB,MAAMC,EAASV,IAAQW,EAAAA,EAAAA,IAAeN,EAAQL,GACxCY,EAASF,EAAM,UACfG,EAAMH,EAAM,WACZI,EAAMJ,EAAM,QAiClB,OA/BIK,EAAAA,KAAc,4EAA4EC,KAAKnE,OAAOyD,SAASW,OAASJ,GAAOD,KAC/HJ,EAAaE,EAAM,QAAU,CAAC,EAAI,CAAEQ,QAAS,GACzCN,IAAQ1B,EAAa0B,IAGzBO,EAAAA,IAAgBT,EAAM,aAAYF,EAAWY,QAAUV,EAAM,YAC5DD,EAAaK,EACZ,CACEA,IAAKA,EAAI9B,SAAS,QAAU,EAAI,EAChCqC,SAAUC,mBAAmBZ,EAAM,kBAAoBA,EAAM,aAAe,KAE9EG,EACA,CAAEK,QAAS,KAAOhC,GAAc,CAAE0B,OAAQ1B,IAC1C,MACE,MAAMqC,EAAUnI,SAASoI,cAAcjB,GACvC,IAAKgB,EAAS,MAAO,CAAC,EAEtB,MAAM,SAAEF,EAAQ,OAAEI,EAAM,OAAEb,EAAM,KAAEc,GAASH,EAAQI,QAEnD,MAAO,IACCD,GAAQ,CACZZ,IAAKY,EAAK1C,SAAS,QAAU,EAAI,EACjCqC,SAAUC,mBAAmBD,GAAY,QAErCN,EAAAA,IAAa,CACjBG,QAASO,EAAS,OAAIG,EACtBhB,OAAQA,QAAUgB,GAGrB,EAhBH,GAkBC,CAAEC,QAAS,IAAKrB,KAAeC,KAAeqB,EAAAA,IAAe,EAwB/CC,CAAgB3B,EAAAA,KAAgB,CAAEyB,QAAS,CAAC,IAC3D,QAAEA,GAAY1B,EAEpB0B,EAAQf,IAAM5C,EAAU,EAAI2D,EAAQf,UAAOc,EAC3CC,EAAQR,SAAWnD,GAAW2D,EAAQR,eAAYO,EAClDC,EAAQG,OAAS,EAGjB,MAAMC,EAAiB,CACnB9H,WAAY,CACRW,MAAOoF,EACP7I,UAAW2B,EACX+B,cACAmD,WAEJgE,gBAAiBlJ,EACjBmJ,QAAS,GACTC,YAAa,CACT,CAACpJ,GAAY,CAAEoJ,aAAa,EAAMtH,MAAOoF,IAE7ChC,WAGJ,GAAI2B,EAAcpF,GAAaoF,IAAgB7G,EAAW,CAAC,IAADqJ,EAClDpD,GAAMA,EAAKqD,SACfrD,EAAOsD,IAAAA,YAAkBd,SACzBtB,EAAaqC,YAAcvD,EAAKwD,MAEhC1E,EAAS,CAAEvE,KAAMkJ,EAAAA,GAAaC,SAAS,IAEvC,MAAMC,EAAU,GAAGC,EAAAA,KAAa7E,KAAUC,KAAaxD,KAAazB,OAAe8B,IAC7EgI,EAAY/B,EAAAA,GAAY,GAAG6B,MAA6B,QAAlBP,GAAAU,EAAAA,EAAAA,IAAc3C,EAAAA,WAAI,IAAAiC,OAAA,EAAlBA,EAAoBW,OAAQ,KAAOJ,EACzEK,EAAcC,EAAAA,GAAW,GAAGL,EAAAA,KAAa7E,KAAUvD,KAAazB,KAAa8B,IAAUgI,GAE7F,IAAIK,EAAAA,GACCC,IAAIH,EAAa9C,GACjBkD,MAAMC,IACH,MAAMC,EAAWL,EAAAA,KAAa,CAAC,QAAS,OAAOlE,SAAShB,GAClD,CAAEnF,KAAM2K,KAAKC,MAAM,KACnBH,EAENvF,EAAS,CACLvE,KAAMkK,EAAAA,GACNf,QAAS,IACFV,EACHE,QAASoB,EAAS1K,KAAKA,KACvBuJ,YAAa,CACT,CAACpJ,GAAY,CACToJ,cACI3C,GAAW9D,OAAOC,KAAK2H,EAAS1K,KAAKA,MAAMgD,OAASpB,IAEpB,IAA1B8I,EAAS1K,KAAK8K,QACxB7I,MAAOyI,EAAS1K,KAAKiC,QAG7B8I,UAAU,IAEhB,IAELC,OAAM,KACH9F,EAAS,CAAEvE,KAAMkJ,EAAAA,GAAaC,SAAS,GAAQ,GAE3D,MACI5E,EAAS,CACLvE,KAAMkK,EAAAA,GACNf,QAASV,GAEjB,C","sources":["app/ReviewHeader/SocialBanner/index.js","app/Themes/Elements/Network/DefaultNetwork.js","app/Components/Filters/FilterType/Elements/FilterNetworks.js","actions/filterpostAction.js"],"sourcesContent":["import React, { Component, Suspense, memo } from \"react\";\r\nimport { CloudUrl } from \"../../../constants\";\r\nimport { connect } from 'react-redux';\r\nimport './scss/SocialBanner.scss' \r\nimport FilterNetworks from \"../../Components/Filters/FilterType/Elements/FilterNetworks\";\r\nimport { filterPostDataAppendWebFilter } from \"../../../actions/filterpostAction\";\r\n\r\nconst errorImage = (name, txtColor, bgColor) => `https://ui-avatars.com/api/?name=${name}&background=${bgColor}&color=${txtColor}&length=1`\r\n\r\n\r\nconst BrandImage = memo(({ LogoImage, title, networkID }) => <div className=\"tb_sb__brand\" key={`network_image_${networkID}`}>\r\n       <div className=\"tb_sb__brand_icon\" >\r\n              <img loading=\"lazy\" className=\"tb_brand_img\" height={64} width={64} src={LogoImage} alt=\"\" onError={e => e.target.src = errorImage(title, \"fff\", \"000\")} />\r\n       </div>\r\n</div>)\r\n\r\nconst linkAdd = (networkId, urllink) => {\r\n       const link = document.createElement('link');\r\n       link.id = `link_${networkId}`;\r\n       link.rel = 'stylesheet';\r\n       link.type = 'text/css';\r\n       link.href = `${CloudUrl}/web-fonts/${urllink}.css`\r\n       document.head.appendChild(link);\r\n}\r\n\r\nclass SocialBanner extends Component {\r\n       constructor(props) {\r\n              super(props);\r\n              this.state = {\r\n                     networkID: 0,\r\n                     data: null,\r\n                     isOpen: false\r\n              }\r\n              this.dropdownRef = React.createRef();\r\n       }\r\n       toggleDropdown = () => {\r\n              this.setState({\r\n                     isOpen: !this.state.isOpen\r\n              });\r\n       }\r\n       componentDidMount() {\r\n              const { Banner } = this.props;\r\n              this.onUpdate(Banner?.[0]?.networkId || this.state.networkID)\r\n              document.addEventListener('click', this.handleClickOutside);\r\n       }\r\n\r\n       componentWillUnmount() {\r\n              document.removeEventListener('click', this.handleClickOutside);\r\n       }\r\n\r\n       onUpdate = (networkID) => {\r\n              const { Banner } = this.props;\r\n              const data = Banner.find((item) => item.networkId === networkID);\r\n              if (data) {\r\n                     linkAdd(networkID, data?.title_link_font)\r\n                     this.setState({ data, networkID });\r\n              }\r\n       };\r\n       onClickWebFilters = (networkID) => event => {\r\n              const { appData } = this.props\r\n              if (appData) {\r\n                     const { wall, postData } = appData\r\n                     const appendData = postData?.appendData\r\n                     const tstamp = Math.floor(Date.now() / 1000);\r\n                     let postCount = wall.ThemeRule.numberOfPosts;\r\n                     this.props.filterPostDataAppendWebFilter(\r\n                            wall.Wall.id,\r\n                            tstamp,\r\n                            postCount,\r\n                            networkID,\r\n                            appendData?.after,\r\n                            appendData?.heightEvent,\r\n                            null\r\n                     );\r\n                     this.onUpdate(networkID)\r\n              }\r\n       }\r\n       handleClickOutside = (event) => {\r\n              if (this.dropdownRef.current && !this.dropdownRef.current.contains(event.target)) {\r\n                     this.setState({\r\n                            isOpen: false\r\n                     });\r\n              }\r\n       }\r\n       render() {\r\n              const { Banner } = this.props;\r\n              const { data, networkID, isOpen } = this.state\r\n              return data && Object.keys(data).length > 0 ? <div className=\"tb_sb__b_cont\" key={`network_${networkID}`} style={{ backgroundColor: data?.background_color }}>\r\n                     <div className=\"tb_sb__b_wrapper\">\r\n                            <div className=\"tb_sb__profile\">\r\n                                   <BrandImage LogoImage={data?.LogoImage} title={data?.title} networkID={networkID} />\r\n                                   <div className=\"tb_sb___info tb-cTBfont-regular\" style={{ fontFamily: data?.title_css_font, }}>\r\n                                          <div className=\"tb_sb__name\" aria-label={data?.title} style={{ color: data?.title_font_color, fontSize: parseInt(data?.title_font_size) }}>{data?.title}</div>\r\n                                          <div className=\"tb_sb__posts\" aria-label={data?.subTitle} style={{ color: data?.title_font_color, fontSize: parseInt(data?.subTitle_font_size) }}>{data?.subTitle}</div>\r\n                                   </div>\r\n                            </div>\r\n\r\n                            <div className=\"tb_sb_btn_wrap_\" ref={this.dropdownRef}>\r\n                                   <div className={`tb_sb_f_btn tb-cTBfont-`} onClick={data?.networkId != 0 ? event => window.open(data?.followLink, '_blank') : this.toggleDropdown} style={{ backgroundColor: data?.background_color_two, color: data?.social_icon_color, borderColor: data?.background_color_two }}>{data?.subtitle_font_varient}</div>\r\n                                   {isOpen && (\r\n                                          <div className={`tb_sb_dropdown_ ${isOpen ? 'tb_sb_dd_show' : ''}`}>\r\n                                                 {Banner.map((item, index) => item?.networkId != 0 ? \r\n                                                 <div key={index} className=\"tb_sb_dd_list\" onClick={event => Banner && Banner[index].followLink ? window.open(Banner[index].followLink, \"_blank\") : null}>\r\n                                                        {item?.networkName}\r\n                                                 </div> : null)}\r\n                                          </div>)}\r\n                            </div>\r\n                     </div>\r\n                     {Banner?.length > 1 ? <div className=\"tb_sb_f_wrapper\">\r\n                            {Banner.map((item, index) => <div className={`tb_sb_f_list ${item?.networkId == networkID ? `tb_active` : ``}`} key={index} tb-data-network={item?.networkId} onClick={this.onClickWebFilters(item?.networkId)}>\r\n                                   <div className=\"tb_sb_f_button tb-network-rectangular-ico-users\">\r\n                                          {item?.networkId != 0 ? <Suspense fallback={<></>}><FilterNetworks filterIconClass={'tb_sb_f_ico'} network={item?.network} isDefault={false} /></Suspense> : null}\r\n                                          <div className=\"tb_sb_f_button_text\">{item?.networkId == 0 ? `All` : item?.networkName}</div>\r\n                                   </div>\r\n                            </div>)}\r\n                     </div> : null}\r\n              </div> : null\r\n       }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n       return {\r\n              appData: state.appData,\r\n       }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n       return {\r\n              filterPostDataAppendWebFilter: (wallID, timeStamp, postCount, networkId, after, heightEvent, tagName) => dispatch(filterPostDataAppendWebFilter(wallID, timeStamp, postCount, networkId, after, heightEvent, tagName))\r\n       }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SocialBanner);","import React, { PureComponent, memo } from \"react\";\r\n\r\n\r\nconst generateColorDivs = (count) => {\r\n  const colorClass = `tb_colr_ico tb_ico_path`;\r\n  return Array.from({ length: count }, (_, i) => (\r\n    <div key={i} className={`${colorClass}${i + 1}`}><div></div></div>\r\n  ));\r\n};\r\n\r\nconst networkIcons = {\r\n  1: <div className=\"tb-twitter\"></div>,\r\n  2: <div className=\"tb-instagram-default\"><div></div></div>,\r\n  3: <div className=\"tb-facebook\"><div></div></div>,\r\n  4: <div className=\"tb-google-default\">{generateColorDivs(4)}</div>,\r\n  5: <div className=\"tb-pinterest\"><div></div></div>,\r\n  6: <div className=\"tb-flickr-default\">{generateColorDivs(2)}</div>,\r\n  7: <div className=\"tb-youtube-default\">{generateColorDivs(2)}</div>,\r\n  8: <div className=\"tb-vimeo\"><div></div></div>,\r\n  10: <div className=\"tb-linkedin\"><div></div></div>,\r\n  11: <div className=\"tb-tumblr\"><div></div></div>,\r\n  12: <div className=\"tb-rss\"><div></div></div>,\r\n  15: <div className=\"tb-workplace\"><div></div></div>,\r\n  18: <div className=\"tb-instagram-default\"><div></div></div>,\r\n  19: <div className=\"tb-yelp\"><div></div></div>,\r\n  20: <div className=\"tb-slack-default\">{generateColorDivs(8)}</div>,\r\n  21: <div className=\"tb-yammer\"><div></div></div>,\r\n  23: <div className=\"tb-airbnb\"><div></div></div>,\r\n  25: <div className=\"tb-soundcloud\"><div></div></div>,\r\n  26: <div className=\"tb-giphy-default\">{generateColorDivs(7)}</div>,\r\n  28: <div className=\"tb-tiktok-default\">{generateColorDivs(7)}</div>,\r\n  29: <div className=\"tb-onsite-upload\"><div></div></div>,\r\n  30: <div className=\"tb-vk\"><div></div></div>,\r\n  31: <div className=\"tb-tiktok-default\">{generateColorDivs(7)}</div>,\r\n  32: <div className=\"tb-vk\"><div></div></div>,\r\n  33: <div className=\"tb-trustpilot-default\">{generateColorDivs(2)}</div>,\r\n  34: <div className=\"tb-amazon-default\">{generateColorDivs(2)}</div>,\r\n  35: <div className=\"tb-tripadvisor\"><div></div></div>,\r\n  36: <div className=\"tb-tagembed-default\">{generateColorDivs(3)}</div>,\r\n  37: <div className=\"tb-aliexpress-default\">{generateColorDivs(4)}</div>,\r\n  38: <div className=\"tb-booking-default\">{generateColorDivs(3)}</div>,\r\n};\r\n\r\nconst DefNetIcon = memo(({ networkId, networkClass }) => {\r\n  const networkClasses = `${networkClass} tb__icon tb_ico_default`;\r\n  const icon = networkIcons[networkId] || '';\r\n\r\n  return icon ? <div className={networkClasses}>{icon}</div> : '';\r\n});\r\n\r\nexport default class DefaultNetwork extends PureComponent {\r\n  render() {\r\n    return <DefNetIcon {...this.props} />;\r\n  }\r\n}","import React, { Suspense } from \"react\";\r\nimport DefaultNetwork from '../../../../Themes/Elements/Network/DefaultNetwork'\r\nconst FilterNetworks = ({ filterIconClass, network, isDefault }) => {\r\n  const isDefaultIcon = isDefault ? true : [7,4,36].includes(network.id) ? true : false\r\n  return (isDefaultIcon ? <DefaultNetwork network={network} networkClass={filterIconClass} /> :\r\n    <div className={`${filterIconClass} tb__icon tb-${network.icon}`}><div></div></div>);\r\n}\r\nexport default FilterNetworks","import axios from \"axios\";\r\nimport store from \"../store\";\r\nimport { getQueryString, rID } from \"../utils\";\r\nimport { isSocialWall, isTagbox, isTagShop } from \"./api\";\r\nimport { DATA_LOADER, FILTER_DATA, THEME_DATA } from \"../reducers/reducersKeys\";\r\nimport HttpClient from \"./http-client\";\r\nimport { getAttributes, isUpdateFrom } from \"./commonAction\";\r\n\r\nvar call;\r\nexport let dataRegion;\r\n \r\nconst getHashTagParam = (rID) => {\r\n    const parsed = window.location.href;\r\n    const updateContainerID = rID ? `#co_${rID}` : \".taggbox\";\r\n    let shopParams = {};\r\n    let headerTags = {};\r\n    \r\n    const param = (key) => getQueryString(parsed, key);\r\n    const region = param('region')\r\n    const web = param('website')\r\n    const tag = param('tags')\r\n\r\n    if (isTagShop && (/.*(test\\.tagshop\\.ai\\/w\\/|widget-test\\.tagshop\\.ai|widget\\.tagshop\\.ai).*/.test(window.location.host) || web || region)) {\r\n        shopParams = param('wall') ? {} : { Website: 1 };\r\n        if (region) dataRegion = region;\r\n    }\r\n        \r\n    if (isSocialWall && param('wallKey')) shopParams.wallKey = param('wallKey');\r\n         headerTags = tag\r\n        ? {\r\n            tag: tag.includes(\"true\") ? 1 : 0,\r\n            keywords: decodeURIComponent(param('data-keywords') || param('keywords') || '')\r\n            }\r\n        : web\r\n        ? { Website: 1, ...(dataRegion && { region: dataRegion }) }\r\n        : (() => {\r\n            const taggbox = document.querySelector(updateContainerID);\r\n            if (!taggbox) return {};\r\n\r\n            const { keywords, source, region, tags } = taggbox.dataset;\r\n\r\n            return {\r\n                ...(tags && {\r\n                tag: tags.includes(\"true\") ? 1 : 0,\r\n                keywords: decodeURIComponent(keywords || '')\r\n                }),\r\n                ...(isTagShop && {\r\n                Website: source ? 1 : undefined,\r\n                region: region || undefined\r\n                })\r\n            };\r\n            })();\r\n\r\n    return { headers: { ...shopParams, ...headerTags, ...isUpdateFrom }};\r\n}\r\n\r\nexport const filterPostDataAppendWebFilter = (\r\n    wallID,\r\n    timeStamp,\r\n    postCount,\r\n    networkId,\r\n    after,\r\n    heightEvent,\r\n    tagName\r\n) => (dispatch) => {\r\n    const { wall, postData: dataPost } = store.getState().appData;\r\n    const bestFit = wall?.ThemeInfo?.id === 4 && wall.ThemeStyle?.row === 1;\r\n\r\n    const allKeys = Object.keys(dataPost?.filteredDataObject || {});\r\n    const filterCount = allKeys.reduce(\r\n        (count, key) =>\r\n            count + (networkId === 0 ? (dataPost.filteredDataObject[key]?.length || 0) : 0),\r\n        dataPost?.filteredDataObject[networkId]?.length || 0\r\n    );\r\n\r\n    const afterData = dataPost.appendData.after;\r\n\r\n    const updateHeader = getHashTagParam(rID, wallID) || { headers: {} };\r\n    const { headers } = updateHeader;\r\n\r\n    headers.tag = tagName ? 1 : headers.tag || undefined;\r\n    headers.keywords = tagName || headers.keywords || undefined;\r\n    headers.action = 1;\r\n\r\n    // Prepare default payload\r\n    const defaultPayload = {\r\n        appendData: {\r\n            after: afterData,\r\n            networkID: networkId,\r\n            heightEvent,\r\n            tagName,\r\n        },\r\n        filterNetworkId: networkId,\r\n        newData: [],\r\n        hasMoreData: {\r\n            [networkId]: { hasMoreData: true, after: afterData },\r\n        },\r\n        tagName,\r\n    };\r\n\r\n    if (filterCount < postCount && filterCount !== networkId) {\r\n        if (call) call.cancel();\r\n        call = axios.CancelToken.source();\r\n        updateHeader.cancelToken = call.token;\r\n\r\n        dispatch({ type: DATA_LOADER, payload: true });\r\n\r\n        const baseUrl = `${THEME_DATA}${wallID}/${timeStamp}/${postCount}/${networkId}/1/${after}`;\r\n        const updateUrl = isTagShop ? `${baseUrl}/${getAttributes(rID)?.mUrl || \"\"}` : baseUrl;\r\n        const urlToAccess = isTagbox ? `${THEME_DATA}${wallID}/${postCount}/${networkId}/${after}` : updateUrl;\r\n\r\n        new HttpClient()\r\n            .get(urlToAccess, updateHeader)\r\n            .then((apiResponse) => {\r\n                const response = isTagbox && ![\"62229\", 62229].includes(wallID)\r\n                    ? { data: JSON.parse([]) } // Replace `[]` with decompressed data if needed.\r\n                    : apiResponse;\r\n\r\n                dispatch({\r\n                    type: FILTER_DATA,\r\n                    payload: {\r\n                        ...defaultPayload,\r\n                        newData: response.data.data,\r\n                        hasMoreData: {\r\n                            [networkId]: {\r\n                                hasMoreData:\r\n                                    bestFit && Object.keys(response.data.data).length < postCount\r\n                                        ? false\r\n                                        : response.data.hasPost === 1,\r\n                                after: response.data.after,\r\n                            },\r\n                        },\r\n                        isFilter: true,\r\n                    },\r\n                });\r\n            })\r\n            .catch(() => {\r\n                dispatch({ type: DATA_LOADER, payload: false });\r\n            });\r\n    } else {\r\n        dispatch({\r\n            type: FILTER_DATA,\r\n            payload: defaultPayload,\r\n        });\r\n    }\r\n};"],"names":["BrandImage","memo","_ref","LogoImage","title","networkID","_jsx","className","children","loading","height","width","src","alt","onError","e","target","SocialBanner","Component","constructor","props","super","toggleDropdown","this","setState","isOpen","state","onUpdate","Banner","data","find","item","networkId","linkAdd","urllink","link","document","createElement","id","rel","type","href","CloudUrl","head","appendChild","title_link_font","onClickWebFilters","event","appData","wall","postData","appendData","tstamp","Math","floor","Date","now","postCount","ThemeRule","numberOfPosts","filterPostDataAppendWebFilter","Wall","after","heightEvent","handleClickOutside","dropdownRef","current","contains","React","componentDidMount","_Banner$","addEventListener","componentWillUnmount","removeEventListener","render","Object","keys","length","_jsxs","style","backgroundColor","background_color","fontFamily","title_css_font","color","title_font_color","fontSize","parseInt","title_font_size","subTitle","subTitle_font_size","ref","onClick","window","open","followLink","background_color_two","social_icon_color","borderColor","subtitle_font_varient","map","index","networkName","Suspense","fallback","_Fragment","FilterNetworks","filterIconClass","network","isDefault","connect","dispatch","wallID","timeStamp","tagName","generateColorDivs","count","Array","from","_","i","networkIcons","DefNetIcon","networkClass","networkClasses","icon","DefaultNetwork","PureComponent","includes","call","dataRegion","_wall$ThemeInfo","_wall$ThemeStyle","_dataPost$filteredDat2","dataPost","store","getState","bestFit","ThemeInfo","ThemeStyle","row","filterCount","filteredDataObject","reduce","key","_dataPost$filteredDat","afterData","updateHeader","rID","parsed","location","updateContainerID","shopParams","headerTags","param","getQueryString","region","web","tag","isTagShop","test","host","Website","isSocialWall","wallKey","keywords","decodeURIComponent","taggbox","querySelector","source","tags","dataset","undefined","headers","isUpdateFrom","getHashTagParam","action","defaultPayload","filterNetworkId","newData","hasMoreData","_getAttributes","cancel","axios","cancelToken","token","DATA_LOADER","payload","baseUrl","THEME_DATA","updateUrl","getAttributes","mUrl","urlToAccess","isTagbox","HttpClient","get","then","apiResponse","response","JSON","parse","FILTER_DATA","hasPost","isFilter","catch"],"sourceRoot":""}