{"version":3,"file":"static/js/8631.1cbae19d.chunk.js","mappings":"4NAQA,MAAMA,UAAgBC,EAAAA,cACfC,MAAAA,GAAU,IAADC,EAAAC,EACF,MAAM,KAAEC,GAASC,KAAKC,OAChB,QAAEC,EAAO,OAAEC,GAAWJ,GACtB,OAAEK,EAAM,MAAEC,EAAK,cAAEC,EAAa,KAAEC,GAASL,EAC/C,OACOM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKF,UAAW,yBAA8B,OAALJ,QAAK,IAALA,GAAY,QAAPR,EAALQ,EAAOO,aAAK,IAAAf,OAAP,EAALA,EAAcgB,UAAUH,SAAEL,EAAMS,QACzEN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,UACrBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EAClBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UACzBC,EAAAA,EAAAA,KAACI,EAAAA,EAAa,CAACC,KAAM,GAAIC,OAAQC,WAAwB,OAAbZ,QAAa,IAAbA,OAAa,EAAbA,EAAea,WAAYC,MAAW,OAAJb,QAAI,IAAJA,GAAW,QAAPT,EAAJS,EAAMK,aAAK,IAAAd,OAAP,EAAJA,EAAasB,WAElGZ,EAAAA,EAAAA,MAAA,OAAKC,UAAW,yBAAyBC,SAAA,CACpB,OAAbJ,QAAa,IAAbA,OAAa,EAAbA,EAAea,UAAU,mBAGxCX,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,CAAC,YAAuB,OAAbJ,QAAa,IAAbA,OAAa,EAAbA,EAAee,iBAAiB,mBAGnFlB,EAAOmB,KAAKC,QAAUC,EAAAA,IAAYb,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uBAAuBgB,IAAKzB,KAAK0B,YAAYhB,UACxFC,EAAAA,EAAAA,KAAA,OAAKF,UAAW,8BAA8BL,EAAOQ,MAAMC,UAAWc,QAASA,IAAM3B,KAAKC,MAAM2B,aAAY,GAAMlB,SAAEN,EAAOU,SACzH,UAIrC,EAGP,MAMA,GAAee,EAAAA,EAAAA,IAAQ,IANIC,IACb,CACAC,8BAA+BA,CAACC,EAAQC,EAAWC,EAAWC,EAAWC,EAAOC,EAAaC,IAAYR,GAASC,EAAAA,EAAAA,GAA8BC,EAAQC,EAAWC,EAAWC,EAAWC,EAAOC,EAAaC,IAC7MV,YAAcL,GAAWO,GAASF,EAAAA,EAAAA,IAAYL,OAG5D,CAA+C7B,E","sources":["app/ReviewHeader/Minimal/index.js"],"sourcesContent":["import React, { PureComponent } from \"react\";\nimport { connect } from 'react-redux';\nimport { isTagShop } from '../../../actions/api';\nimport { filterPostDataAppendWebFilter } from '../../../actions/filterpostAction'\nimport \"./scss/Minimal.scss\"\nimport AverageRating from \"../../Themes/Elements/AverageRating/AverageRating\";\nimport { onSitePopup } from \"../../../actions/OtherActions\";\n\nclass Minimal extends PureComponent {\n       render() {\n              const { wall } = this.props;\n              const { Reviews, SnapUp } = wall\n              const { button, title, reviewDetails, star } = Reviews\n              return (\n                     <div className=\"tb_m_container\">\n                            <div className={`tb_m_title tb-cTBfont-${title?.style?.variant}`}>{title.text}</div>\n                            <div className=\"tb_m_wrapper\">\n                                   <div className=\"tb_m_rating\">\n                                          <div className=\"tb_m_rating_wrap\">\n                                                 <div className=\"tb_m_avg\">\n                                                        <div className=\"tb_m_rview_star\">\n                                                               <AverageRating size={20} rating={parseFloat(reviewDetails?.avgRating)} color={star?.style?.color} />\n                                                        </div>\n                                                        <div className={`tb_m_review_total_post`}>\n                                                               {reviewDetails?.avgRating} out of 5\n                                                        </div>\n                                                 </div>\n                                                 <div className=\"tb_m_total\">Based on {reviewDetails?.totalReviewGiven} reviews</div>\n                                          </div>\n                                   </div>\n                                   {SnapUp.Form.status && isTagShop ? <div className=\"tb_m_banner_btn_wrap\" ref={this.dropdownRef}>\n                                          <div className={`tb_m_banner_btn tb-cTBfont-${button.style.variant}`} onClick={() => this.props.onSitePopup(true)}>{button.text}</div>\n                                   </div> : null}\n                            </div>\n                     </div>\n              );\n       }\n}\n\nconst mapDispatchToProps = dispatch => {\n       return {\n              filterPostDataAppendWebFilter: (wallID, timeStamp, postCount, networkId, after, heightEvent, tagName) => dispatch(filterPostDataAppendWebFilter(wallID, timeStamp, postCount, networkId, after, heightEvent, tagName)),\n              onSitePopup: (status) => dispatch(onSitePopup(status)),\n       }\n}\nexport default connect(\"\", mapDispatchToProps)(Minimal);"],"names":["Minimal","PureComponent","render","_title$style","_star$style","wall","this","props","Reviews","SnapUp","button","title","reviewDetails","star","_jsxs","className","children","_jsx","style","variant","text","AverageRating","size","rating","parseFloat","avgRating","color","totalReviewGiven","Form","status","isTagShop","ref","dropdownRef","onClick","onSitePopup","connect","dispatch","filterPostDataAppendWebFilter","wallID","timeStamp","postCount","networkId","after","heightEvent","tagName"],"sourceRoot":""}