{"version":3,"file":"static/js/213.4615fbb9.chunk.js","mappings":"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","sources":["app/Themes/Badge/Elements/AverageRatingFixed.js","app/Themes/Elements/Network/Network.js"],"sourcesContent":["import React, { PureComponent, Suspense } from \"react\";\nimport Network from \"../../Elements/Network/Network\";\nconst AverageRating = React.lazy(() => import('../../Elements/AverageRating/AverageRating'));\n\nexport default class AverageRatingFixed extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            averageCalcBadge: 0,\n        }\n    }\n    componentDidMount() {\n        const { reviewFilters } = this.props;\n        let totalReviewsSum = 0;\n        let weightedSum = 0;\n\n        for (const key in reviewFilters) {\n            const network = reviewFilters[key].Network;\n            totalReviewsSum += network.totalReviews;\n            weightedSum += network.totalReviews * network.averageReviews;\n        }\n\n        if (totalReviewsSum > 0) {\n            const averageCalcBadge = weightedSum / totalReviewsSum;\n            this.setState({ averageCalcBadge });\n        }\n    }\n    calculateSum = () => {\n        const { reviewFilters } = this.props;\n        let sumOfAll = 0;\n\n        for (const key in reviewFilters) {\n            if (reviewFilters.hasOwnProperty(key)) {\n                const networkObj = reviewFilters[key].Network;\n                sumOfAll += networkObj.totalReviews;\n            }\n        }\n\n        return sumOfAll;\n    };\n\n\n    togglePopup = () => {\n        this.props.togglePopup(false)\n    }\n    render() {\n        const { ThemeRule, reviewFilters } = this.props\n        const { averageCalcBadge } = this.state;\n        const sumOfAll = this.calculateSum();\n        let avgrate = parseFloat(averageCalcBadge).toFixed(1);\n\n        return (<div className=\"tb_bt_post_wrap_in\" onClick={this.togglePopup}>\n            <div className=\"tb_bt_social_\" role=\"list\" aria-roledescription=\"social network list\">\n                {reviewFilters && reviewFilters.length > 0 ? reviewFilters.map((items, index) => {\n                    const item = items.Network;\n                    return index < 5 ? <div key={index} className=\"tb_bt_social_list\" role=\"listitem\" aria-roledescription={`network ${item.name} `}>\n                        <Network\n                            ThemeRule={ThemeRule}\n                            networkClass={\"tb_bt_avg_social_ico\"}\n                            network={item}\n                            isDefault={true}\n                        />\n                    </div> : null\n                }) : null}\n\n            </div>\n            <div className=\"tb_bt_rating_wrap\">\n                <div className=\"tb_bt_avg_rating\" aria-label={`rating ${avgrate}`} >{avgrate}</div>\n                <Suspense fallback={<></>}>\n                    <AverageRating size={14} rating={avgrate} />\n                </Suspense>\n            </div>\n            <div className=\"tb_bt_review_link\" aria-label={`Read our {sumOfAll} reviews`}>Read our {sumOfAll} reviews</div>\n        </div >\n        );\n    }\n}\n","import React, { PureComponent, Suspense } from \"react\";\nimport { isTagEmbed } from \"../../../../actions/api\";\nconst DefaultNetwork = React.lazy(() => import(\"./DefaultNetwork\"));\n\nexport default class Network extends PureComponent {\n  render() {\n    const { network, networkClass, ThemeRule, isDefault, Personalization } = this.props;\n    const isDefaultIcon = isDefault ? (network.id === 7 || network.id === 4 || network.id === 36) ? false : true : false\n    const icon = isTagEmbed && network.id == 36 ? \"tagembed\" : network.icon;\n    return (isDefaultIcon ? <div className={`${networkClass} tb__icon tb-${icon.replace(/fa-/g, \"\")}`} aria-label={`post network ${network?.name || \"\"}`}><div></div></div> : <Suspense fallback={<></>}> <DefaultNetwork network={network} networkClass={networkClass} /></Suspense>);\n  }\n}\n"],"names":["AverageRating","React","AverageRatingFixed","PureComponent","constructor","props","super","calculateSum","reviewFilters","this","sumOfAll","key","hasOwnProperty","Network","totalReviews","togglePopup","state","averageCalcBadge","componentDidMount","totalReviewsSum","weightedSum","network","averageReviews","setState","render","ThemeRule","avgrate","parseFloat","toFixed","_jsxs","className","onClick","children","_jsx","role","length","map","items","index","item","concat","name","networkClass","isDefault","Suspense","fallback","_Fragment","size","rating","DefaultNetwork","Personalization","isDefaultIcon","id","icon","isTagEmbed","replace"],"sourceRoot":""}