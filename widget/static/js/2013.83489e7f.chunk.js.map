{"version":3,"file":"static/js/2013.83489e7f.chunk.js","mappings":"8MAKe,MAAMA,UAAmBC,EAAAA,cACpCC,WAAAA,CAAYC,GACRC,MAAMD,GAAO,KASjBE,eAAiBC,IACbC,KAAKC,SAAS,CACVC,YAAaH,GACf,EACL,KAEDI,WAAa,KACTH,KAAKC,SAAS,CACVG,OAAQJ,KAAKK,MAAMD,OACrB,EACL,KAKDE,aAAgBC,IACZ,IACI,GAAIC,EAAAA,GAAW,CACX,MAAM,OAAEC,GAAWT,KAAKK,MACxBL,KAAKC,SAAS,CACVQ,OAAQA,EAASF,EAASG,eAElC,CACJ,CACA,MAAOC,GACHC,QAAQC,IAAIF,EAChB,GAlCAX,KAAKK,MAAQ,CACTH,aAAa,EACbE,OAAO,EACPK,OAAQ,GAEZT,KAAKc,UAAYC,EAAAA,WACrB,CAaAC,oBAAAA,GACI,MAAM,OAAEP,GAAWT,KAAKK,MACpBG,EAAAA,KAAWS,EAAAA,EAAAA,IAAuBR,EAC1C,CAeAS,MAAAA,GACI,MAAM,KAAEC,EAAI,UAAEC,GAAcpB,KAAKJ,OAC3B,YAAEM,EAAW,MAAEE,GAAUJ,KAAKK,OAC9B,MAAEgB,EAAK,GAAEC,EAAE,KAAEC,EAAI,UAAEC,GAAcL,EAEjCM,GADa,CAAC,EAAG,EAAG,IACGC,SAASP,EAAKK,YACrC,OAAEG,EAAM,MAAEC,GAAUR,EAC1B,OAAOS,EAAAA,EAAAA,MAAA,OAAKC,UAAW,8BAA6B5B,EAAc,wBAA0B,IAAM6B,IAAK/B,KAAKc,UAAUkB,SAAA,CAChHP,GACEQ,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gBAAgBI,QAASlC,KAAKG,WAAW6B,UACpDC,EAAAA,EAAAA,KAAA,OAAKH,UAAW,gBAAgB1B,EAAmB,OAAX,UAAoB4B,UAACC,EAAAA,EAAAA,KAAA,cAE/D,IACNA,EAAAA,EAAAA,KAACE,IAAW,CACRL,UAAW,kCAAkCR,IAC7Cc,IAAKf,EAAMgB,MAAMC,KACjB,cAAaX,EACb,aAAYC,EACZ,YAAU,QACV,eAAcJ,EACd,YAAWD,EACX,eAAcD,EACd,YAAW,EACXiB,OAAQ,CACJC,SAAU,CACNC,MAAO,kBACPC,WAAY,CACR,aAAcd,EACd,cAAeD,EACfgB,OAAQtB,EAAMuB,MAAMC,MACpBzC,UAGR0C,KAAM,CACFJ,WAAY,CACRK,QAAS,WACTJ,OAAQtB,EAAMuB,MAAMC,MACpBzC,WAIZ4C,MAAM,EACNC,UAAU,EACV7C,MAAOA,EACP8C,OAAQ,EACRC,aAAa,EACbC,QAAUzC,IAAQX,KAAKF,gBAAe,EAAK,EAC3CuD,SAAS,EACT1B,OAAQ,OACRC,MAAO,OACP0B,UAAW7B,EACX8B,WAAYvD,KAAKM,eAEnBJ,EAAyE,MAA3D+B,EAAAA,EAAAA,KAAA,OAAKH,UAAU,wBAAuBE,UAACC,EAAAA,EAAAA,KAAA,cA9CiEZ,EAAMgB,MAAMC,KAgD5I,E","sources":["app/Components/PostPopUp/Elements/PopUpVideo.js"],"sourcesContent":["import React, { PureComponent } from \"react\";\nimport ReactPlayer from \"react-player\"\nimport { isTagShop, isSocialWall } from \"../../../../actions/api\";\nimport { reelPlayTimeUpdateData } from \"../../../../utils/Common\";\n\nexport default class PopUpVideo extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            videoLoaded: false,\n            muted: true,\n            played: 0\n        }\n        this.VideoWrap = React.createRef();\n    }\n\n    setVideoLoaded = event => {\n        this.setState({\n            videoLoaded: event\n        })\n    }\n\n    muteToggle = () => {\n        this.setState({\n            muted: !this.state.muted,\n        })\n    }\n    componentWillUnmount() {\n        const { played } = this.state\n        if (isTagShop) reelPlayTimeUpdateData(played)\n    }\n    onUpdateTime = (progress) => {\n        try {\n            if (isTagShop) {\n                const { played } = this.state\n                this.setState({\n                    played: played + progress.playedSeconds\n                })\n            }\n        }\n        catch (e) {\n            console.log(e)\n        }\n\n    }\n    render() {    \n        const { Post, mediaSize } = this.props\n        const { videoLoaded, muted } = this.state\n        const { media, id, link, networkId } = Post\n        const noMuteIcon = [7, 3, 25]\n        const muteIcon = !noMuteIcon.includes(Post.networkId) ? true : false\n        const { height, width } = mediaSize\n        return <div className={`tb_post_modal_video_holder${videoLoaded ? ' tb_post_video_loaded' : ''}`} ref={this.VideoWrap} key={media.video.full} >\n            { muteIcon ?\n                <div className=\"tb_m_mute_btn\" onClick={this.muteToggle}>\n                    <div className={`tb__icon tb-${!muted ? `unmute` : `mute`}`}><div></div></div>\n                </div>\n                : ''}\n            <ReactPlayer\n                className={`tb_post_modal_video tb_p_media-${id}`}\n                url={media.video.full}\n                data-height={height}\n                data-width={width}\n                data-type=\"video\"\n                data-network={networkId}\n                data-link={link}\n                data-item-id={id}\n                data-load={0}\n                config={{\n                    facebook: {\n                        appId: '117029975354072',\n                        attributes: {\n                            'data-width': width,\n                            'data-height': height,\n                            poster: media.image.small,\n                            muted\n                        }\n                    },\n                    file: {\n                        attributes: {\n                            preload: 'metadata',\n                            poster: media.image.small,\n                            muted\n                        }\n                    }\n                }}\n                loop={true}\n                autoPlay={true}\n                muted={muted}\n                volume={1}\n                playsinline={true}\n                onReady={(e) => { this.setVideoLoaded(true) }}\n                playing={true}\n                height={'100%'}\n                width={'100%'}\n                controls={!muteIcon ? true : false}\n                onProgress={this.onUpdateTime}\n            />\n            {!videoLoaded ? <div className='tb_post_modal_spinner'><div></div></div> : null}\n        </div>\n    }\n}"],"names":["PopUpVideo","PureComponent","constructor","props","super","setVideoLoaded","event","this","setState","videoLoaded","muteToggle","muted","state","onUpdateTime","progress","isTagShop","played","playedSeconds","e","console","log","VideoWrap","React","componentWillUnmount","reelPlayTimeUpdateData","render","Post","mediaSize","media","id","link","networkId","muteIcon","includes","height","width","_jsxs","className","ref","children","_jsx","onClick","ReactPlayer","url","video","full","config","facebook","appId","attributes","poster","image","small","file","preload","loop","autoPlay","volume","playsinline","onReady","playing","controls","onProgress"],"sourceRoot":""}