{"version":3,"file":"static/js/7033.123b5f61.chunk.js","mappings":"8MAKA,MAAMA,EAAsBC,EAAAA,MAAW,IAAM,2DAC9B,MAAMC,UAAoBC,EAAAA,cACvCC,WAAAA,CAAYC,GACVC,MAAMD,GAKNE,KAAKC,WAAaP,EAAAA,WACpB,CAQAQ,iBAAAA,GACEC,YAAW,KAAO,IAADC,EAAAC,EACf,GAAmB,QAAnBD,EAAIJ,KAAKC,kBAAU,IAAAG,GAAS,QAATC,EAAfD,EAAiBE,eAAO,IAAAD,GAAxBA,EAA0BE,aAAc,CAAC,IAADC,EAAAC,EAC3C,MAAMC,GAA+B,QAAfF,EAAAR,KAAKC,kBAAU,IAAAO,GAAS,QAATC,EAAfD,EAAiBF,eAAO,IAAAG,OAAT,EAAfA,EAA0BF,eAAgB,EAC3DP,KAAKF,MAAMa,oBAAoBX,KAAKF,MAAMa,mBAAmBD,EACnE,IACC,IACL,CAGAE,MAAAA,GACE,MAAM,aAAEC,EAAY,QAAEC,EAAO,UAAEC,EAAS,KAAEC,EAAI,gBAAEC,EAAe,KAAEC,EAAI,aAAEC,EAAY,SAAEC,EAAQ,UAAEC,EAAS,UAAEC,EAAS,SAAEC,EAAQ,WAAEC,GAAexB,KAAKF,MAE7I2B,EAAgB,CACpBC,gBAAiBH,EACjBD,UAAWP,EAAUY,eAGVL,GAAwBP,EAAUY,cAG/C,IAAIC,EAAiC,IAAnBV,EAAKW,QAAQC,GAAWhB,GAAUiB,EAAAA,EAAAA,IAAsBjB,GAEnD,IAAnBI,EAAKW,QAAQC,KAAUF,GAAcI,EAAAA,EAAAA,IAAgBJ,IAIzD,MAAMK,EAAW,GAAAC,OAAMnB,EAAUoB,SAAQ,oBAAAD,OAAuBnB,EAAUoB,UAAQ,IAC5EC,EAAc,GAAAF,OAAMrB,EAAY,KAAAqB,OAAKV,EAA2B,GAAdS,EAAgB,gBAAAC,OAAenB,EAAUsB,cACjG,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWH,EAAgBI,IAAKxC,KAAKC,WAAYwC,MAAOhB,EAAciB,SAAA,CACxEvB,GAAewB,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,gBAAeG,UAAEV,EAAAA,EAAAA,IAAgBb,KAAuB,MACvFmB,EAAAA,EAAAA,MAACM,EAAAA,SAAQ,CAACC,UAAUF,EAAAA,EAAAA,KAAAG,EAAAA,SAAA,IAAMJ,SAAA,CAAC,KAACC,EAAAA,EAAAA,KAAClD,EAAmB,CAACsD,KAAM7B,EAAMJ,QAASc,EAAaoB,gBAAiB/B,SAI1G,E","sources":["app/Themes/Elements/PostContent/PostContent.js"],"sourcesContent":["import React, { PureComponent, Suspense } from \"react\";\nimport ReactHtmlParser from 'react-html-parser';\nimport { IS_THEME, STRING_TO_URL_CONVERT } from '../../../../utils'\nimport { isTagEmbed, isTagShop } from \"../../../../actions/api\";\nimport Network from \"../../Elements/Network/Network\";\nconst ContentWithOutSlack = React.lazy(() => import('./PostContentConvertion'));\nexport default class PostContent extends PureComponent {\n  constructor(props) {\n    super(props);\n    // this.state = {\n    //   expanded: false,\n    // };\n\n    this.contentRef = React.createRef();\n  }\n  // toggleExpanded = event => {\n  //   this.setState({\n  //     expanded: !this.state.expanded,\n  //   });\n  //   event.stopPropagation()\n  // }\n\n  componentDidMount() {\n    setTimeout(() => {\n      if (this.contentRef?.current?.clientHeight) {\n       const contentHeight = this.contentRef?.current?.clientHeight || 0;\n        if (this.props.contentRefCallBack) this.props.contentRefCallBack(contentHeight)\n      }\n    }, 100);\n  }\n\n\n  render() {\n    const { contentClass, content, ThemeRule, font, personalization, item, contentTitle, readMore, maxLength, textAlign, maxLines, isReadMore } = this.props;\n    //const { expanded } = this.state\n    const truncateStyle = {\n      WebkitLineClamp: maxLines,\n      textAlign: ThemeRule.textAlignment\n    };\n    const textStyle = {\n      textAlign: textAlign ? textAlign : ThemeRule.textAlignment\n    }\n    //isTagEmbed && !IS_THEME(59) ? font.fontColor : null\n    let contentData = item.network.id == 20 ? content : STRING_TO_URL_CONVERT(content);\n\n    if (item.network.id == 12) contentData = ReactHtmlParser(contentData); // for RRS but we have to change from backend.\n\n    //const text = readMore ? expanded ? contentData : contentData.slice(0, maxLength) : contentData;\n\n    const trimClasses = `${ThemeRule.lineTrim ? ` tb_content_line-${ThemeRule.lineTrim}` : ``}`\n    const contentClasses = `${contentClass} ${!isReadMore ? trimClasses : ''} tb-cTBfont-${ThemeRule.font_varient}`\n    return (\n      <div className={contentClasses} ref={this.contentRef} style={truncateStyle}>\n        {contentTitle ? <div className=\"tb_bold_txt__\">{ReactHtmlParser(contentTitle)}</div> : null}\n        <Suspense fallback={<></>}> <ContentWithOutSlack data={item} content={contentData} Personalization={personalization} />\n        </Suspense>\n      </div>\n    );\n  }\n}\n"],"names":["ContentWithOutSlack","React","PostContent","PureComponent","constructor","props","super","this","contentRef","componentDidMount","setTimeout","_this$contentRef","_this$contentRef$curr","current","clientHeight","_this$contentRef2","_this$contentRef2$cur","contentHeight","contentRefCallBack","render","contentClass","content","ThemeRule","font","personalization","item","contentTitle","readMore","maxLength","textAlign","maxLines","isReadMore","truncateStyle","WebkitLineClamp","textAlignment","contentData","network","id","STRING_TO_URL_CONVERT","ReactHtmlParser","trimClasses","concat","lineTrim","contentClasses","font_varient","_jsxs","className","ref","style","children","_jsx","Suspense","fallback","_Fragment","data","Personalization"],"sourceRoot":""}