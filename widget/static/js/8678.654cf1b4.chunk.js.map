{"version":3,"file":"static/js/8678.654cf1b4.chunk.js","mappings":"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","sources":["actions/filterpostAction.js","app/ReviewHeader/DefaultHeader/index.js","app/ReviewHeader/index.js","app/Themes/Elements/AverageRating/AverageRating.js","utils/Common.js"],"sourcesContent":["import axios from \"axios\";\nimport store from \"../store\";\nimport { getQueryString, rID } from \"../utils\";\nimport { isSocialWall, isTagbox, isTagShop } from \"./api\";\nimport { DATA_LOADER, FILTER_DATA, THEME_DATA } from \"../reducers/reducersKeys\";\nimport HttpClient from \"./http-client\";\nimport { getAttributes, isUpdateFrom } from \"./commonAction\";\n\nvar call;\nexport let dataRegion;\n \nconst getHashTagParam = (rID) => {\n    const parsed = window.location.href;\n    const updateContainerID = rID ? `#co_${rID}` : \".taggbox\";\n    let shopParams = {};\n    let headerTags = {};\n    \n    const param = (key) => getQueryString(parsed, key);\n    const region = param('region')\n    const web = param('website')\n    const tag = param('tags')\n\n    if (isTagShop && (/.*(test\\.tagshop\\.ai\\/w\\/|widget-test\\.tagshop\\.ai|widget\\.tagshop\\.ai).*/.test(window.location.host) || web || region)) {\n        shopParams = param('wall') ? {} : { Website: 1 };\n        if (region) dataRegion = region;\n    }\n        \n    if (isSocialWall && param('wallKey')) shopParams.wallKey = param('wallKey');\n         headerTags = tag\n        ? {\n            tag: tag.includes(\"true\") ? 1 : 0,\n            keywords: decodeURIComponent(param('data-keywords') || param('keywords') || '')\n            }\n        : web\n        ? { Website: 1, ...(dataRegion && { region: dataRegion }) }\n        : (() => {\n            const taggbox = document.querySelector(updateContainerID);\n            if (!taggbox) return {};\n\n            const { keywords, source, region, tags } = taggbox.dataset;\n\n            return {\n                ...(tags && {\n                tag: tags.includes(\"true\") ? 1 : 0,\n                keywords: decodeURIComponent(keywords || '')\n                }),\n                ...(isTagShop && {\n                Website: source ? 1 : undefined,\n                region: region || undefined\n                })\n            };\n            })();\n\n    return { headers: { ...shopParams, ...headerTags, ...isUpdateFrom }};\n}\n\nexport const filterPostDataAppendWebFilter = (\n    wallID,\n    timeStamp,\n    postCount,\n    networkId,\n    after,\n    heightEvent,\n    tagName\n) => (dispatch) => {\n    const { wall, postData: dataPost } = store.getState().appData;\n    const bestFit = wall?.ThemeInfo?.id === 4 && wall.ThemeStyle?.row === 1;\n\n    const allKeys = Object.keys(dataPost?.filteredDataObject || {});\n    const filterCount = allKeys.reduce(\n        (count, key) =>\n            count + (networkId === 0 ? (dataPost.filteredDataObject[key]?.length || 0) : 0),\n        dataPost?.filteredDataObject[networkId]?.length || 0\n    );\n\n    const afterData = dataPost.appendData.after;\n\n    const updateHeader = getHashTagParam(rID, wallID) || { headers: {} };\n    const { headers } = updateHeader;\n\n    headers.tag = tagName ? 1 : headers.tag || undefined;\n    headers.keywords = tagName || headers.keywords || undefined;\n    headers.action = 1;\n\n    // Prepare default payload\n    const defaultPayload = {\n        appendData: {\n            after: afterData,\n            networkID: networkId,\n            heightEvent,\n            tagName,\n        },\n        filterNetworkId: networkId,\n        newData: [],\n        hasMoreData: {\n            [networkId]: { hasMoreData: true, after: afterData },\n        },\n        tagName,\n    };\n\n    if (filterCount < postCount && filterCount !== networkId) {\n        if (call) call.cancel();\n        call = axios.CancelToken.source();\n        updateHeader.cancelToken = call.token;\n\n        dispatch({ type: DATA_LOADER, payload: true });\n\n        const baseUrl = `${THEME_DATA}${wallID}/${timeStamp}/${postCount}/${networkId}/1/${after}`;\n        const updateUrl = isTagShop ? `${baseUrl}/${getAttributes(rID)?.mUrl || \"\"}` : baseUrl;\n        const urlToAccess = isTagbox ? `${THEME_DATA}${wallID}/${postCount}/${networkId}/${after}` : updateUrl;\n\n        new HttpClient()\n            .get(urlToAccess, updateHeader)\n            .then((apiResponse) => {\n                const response = isTagbox && ![\"62229\", 62229].includes(wallID)\n                    ? { data: JSON.parse([]) } // Replace `[]` with decompressed data if needed.\n                    : apiResponse;\n\n                dispatch({\n                    type: FILTER_DATA,\n                    payload: {\n                        ...defaultPayload,\n                        newData: response.data.data,\n                        hasMoreData: {\n                            [networkId]: {\n                                hasMoreData:\n                                    bestFit && Object.keys(response.data.data).length < postCount\n                                        ? false\n                                        : response.data.hasPost === 1,\n                                after: response.data.after,\n                            },\n                        },\n                        isFilter: true,\n                    },\n                });\n            })\n            .catch(() => {\n                dispatch({ type: DATA_LOADER, payload: false });\n            });\n    } else {\n        dispatch({\n            type: FILTER_DATA,\n            payload: defaultPayload,\n        });\n    }\n};","import React, { PureComponent, Suspense } from \"react\";\nimport { CloudUrl } from \"../../../constants\";\nimport { connect } from 'react-redux';\nimport { filterPostDataAppendWebFilter } from '../../../actions/filterpostAction'\nimport \"./scss/ReviewHeader.scss\"\nimport AverageRating from \"../../Themes/Elements/AverageRating/AverageRating\";\nimport { isTagbox } from \"../../../actions/api\";\nimport { kFormatter } from \"../../../utils/Common\";\nconst DefaultNetwork = React.lazy(() => import(\"../../Themes/Elements/Network/DefaultNetwork\"));\n\nclass DefaultHeader extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      networkID: null,\n      isOpen: false,\n      activeId: 0,\n      network: {\n        name: '',\n        avgRate: 0,\n        totalReviews: 0,\n        color: this.props.wall.Banner.title_font_color\n      }\n    };\n    this.dropdownRef = React.createRef();\n  }\n  toggleDropdown = () => {\n    const { activeId } = this.state\n    const { reviewFilters } = this.props\n    if (activeId !== 0 && reviewFilters.length > 0) {\n      const redirectLink = reviewFilters.filter((item) => item.Network.id === activeId);\n      if (redirectLink && redirectLink.length > 0) window.open(redirectLink[0].Network.link, \"_blank\")\n    }\n    else this.setState(prevState => ({\n      isOpen: !this.state.isOpen\n    }));\n  }\n  componentDidMount() {\n    document.addEventListener('click', this.handleClickOutside);\n    const { network, activeId } = this.onLoadTotalRating(this.props.reviewFilters)\n    this.setState({ network: network, activeId: activeId, networkID: activeId })\n  }\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClickOutside);\n  }\n  handleClickOutside = (event) => {\n    if (this.dropdownRef.current && !this.dropdownRef.current.contains(event.target)) {\n      this.setState(prevState => ({\n        isOpen: false\n      }));\n    }\n  }\n  onLoadTotalRating = (reviewFilters) => {\n    let avgReview = 0\n    let totalReview = 0\n    let networkName = ''\n    let activeId = 0\n    let color = this.props.wall.Banner.title_font_color\n\n    reviewFilters.map((items) => {\n      const item = items.Network\n      avgReview += item.averageReviews * item.totalReviews;\n      totalReview += item.totalReviews;\n      networkName = reviewFilters.length > 1 ? 'Overall' : item.name\n      activeId = reviewFilters.length > 1 ? 0 : item.id\n      color = reviewFilters.length > 1 ? this.props.wall.Banner.title_font_color : item.color\n    })\n    return {\n      network: {\n        name: networkName,\n        avgRate: isNaN(avgReview / totalReview) ? 0 : (avgReview / totalReview).toFixed(1),\n        totalReviews: totalReview,\n        color: color\n      },\n      activeId: activeId\n    }\n  }\n\n  totalReviewNetworks = (reviewFilters) => event => {\n    const { network, activeId } = this.onLoadTotalRating(reviewFilters)\n    if (this.props.changeFilterStatus) this.props.changeFilterStatus(2)\n\n    const tstamp = Math.floor(Date.now() / 1000);\n    const { appendData, wall } = this.props;\n    let postCount = wall.ThemeRule.numberOfPosts;\n    this.props.filterPostDataAppendWebFilter(\n      wall.ThemeInfo.wallId,\n      tstamp,\n      postCount,\n      activeId,\n      appendData.after,\n      appendData.heightEvent,\n      null\n    );\n    this.setState({\n      network: network,\n      activeId: activeId,\n      networkID: activeId\n    })\n  }\n\n  getReviewLogo = name => {\n    switch (name) {\n      case \"Overall\":\n        return ''\n      case \"Facebook\":\n        return 'facebook'\n      case \"Google Review\":\n        return 'google'\n      case \"Yelp\":\n        return 'yelp'\n      case \"Etsy\":\n        return 'etsy'\n      case \"Amazon\":\n        return 'amazon'\n      case \"Tripadvisor\":\n        return 'tripadvisor'\n      case \"Review Hub\":\n        return isTagbox ? 'tagbox' : 'tagembed'\n      case \"AliExpress\":\n        return 'aliexpress'\n      case \"Airbnb\":\n        return 'airbnb'\n      case \"Trustpilot Reviews\":\n        return 'trustpilot'\n      case \"UGC Uploader\":\n        return 'snapup'\n      case \"Booking.com\":\n        return 'booking'\n        defaultHeader:\n        return ''\n        break;\n    }\n  }\n\n  render() {\n    const { reviewFilters, wall } = this.props;\n    const { isOpen, network, activeId } = this.state;\n\n    const subTitle = { color: wall.Banner.subTitle_font_color, fontFamily: wall.Banner.subtitle_css_font, fontSize: wall.Banner.subTitle_font_size }\n    const title = { color: wall.Banner.title_font_color, fontFamily: wall.Banner.title_css_font, \n      //fontSize: wall.Banner.title_font_size \n    }\n    const writeButton = { backgroundColor: wall.Banner.background_color_two, color: '#fff' }\n    return (\n      <div className=\"tb_rv_container\" style={{ padding: wall.Personalization.padding / 2 }}>\n        <div className=\"tb_rv_wrapper\" style={{ borderRadius: wall.ThemeRule.radius, backgroundColor: wall.Banner.background_color }}>\n          {reviewFilters && reviewFilters.length > 1 ? <div className=\"tb_rv_scrollable\">\n            <div className=\"tb_rv_filter_wrap\">\n              <div className=\"tb_rv_filter_wrap_in\">\n                {Object.keys(reviewFilters).length ?\n                  <div className={`tb_fil_soc_btn${activeId === 0 ? ' tb_fil_active' : ''}`} onClick={this.totalReviewNetworks(reviewFilters)}>\n                    <div className=\"tb_fil_btn_txt\">{wall.ThemeStyle.language.text.all}</div>\n                  </div>\n                  : null}\n                {Object.keys(reviewFilters).length && reviewFilters.map((items, index) => {\n                  const item = items.Network;\n                  return <div key={index} className={`tb_fil_soc_btn${activeId === item.id ? ' tb_fil_active' : ''}`} onClick={this.totalReviewNetworks([items])}>\n                    <Suspense fallback={<></>}><DefaultNetwork network={item} networkClass={'tb_review_filter_ico'} /></Suspense>\n                  </div>\n                })\n                }\n              </div>\n            </div>\n          </div> : null}\n          <div className=\"tb_rv_banner_wrap\" style={{ minHeight: wall.Banner.banner_height }}>\n            <div className=\"tb_rv_rating\">\n              <div className={`tb_rv_head_text`}>\n                {network.name !== \"Overall\" ?\n                  <div className=\"tb_rv_head_logo\"><img className=\"tb_rv_head_log_img\" data-name={this.getReviewLogo(network.name)} src={`${CloudUrl}/media/review-logo/${this.getReviewLogo(network.name)}.svg`} height={40} width={50} style={{ marginTop: network.name === \"Trustpilot Reviews\" ? -6 : '' }} /></div>\n                  : null}\n                <div className={`tb_rv_head_r_text ${isTagbox ? `tb-cTBfont-${wall.Banner.title_font_varient}` : ``}`} style={isTagbox ? title : {}}>{network.name == \"Overall\" ? 'Overall Rating' : 'Rating'}</div>\n              </div>\n              <div className=\"tb_rv_rating_wrap\">\n                <div className={`tb_rv_review_count ${isTagbox ? `tb-cTBfont-${wall.Banner.title_font_varient}` : ``}`} style={isTagbox ? title : { color: wall.Banner.subTitle_font_color }}>{network.avgRate}</div>\n                <div className=\"tb_rv_rview_star\">\n                  <AverageRating size={false} rating={network.avgRate} />\n                </div>\n                <div className={`tb_rv_review_total_post tb-cTBfont-${isTagbox ? wall.Banner.title_font_varient : wall.Banner.subtitle_font_varient}`} style={isTagbox ? title : subTitle}>{kFormatter(network.totalReviews)} reviews</div>\n              </div>\n            </div>\n            <div className=\"tb_rv_banner_btn_wrap\" ref={this.dropdownRef}>\n              <div className={`tb_rv_banner_btn tb-cTBfont-${isTagbox ? wall.Banner.subtitle_font_varient : \"\"}`} onClick={this.toggleDropdown} style={writeButton}>Write a Review</div>\n              {isOpen && (\n                <div className={`tb_rv_dropdown_ ${isOpen ? 'tb_rv_dd_show' : ''}`}>\n                  <div className=\"tb_rv_dropdown_title\">Where do you want to leave a review?</div>\n                  {Object.keys(reviewFilters).length && reviewFilters.map((items, index) => {\n                    const item = items.Network;\n                    return <div key={index} className=\"tb_rv_dropdown_list\" onClick={event => item.link ? window.open(item.link, \"_blank\") : null}>\n                      <DefaultNetwork network={item} networkClass={'tb_rv_dd_ico'} />\n                      {item.name && String(item.name).includes(\"Google\") ? `Google` : String(item.name).includes(\"UGC Upload\") ? 'SnapUp' : item.name}\n                    </div>\n                  })\n                  }\n                </div>)}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    filterPostDataAppendWebFilter: (wallID, timeStamp, postCount, networkId, after, heightEvent, tagName) => dispatch(filterPostDataAppendWebFilter(wallID, timeStamp, postCount, networkId, after, heightEvent, tagName))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(DefaultHeader);","import React, { PureComponent, Suspense } from \"react\";\nimport { isTagbox } from \"../../actions/api\";\nimport DefaultHeader from \"./DefaultHeader\"\nconst Minimal = React.lazy(() => import('./Minimal'));\nconst Compact = React.lazy(() => import('./Compact'));\nclass ReviewHeader extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      networkID: null,\n      isOpen: false,\n      activeId: 0\n    };\n    this.dropdownRef = React.createRef();\n  }\n  toggleDropdown = () => {\n    const { activeId } = this.state\n    const { reviewFilters } = this.props\n    if (activeId != 0 && reviewFilters.length > 0) {\n      const redirectLink = reviewFilters.filter((item) => item.Network.id == activeId);\n      if (redirectLink && redirectLink.length > 0) window.open(redirectLink[0].Network.link, \"_blank\")\n    }\n    else this.setState(prevState => ({\n      isOpen: !this.state.isOpen\n    }));\n  }\n  componentDidMount() {\n    document.addEventListener('click', this.handleClickOutside);\n    const { network, activeId } = this.onLoadTotalRating(this.props.reviewFilters)\n    this.setState({ network: network, activeId: activeId, networkID: activeId })\n  }\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClickOutside);\n  }\n  handleClickOutside = (event) => {\n    if (this.dropdownRef.current && !this.dropdownRef.current.contains(event.target)) {\n      this.setState(prevState => ({\n        isOpen: false\n      }));\n    }\n  }\n  onLoadTotalRating = (reviewFilters) => {\n    let avgReview = 0\n    let totalReview = 0\n    let networkName = ''\n    let activeId = 0\n    let color = this.props.wall.Banner.title_font_color\n\n    reviewFilters.map((items) => {\n      const item = items.Network\n      avgReview += item.averageReviews * item.totalReviews;\n      totalReview += item.totalReviews;\n      networkName = reviewFilters.length > 1 ? 'Overall' : item.name\n      activeId = reviewFilters.length > 1 ? 0 : item.id\n      color = reviewFilters.length > 1 ? this.props.wall.Banner.title_font_color : item.color \n    })\n    return {\n      network: {\n        name: networkName,\n        avgRate: isNaN(avgReview / totalReview) ? 0 : (avgReview / totalReview).toFixed(1),\n        totalReviews: totalReview,\n        color: color\n      },\n      activeId: activeId\n    }\n  }\n\n  totalReviewNetworks = (reviewFilters) => event => {\n    const { network, activeId } = this.onLoadTotalRating(reviewFilters)\n    if (this.props.changeFilterStatus) this.props.changeFilterStatus(2)\n\n    const tstamp = Math.floor(Date.now() / 1000);\n    const { appendData, wall, ThemeStyle } = this.props;\n    let postCount = ThemeStyle.totalPosts;\n    this.props.filterPostDataAppendWebFilter(\n      wall.Wall.id,\n      tstamp,\n      postCount,\n      activeId,\n      appendData.after,\n      appendData.heightEvent,\n      null\n    );\n    this.setState({\n      network: network,\n      activeId: activeId,\n      networkID: activeId\n    })\n  }\n\n  getReviewLogo = name => {\n    switch (name) {\n      case \"Overall\":\n        return ''\n      case \"Facebook\":\n        return 'facebook'\n      case \"Google Review\":\n        return 'google'\n      case \"Yelp\":\n        return 'yelp'\n      case \"Etsy\":\n        return 'etsy'\n      case \"Amazon\":\n        return 'amazon'\n      case \"Tripadvisor\":\n        return 'tripadvisor'\n      case \"Review Hub\":\n        return isTagbox ? 'tagbox' :'tagembed'\n      case \"AliExpress\":\n        return 'aliexpress'\n      case \"Airbnb\":\n        return 'airbnb'\n      case \"Trustpilot Reviews\":\n        return 'trustpilot'\n      case \"UGC Uploader\":\n        return 'snapup'\n      case \"Booking.com\":\n        return 'booking'\n      default:\n        return ''\n        break;\n    }\n  }\n\n  render() {\n    const { wall,isHeader } = this.props;\n    return isHeader ? <>\n      {\n        wall.Reviews.headerType == 1 ? <Suspense fallback={<></>}> <Minimal {...this.props} /></Suspense> : wall.Reviews.headerType == 2 ? <Suspense fallback={<></>}><Compact {...this.props} /></Suspense > : null\n      }\n    </> : <DefaultHeader {...this.props} />\n  }\n}\n\nexport default ReviewHeader","import \"./scss/AverageRating.scss\";\nconst AvgStar = (color, ratingFloat, size) => {\n    return <div className=\"tb_avg_rating_ico__ tb__icon tb-star-outline\" style={{ color: color, fontSize: size, minWidth: size + 'px' }}><div className=\"tb_avg_rating_ico_fill__ tb__icon tb-star-fill\" style={{ color: color, width: ratingFloat * 10 + '%', fontSize: size, minWidth: size + 'px' }}><div></div> </div></div>\n}\nconst AverageRating = ({ rating, size, color }) => {\n\n    const rate = rating > 5 ? 5 : rating\n    const grayRate = Math.trunc(5 - rate)\n    const ratingInt = Math.trunc(rate)\n    const ratingFloat = String(rate).split('.')[1]\n    return <div className=\"tb_avg_rating__\" aria-label=\"Ratings\" role=\"status\">\n        {\n            ratingInt ? [...Array(ratingInt)].map((el, index) => <div key={index} data-index={index} className=\"tb_avg_rating_ico__ tb__icon tb-star-fill\" style={{ color: color ? color : '#F8B90C', fontSize: size, minWidth: size + 'px' }}><div></div></div>) : null\n        }\n        {\n            ratingFloat > 0 ? AvgStar(color ? color : '#F8B90C', ratingFloat, size) : null\n        }\n        {\n            grayRate ? [...Array(grayRate)].map((el, index) => <div key={index} className=\"tb_avg_rating_ico__ tb__icon tb-star-outline\" style={{ fontSize: size, minWidth: size + 'px' }}><div></div></div>) : null\n        }\n    </div>\n}\n\nexport default AverageRating","import { AUTH_TOKEN, isTagbox, isTagShop, Pwidget, reelsPlay, tagembed, tbox, test, wUrl } from \"../actions/api\";\nimport { WebUrl } from \"../constants\";\nimport store from \"../store\";\n\nlet reelPlayTime = [];\nlet playAdded = false;\n\nconst headers = new Headers({\n    'Content-Type': 'application/json',\n    'Authorization': `Bearer ${AUTH_TOKEN}`,\n    'Productdomain': tbox\n});\n\n\nexport const tb_onsite_btn_disabled = (a) =>\n    document.getElementById(\"tb_onsite_btn_id\")?.classList.toggle(\"tb_onsite_btn_disabled\", a === 1);\n\n\nexport const onWindowEvent = (s) => ({\n    1: () => window.onShowDemoPost(1),\n    2: () => window.hendleFeeds(\"addFeeds\"),\n    3: () => window.hendleFeeds(\"manageFeeds\")\n}[s]?.());\n\nexport const formatUnixTimestamp = (timestamp) => {\n    const date = new Date(timestamp * 1000);\n    const monthNames = [\n        'January', 'February', 'March', 'April', 'May', 'June',\n        'July', 'August', 'September', 'October', 'November', 'December'\n    ];\n    return `${monthNames[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()}`;\n}\n\nexport const generateUniqueString = () => Math.floor(Math.random() * 10000).toString().padStart(4, '0');\n\nexport const reelPlayTimeUpdateData = (time) => {\n    try {\n        reelPlayTime.push(time)\n    }\n    catch (ex) {\n        console.log(ex)\n    }\n}\n\nexport const isValidAuthorImage = (url) => url && url !== \"\" && !url.includes('ui-avatars');\n\nexport const bytesToSize = (b) => {\n    const units = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (!b) return '0 Byte';\n    const i = Math.floor(Math.log(b) / Math.log(1024));\n    return { size: Math.round(b / Math.pow(1024, i), 2), sizeText: units[i] };\n};\n\n\nexport const ensureFullyQualifiedUrl = (url) =>\n    url.startsWith('http://') || url.startsWith('https://') ? url : 'https://' + url;\n\nexport const timeAgo = (timestamp) => {\n    const diff = Date.now() - timestamp * 1000;\n    const units = [\n        { label: \"year\", ms: 31536000000 },\n        { label: \"month\", ms: 2592000000 },\n        { label: \"week\", ms: 604800000 },\n        { label: \"day\", ms: 86400000 },\n        { label: \"hour\", ms: 3600000 },\n        { label: \"minute\", ms: 60000 }\n    ];\n\n    if (diff < 60000) return \"just now\";\n\n    const unit = units.find(({ ms }) => diff >= ms);\n    const value = Math.floor(diff / unit.ms);\n    return `${value} ${unit.label}${value > 1 ? \"s\" : \"\"} ago`;\n}\n\n\nexport const STRING_TO_URL_CONVERT = (string) => {\n    try {\n        if (!string?.includes(\"http\")) return string;\n        return [...new Set(string.match(/(((ftp|https?):\\/\\/)[\\w@:%_\\+.~#?&//=]+)/g))].reduce(\n            (result, url) =>\n                result.replaceAll(\n                    url,\n                    `<a class=\"text_links_\" role=\"link\" target=\"_blank\" href=\"${url}\">${url}</a>`\n                ),\n            string\n        );\n    } catch {\n        return string;\n    }\n};\n\nexport const brandingUrl = () => [`${WebUrl}`, 'Website Widget'];\nexport const GET_MEDIA_NAME = (p) => p && String(p) ? unescape(p).split('/').pop().split(\"/\").slice(-1).join().split(\".\").shift() : '';\n\n\nexport const mainClass = ![\"localhost\", \"widget\", \"wall_id=\"].every((key) => wUrl(key))\n    ? (isTagbox || [`${Pwidget}.${tagembed}`, `${Pwidget}${test}${tagembed}`, `${Pwidget}s.${tagembed}`].some((url) => wUrl(url)))\n        ? \"tag_main__root\"\n        : isTagShop\n            ? \"taggShopRoot\"\n            : \"taggbox_main\"\n    : \"taggbox_main\";\n\n\nexport const kFormatter = (value) => {\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    const index = Math.floor(Math.log10(value) / 3) || 0;\n    return index ? +(value / Math.pow(1e3, index)).toFixed(0) + suffixes[index] : value;\n};\n\nexport const convertToAtob = (isValue) => isTagbox ? isValue : atob(isValue)\n\n\nexport const isHex = (color) => color?.startsWith('#');\n\nexport const hexToRgb = (hex) => {\n    if (isHex(hex)) {\n        const bigint = parseInt(hex.slice(1), 16);\n        return {\n            r: (bigint >> 16) & 255,\n            g: (bigint >> 8) & 255,\n            b: bigint & 255,\n        };\n    } else {\n        const matches = hex?.match(/\\d+/g)?.map(Number) || [0, 0, 0];\n        return { r: matches[0], g: matches[1], b: matches[2] };\n    }\n};\n\nexport const colorDistanceLight = (color) => {\n    const { r, g, b } = hexToRgb(color);\n    return Math.sqrt((255 - r) ** 2 + (255 - g) ** 2 + (255 - b) ** 2) <= 30;\n};\n\nexport const colorDistanceDark = (color) => {\n    const { r, g, b } = hexToRgb(color);\n    return Math.sqrt((r - 50) ** 2 + (g - 50) ** 2 + (b - 50) ** 2) < 50;\n};\n\n\nexport const getTextColor = (textColor, bgColor) => {\n\n    if (textColor?.startsWith('rgba')) textColor = '#000000';\n\n    const isColorMatch = (color, matches) => matches.some((match) => color?.includes(match));\n    const isWhite = (color) => isColorMatch(color, ['ffffff', '255, 255, 255', '#fff']);\n    const isBlack = (color) => isColorMatch(color, ['000000', '0, 0, 0', '#000']);\n\n    const [similarWhite, similarDark] = [colorDistanceLight(textColor), colorDistanceDark(textColor)];\n    const [similarWhiteBg, similarDarkBg] = [colorDistanceLight(bgColor), colorDistanceDark(bgColor)];\n\n    if ((similarWhite && similarWhiteBg) || (isWhite(textColor) && isWhite(bgColor))) return '#000000';\n    if ((similarDark && similarDarkBg) || (isBlack(textColor) && isBlack(bgColor))) return '#ffffff';\n\n    return textColor;\n}\n\n\nexport const findFromArray = (d, i, n) => d && d.length > 0 ? d.findIndex(c => c.id === i) : n;\n\n\nexport const reelPlayTimeUpdate = () => {\n    try {\n        const { wall } = store.getState().appData;\n        const { webId, wallId, ownerId } = wall.ThemeInfo;\n        if (!playAdded) {\n            window.addEventListener('beforeunload', () => {\n                if (reelPlayTime.length === 0) return;\n\n                const playTime = reelPlayTime.reduce((total, time) => total + time, 0);\n                if (playTime > 0) {\n                    fetch(reelsPlay, {\n                        method: 'POST',\n                        headers,\n                        body: JSON.stringify({\n                            playCount: reelPlayTime.length,\n                            id: isTagShop ? webId : wallId,\n                            playTime,\n                            owner: ownerId,\n                        }),\n                        keepalive: true,\n                    }).finally(() => (reelPlayTime = [], playAdded = false));\n                } else {\n                    reelPlayTime = [];\n                    playAdded = false;\n                }\n            });\n\n            playAdded = true;\n        }\n    } catch (ex) {\n        console.error(ex);\n    }\n};\n\n\nexport const GET_IMAGE_SIZE = (url) => \n    new Promise((resolve, reject) => \n        Object.assign(new Image(), {\n            onload: function () { resolve({ width: this.naturalWidth, height: this.naturalHeight }); },\n            onerror: (e) => reject(new Error(`Image loading error: ${e.message}`)),\n            src: url\n        })\n    );"],"names":["call","dataRegion","filterPostDataAppendWebFilter","wallID","timeStamp","postCount","networkId","after","heightEvent","tagName","dispatch","_wall$ThemeInfo","_wall$ThemeStyle","_dataPost$filteredDat2","wall","postData","dataPost","store","getState","appData","bestFit","ThemeInfo","id","ThemeStyle","row","filterCount","Object","keys","filteredDataObject","reduce","count","key","_dataPost$filteredDat","length","afterData","appendData","updateHeader","rID","parsed","window","location","href","updateContainerID","shopParams","headerTags","param","getQueryString","region","web","tag","isTagShop","test","host","Website","isSocialWall","wallKey","includes","keywords","decodeURIComponent","taggbox","document","querySelector","source","tags","dataset","undefined","headers","isUpdateFrom","getHashTagParam","action","defaultPayload","networkID","filterNetworkId","newData","hasMoreData","_getAttributes","cancel","axios","cancelToken","token","type","DATA_LOADER","payload","baseUrl","THEME_DATA","updateUrl","getAttributes","mUrl","urlToAccess","isTagbox","HttpClient","get","then","apiResponse","response","data","JSON","parse","FILTER_DATA","hasPost","isFilter","catch","DefaultNetwork","React","DefaultHeader","PureComponent","constructor","props","super","toggleDropdown","activeId","this","state","reviewFilters","redirectLink","filter","item","Network","open","link","setState","prevState","isOpen","handleClickOutside","event","dropdownRef","current","contains","target","onLoadTotalRating","avgReview","totalReview","networkName","color","Banner","title_font_color","map","items","averageReviews","totalReviews","name","network","avgRate","isNaN","toFixed","totalReviewNetworks","changeFilterStatus","tstamp","Math","floor","Date","now","ThemeRule","numberOfPosts","wallId","getReviewLogo","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","subTitle","subTitle_font_color","fontFamily","subtitle_css_font","fontSize","subTitle_font_size","title","title_css_font","writeButton","backgroundColor","background_color_two","_jsx","className","style","padding","Personalization","children","_jsxs","borderRadius","radius","background_color","onClick","language","text","all","index","Suspense","fallback","_Fragment","networkClass","minHeight","banner_height","src","CloudUrl","height","width","marginTop","title_font_varient","AverageRating","size","rating","subtitle_font_varient","kFormatter","ref","String","connect","Minimal","Compact","ReviewHeader","totalPosts","Wall","isHeader","Reviews","headerType","AvgStar","ratingFloat","minWidth","_ref","rate","grayRate","trunc","ratingInt","split","role","Array","el","reelPlayTime","playAdded","Headers","AUTH_TOKEN","tbox","tb_onsite_btn_disabled","a","_document$getElementB","getElementById","classList","toggle","onWindowEvent","s","_$2$3$s","_$2$","onShowDemoPost","hendleFeeds","formatUnixTimestamp","timestamp","date","getMonth","getDate","getFullYear","generateUniqueString","random","toString","padStart","reelPlayTimeUpdateData","time","push","ex","console","log","isValidAuthorImage","url","bytesToSize","b","i","round","pow","sizeText","ensureFullyQualifiedUrl","startsWith","timeAgo","diff","unit","label","ms","find","value","STRING_TO_URL_CONVERT","string","Set","match","result","replaceAll","brandingUrl","WebUrl","GET_MEDIA_NAME","p","unescape","pop","slice","join","shift","mainClass","every","wUrl","Pwidget","tagembed","some","log10","convertToAtob","isValue","atob","hexToRgb","hex","bigint","parseInt","r","g","_hex$match","matches","Number","colorDistanceLight","sqrt","colorDistanceDark","getTextColor","textColor","bgColor","_textColor","isColorMatch","isWhite","isBlack","similarWhite","similarDark","similarWhiteBg","similarDarkBg","findFromArray","d","n","findIndex","c","reelPlayTimeUpdate","webId","ownerId","playTime","total","fetch","reelsPlay","method","body","stringify","playCount","owner","keepalive","finally","error","GET_IMAGE_SIZE","Promise","resolve","reject","assign","Image","onload","naturalWidth","naturalHeight","onerror","e","Error","message"],"sourceRoot":""}