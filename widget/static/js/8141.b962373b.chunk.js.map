{"version":3,"file":"static/js/8141.b962373b.chunk.js","mappings":"mTAaA,MAAMA,EAAOC,EAAAA,MAAW,IAAM,+EAGxBC,GAAWC,EAAAA,EAAAA,OAAMC,IACrB,MAAM,SACJC,EAAQ,mBACRC,EAAkB,iBAClBC,EAAgB,YAChBC,EAAW,SACXC,EAAQ,UACRC,EAAS,cACTC,EAAa,mBACbC,EAAkB,UAClBC,EAAS,WACTC,EAAU,eACVC,EAAc,UACdC,EAAS,WACTC,EAAU,UACVC,EAAS,WACTC,EAAU,SACVC,EAAQ,aACRC,GACEjB,EAEEkB,GAAkBC,EAAAA,EAAAA,QAAO,MACzBC,GAAYD,EAAAA,EAAAA,QAAO,CAAC,IACnBE,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,GAEnCC,GAAcC,EAAAA,EAAAA,cAAaC,IAC3BA,EAAOC,SAAW,IAAOvB,IAAgBW,EAAWa,mBACtDZ,EACEa,EAAAA,GAAYjB,EAAUkB,MAAQlB,EAAUmB,OACxCC,KAAKC,MAAMC,KAAKC,MAAQ,KACxBzB,EAAW0B,WACXvB,EAAWwB,UACXxB,EAAWyB,MACXxB,EACAD,EAAW0B,YAEf,GACC,CAACnC,EAAaW,EAAWa,kBAAmBZ,EAAUJ,EAAWF,EAAW0B,WAAYvB,EAAYC,IAGjG0B,EAAcC,IACjBnB,GAAY,GACZoB,YAAW,IAAMzB,KAAoB,IAAFwB,EAAQ,GAI9CE,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAgBC,SAASC,iBAAiB,kBAQhD,GAPIF,GACFA,EAAcG,SAASC,IACrBA,EAAQC,gBAAgB,eACxBD,EAAQC,gBAAgB,OAAO,IAI/BhD,GAAgC,IAApBA,EAASiD,OAAc,CACrC,MAAMC,EAAYN,SAASO,cAAc,wBACnCC,EAAaR,SAASO,cAAc,yBACtCD,GAAaE,IACfF,EAAUG,MAAMC,QAAU,OAC1BF,EAAWC,MAAMC,QAAU,OAE/B,IACC,CAACtD,IAEJ,MAAMuD,EAAYnD,EACZoD,EAAkB/C,EAAWgD,OAAOC,QACpCC,EAAelD,EAAWgD,OAAOG,OACjCC,EAAYpD,EAAWqD,MAAMC,UAC7BC,EAAgBvD,EAAWqD,MAAME,cACjCC,EAAgD,IAAlCzD,EAAU0D,QAAQC,YAEhCC,EAAYrC,KAAKC,MAAM1B,EAAc+D,MADvB,KAEpB,IAAIC,EAA+B,IAAdF,EAAkB,EAAIA,EAAY,GACnDG,EAAUvE,EAEVsE,EAAiBtE,EAASiD,SAAQqB,EAAiBtE,EAASiD,QAChE,MAAMuB,EAAwC,IAApBhB,EAAwBc,EAAiBG,SAASjB,GAAmB,GAI/F,OAHIgB,GAAqBzC,KAAK2C,MAAMF,IAAsBxE,EAASiD,SAAQsB,EAAUI,MAAM,GAAGC,KAAK5E,GAAU6E,SAI3GC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACG5E,IACC0E,EAAAA,EAAAA,KAAA,OAAKG,UAAU,wBAAwBC,IAAKjE,EAAgB+D,UAC1DF,EAAAA,EAAAA,KAACK,EAAAA,GAAM,CAELD,IAAME,GAAQjE,EAAUkE,QAAQ9B,GAAa6B,EAC7C/B,MAAO,CAAEgB,MAAO,OAAQiB,OAAQ,QAChCC,SAAW9D,IAAaF,EAAYE,GAAaL,GAAWmB,EAAW,EAAE,EACzEiD,YAAc/D,IAAaF,EAAYE,GAAaL,GAAWmB,EAAW,EAAG,EAC7EkD,WAAahE,IAAaF,EAAYE,GAAaL,GAAWmB,EAAW,EAAG,EAE5EmD,YAAY,EACZC,MAAO,IACPC,oBAAoB,EACpBC,cAAerB,EACfsB,WAAY,EACZC,SAASC,EAAAA,EAAAA,MACTC,kBAAkB,EAClBX,OAAQ,OACRY,SAAU,CAAEC,SAAS,EAAMC,QAAQ,EAAOC,oBAAqB,EAAGC,sBAAuB,GACzFC,WAAU3E,EAAAA,IAAY,CAAE4E,MAAqB,IAAd3C,EAAkC,IAAhBG,EAAuB,KAAOyC,sBAAsB,EAAOC,mBAAmB,GAC/HC,MAAOxG,EACPyG,uBAAuB,gCACvBC,YAAa,CACX,EAAG,CAAEhB,cAAelC,EAAec,SAASd,GAAgB,GAAMW,GAClE,IAAK,CAAEuB,cAAelC,EAAec,SAASd,GAAgB,GAAMW,GACpE,IAAK,CAAEuB,cAAelC,EAAec,SAASd,GAAgB,GAAMW,GACpE,IAAK,CAAEuB,cAAerB,GACtB,KAAM,CAAEqB,cAAerB,GACvB,KAAM,CAAEqB,cAAerB,GACvB,KAAM,CAAEqB,cAAerB,IAEzBsC,WAAY,CAAEC,aAAa,EAAMC,YAAa,GAC9CC,qBAAqB,EACrBC,QAAS,CAACC,EAAAA,GAAUC,EAAAA,GAAYC,EAAAA,IAChCpC,UAAW,uBAAsBhB,EAAc,sBAAwB,IAAKe,SAE3ET,GAAWA,EAAQtB,OAAS,GAAKsB,EAAQ+C,KAAI,CAACC,EAAMC,KACnD,MAAMC,EAAWxH,EAAmBsH,GACpC,OAAQ3F,EAAAA,IAAa,CAAC,EAAG,GAAG8F,SAASD,EAASE,OAC5C7C,EAAAA,EAAAA,KAAC8C,EAAAA,GAAW,CAACvE,MAAO,CAAEwE,OAAQ,EAAGC,QAAS,GAAmBC,KAAM3H,EAAU6E,UAAW,MAAMwC,EAASO,KAAKhD,SACzGiD,IAAA,IAAC,UAAEC,GAAWD,EAAA,OACdnD,EAAAA,EAAAA,KAACqD,EAAAA,SAAQ,CAACC,SAAS,GAAEpD,UAClBF,EAAAA,EAAAA,KAACnF,EAAI,CAACuI,UAAWA,EAAWG,KAAMZ,EAAUD,MAAOA,EAAOhH,UAAWA,EAAWC,WAAYA,EAAYC,eAAgBA,EAAgBC,UAAWA,EAAWT,iBAAkBA,EAAkBK,mBAAoBA,KAC7M,GAJqCgH,EAAKS,IAOvD,IAAI,KA3CL3H,MAgDV,IAQDiI,EAAqB,CACzBvH,SACF,MAEA,GAAewH,EAAAA,EAAAA,KARUC,IAAK,CAC5B1H,WAAY0H,EAAM1H,cAOoBwH,EAAxC,CAA4DzI,E","sources":["app/Themes/ReelShop/index.js"],"sourcesContent":["import React, { useEffect, useRef, useCallback, memo, Suspense, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Autoplay, FreeMode, Mousewheel } from 'swiper/modules';\r\nimport 'swiper/css';\r\nimport 'swiper/css/autoplay';\r\nimport 'swiper/css/free-mode';\r\nimport 'swiper/css/mousewheel';\r\nimport './scss/ReelShop.scss';\r\nimport { isTagShop } from '../../../actions/api';\r\nimport { detectMobile } from \"../../../utils\";\r\nimport { nextData } from \"../../../actions/moredataAction\";\r\n//import Card from \"./Elements/Card\";\r\nconst Card = React.lazy(() => import(\"./Elements/Card\"));\r\n \r\n\r\nconst ReelShop = memo((props) => {\r\n  const {\r\n    postData,\r\n    completeDataObject,\r\n    clickToShowPopUp,\r\n    hasMoreData,\r\n    parentID,\r\n    keyRender,\r\n    containerSize,\r\n    onClickPopUpSlider,\r\n    CardStyle,\r\n    ThemeStyle,\r\n    ProductSetting,\r\n    ThemeInfo,\r\n    appendData,\r\n    preRender,\r\n    loaderData,\r\n    nextData,\r\n    loadMoredata\r\n  } = props;\r\n\r\n  const sliderHeightRef = useRef(null);\r\n  const inputRefs = useRef({});\r\n  const [loadData, setloadData] = useState(false)\r\n\r\n  const requestData = useCallback((swiper) => {  \r\n    if (swiper.progress > 0.8 && hasMoreData && !loaderData.isShowMoreLoading) { \r\n      nextData(\r\n        isTagShop ? ThemeInfo.webId : ThemeInfo.wallId,\r\n        Math.floor(Date.now() / 1000),\r\n        ThemeStyle.totalPosts,\r\n        appendData.networkID,\r\n        appendData.after,\r\n        preRender,\r\n        appendData.heightEvent\r\n      );\r\n    }\r\n  }, [hasMoreData, loaderData.isShowMoreLoading, nextData, ThemeInfo, ThemeStyle.totalPosts, appendData, preRender]);\r\n\r\n\r\n  const updatepost = (e) => {  \r\n     setloadData(true);\r\n     setTimeout(() => loadMoredata() , (e*1000));\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    const classNameRole = document.querySelectorAll('.splide__slide');\r\n    if (classNameRole) {\r\n      classNameRole.forEach((element) => {\r\n        element.removeAttribute(\"aria-hidden\");\r\n        element.removeAttribute(\"role\");\r\n      });\r\n    }\r\n\r\n    if (postData && postData.length === 1) {\r\n      const arrowLeft = document.querySelector(\".tb_rtp_arrow_left__\");\r\n      const arrowRight = document.querySelector(\".tb_rtp_arrow_right__\");\r\n      if (arrowLeft && arrowRight) {\r\n        arrowLeft.style.display = 'none';\r\n        arrowRight.style.display = 'none';\r\n      }\r\n    }\r\n  }, [postData]);\r\n\r\n  const inputName = parentID;\r\n  const numberOfColumns = ThemeStyle.column.desktop;\r\n  const mobileColumn = ThemeStyle.column.mobile;\r\n  const slidePost = ThemeStyle.slide.autoSlide;\r\n  const slideDuration = ThemeStyle.slide.slideDuration;\r\n  const trimContent = CardStyle.content.trimcontent === 1;\r\n  const minCardSize = 240;\r\n  const cardCount = Math.floor(containerSize.width / minCardSize);\r\n  let responsiveSize = cardCount === 1 ? 2 : cardCount - 0.4;\r\n  let newData = postData;\r\n\r\n  if (responsiveSize > postData.length) responsiveSize = postData.length;\r\n  const responsivePerView = numberOfColumns === 0 ? responsiveSize : parseInt(numberOfColumns) - 0.4;\r\n  if (responsivePerView && Math.round(responsivePerView) <= postData.length) newData = Array(2).fill(postData).flat();\r\n\r\n\r\n  return (\r\n    <>\r\n      {parentID && (\r\n        <div className=\"tb_rtp_post_container\" ref={sliderHeightRef}>\r\n          <Swiper\r\n            key={keyRender}\r\n            ref={(el) => (inputRefs.current[inputName] = el)}\r\n            style={{ width: '100%', height: '100%' }}\r\n            onScroll={(swiper) => { requestData(swiper); if(!loadData){ updatepost(3)}}}\r\n            onTouchMove={(swiper) => { requestData(swiper); if(!loadData){ updatepost(0) }}}\r\n            onAutoplay={(swiper) => { requestData(swiper); if(!loadData){ updatepost(4) }}}\r\n            \r\n            autoHeight={true}\r\n            speed={700}\r\n            edgeSwipeDetection={true}\r\n            slidesPerView={responsivePerView}\r\n            touchRatio={2}\r\n            cssMode={detectMobile()}\r\n            passiveListeners={true}\r\n            height={'100%'}\r\n            freeMode={{ enabled: true, sticky: false, momentumBounceRatio: 2, momentumVelocityRatio: 3 }}\r\n            autoplay={isTagShop ? { delay: slidePost === 1 ? slideDuration * 1000 : 99000, disableOnInteraction: false, pauseOnMouseEnter: true } : false}\r\n            loop={!hasMoreData}\r\n            slideFullyVisibleClass=\"tb-swiper-slide-fully-visible\"\r\n            breakpoints={{\r\n              0: { slidesPerView: mobileColumn ? parseInt(mobileColumn) - 0.4 : responsiveSize },\r\n              480: { slidesPerView: mobileColumn ? parseInt(mobileColumn) - 0.4 : responsiveSize },\r\n              575: { slidesPerView: mobileColumn ? parseInt(mobileColumn) - 0.4 : responsiveSize },\r\n              767: { slidesPerView: responsivePerView },\r\n              1024: { slidesPerView: responsivePerView },\r\n              1400: { slidesPerView: responsivePerView },\r\n              1600: { slidesPerView: responsivePerView },\r\n            }}\r\n            mousewheel={{ forceToAxis: true, sensitivity: 2 }}\r\n            watchSlidesProgress={true}\r\n            modules={[Autoplay, Mousewheel, FreeMode]}\r\n            className={`tb_rtp_post_slider ${trimContent ? 'tb_rtp_fixed_height' : ''}`}\r\n          >\r\n            {newData && newData.length > 0 && newData.map((item, index) => {\r\n              const cardData = completeDataObject[item];\r\n              return (isTagShop || [3, 5].includes(cardData.type)) ? (\r\n                <SwiperSlide style={{ margin: 0, padding: 0 }} key={item.id} p_id={parentID} className={`tb_${cardData.id}`}>\r\n                  {({ isVisible }) => (\r\n                   <Suspense fallback=\"\">\r\n                      <Card isVisible={isVisible} Post={cardData} index={index} CardStyle={CardStyle} ThemeStyle={ThemeStyle} ProductSetting={ProductSetting} ThemeInfo={ThemeInfo} clickToShowPopUp={clickToShowPopUp} onClickPopUpSlider={onClickPopUpSlider} />\r\n                    </Suspense> \r\n                  )}\r\n                </SwiperSlide>\r\n              ) : null;\r\n            })}\r\n          </Swiper>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loaderData: state.loaderData,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  nextData,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReelShop);"],"names":["Card","React","ReelShop","memo","props","postData","completeDataObject","clickToShowPopUp","hasMoreData","parentID","keyRender","containerSize","onClickPopUpSlider","CardStyle","ThemeStyle","ProductSetting","ThemeInfo","appendData","preRender","loaderData","nextData","loadMoredata","sliderHeightRef","useRef","inputRefs","loadData","setloadData","useState","requestData","useCallback","swiper","progress","isShowMoreLoading","isTagShop","webId","wallId","Math","floor","Date","now","totalPosts","networkID","after","heightEvent","updatepost","e","setTimeout","useEffect","classNameRole","document","querySelectorAll","forEach","element","removeAttribute","length","arrowLeft","querySelector","arrowRight","style","display","inputName","numberOfColumns","column","desktop","mobileColumn","mobile","slidePost","slide","autoSlide","slideDuration","trimContent","content","trimcontent","cardCount","width","responsiveSize","newData","responsivePerView","parseInt","round","Array","fill","flat","_jsx","_Fragment","children","className","ref","Swiper","el","current","height","onScroll","onTouchMove","onAutoplay","autoHeight","speed","edgeSwipeDetection","slidesPerView","touchRatio","cssMode","detectMobile","passiveListeners","freeMode","enabled","sticky","momentumBounceRatio","momentumVelocityRatio","autoplay","delay","disableOnInteraction","pauseOnMouseEnter","loop","slideFullyVisibleClass","breakpoints","mousewheel","forceToAxis","sensitivity","watchSlidesProgress","modules","Autoplay","Mousewheel","FreeMode","map","item","index","cardData","includes","type","SwiperSlide","margin","padding","p_id","id","_ref","isVisible","Suspense","fallback","Post","mapDispatchToProps","connect","state"],"sourceRoot":""}