{"version":3,"file":"static/js/41.e1d75cfc.chunk.js","mappings":"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","sources":["app/Themes/Elements/Network/Network.js","app/Themes/Elements/PostContent/PostContent.jsx","app/Themes/Elements/ShareOnHover/ShareOnHover.js","app/Themes/NewsCard/Elements/Media.js","app/Themes/NewsCard/Elements/Card.js","app/Themes/NewsCard/index.js"],"sourcesContent":["import React, { PureComponent, Suspense } from \"react\";\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from \"../../../../utils/Network\";\nimport \"./IconDefaultColor.scss\"\nconst DefaultNetwork = React.lazy(() => import(\"./DefaultNetwork\"));\n\nexport default class Network extends PureComponent {\n  render() {\n    const { networkId, networkClass, iconStyle, isPopUp } = this.props;\n    const defaultNetworks = [7, 4, 36]\n    const isDefaultIcon = iconStyle?.default || (defaultNetworks.includes(networkId))\n    return (isDefaultIcon ?  <Suspense fallback={<></>}><DefaultNetwork networkId={networkId} networkClass={networkClass} /></Suspense> : <div className={`${networkClass} tb__icon tb-${GET_NETWORK_ICON(networkId)}`} aria-label={`post network ${GET_NETWORK_NAME(networkId)}`}><div></div></div>);\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport { isTagShop } from \"../../../../actions/api\";\nimport parse from \"html-react-parser\";\nimport { STRING_TO_URL_CONVERT } from \"../../../../utils/Common\";\n// import PostContentHighlight from \"./PostContentHighlight\";\n\nexport default class PostContent extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.contentRef = React.createRef();\n  }\n  componentDidMount() {\n      setTimeout(() => {\n        if (this.contentRef?.current?.clientHeight) {\n          const contentHeight = this.contentRef?.current?.clientHeight || 0;\n          if (this.props.contentRefCallBack) this.props.contentRefCallBack(contentHeight)\n        }\n      }, 100);\n\n    //  console.log(parsedHTML); // Parsed structure\n  }\n\n  render() {\n    const { CardStyle, contentClass, content, contentTitle, maxLines, isReadMore } = this.props;\n    const trimLines = CardStyle.content.trimcontent && !isTagShop ? CardStyle.content.trimcontent : 0;\n    const truncateStyle = {\n      WebkitLineClamp: maxLines,\n      textAlign: CardStyle.style.textAlign\n    };\n    const contentData = STRING_TO_URL_CONVERT(content);\n    const trimClasses = `${trimLines ? ` tb_content_line-${trimLines}` : ``}`\n    const contentClasses = `${contentClass} ${!isReadMore ? trimClasses : ''} tb-cTBfont-${CardStyle.style.variant}`\n    return (\n      <div className={contentClasses} ref={this.contentRef} style={truncateStyle}>\n        {contentTitle ? <div className=\"tb_bold_txt__\">{parse(contentTitle)}</div> : null}\n        {parse(contentData)}\n        {/* <PostContentHighlight content={contentData} CardStyle={CardStyle} /> */}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport { gtmAnalytics, themePostTracking } from \"../../../../actions/moredataAction\";\nimport './scss/ShareOnHover.scss'\n\nexport default class ShareOnHover extends PureComponent {\n  onClickData = (shareURL) => event => {\n    const { Post, ThemeInfo } = this.props;\n    event.stopPropagation();\n      themePostTracking({\n      type: 2,\n      action: 2,\n      wall: ThemeInfo.wallID,\n      feed: Post.feedId,\n      post: Post.referenceId ? Post.referenceId : Post.id,\n      owner: ThemeInfo.ownerId\n    })\n    gtmAnalytics(\"Tagbox\", \"shareUrl\", \"shareUrl\", shareURL)\n    window.open(shareURL, \"_blank\")\n  }\n\n  render() {\n    const { shareClass, Post } = this.props;\n    const {facebook,twitter, linkedin } = Post?.share;\n    \n    const GetShareIncon=({shareOn, icon})=>{\n      return <div className=\"tb_share_icon_list\">\n            <div onClick={this.onClickData(shareOn)} className={`tb_share_ico__ tb__icon tb-${icon}`} title={icon}><div></div></div>\n      </div>\n    }\n    return <div className={`tb_share_wrapper ${shareClass}`}>\n      <div className={`tb_share_button_ tb__icon ${'tb-share'}`}><div></div></div>\n      <div className=\"tb_share_icon_list_wrap\">\n        {facebook ? <GetShareIncon shareOn={facebook} icon={'facebook'} />  : ''}\n        {twitter  ? <GetShareIncon shareOn={twitter} icon={'twitter'} />  : ''}\n        {linkedin ? <GetShareIncon shareOn={linkedin} icon={'linkedin'} />  : ''}\n      </div>\n    </div>\n  }\n}\n","import React from \"react\";\nimport { isTagShop, isTagbox } from \"../../../../actions/api\";\nimport Image from \"../../Elements/Media/Image\";\nimport Video from \"../../Elements/Media/Video\";\nimport MediaIcon from \"../../Elements/MediaIcon/MediaIcon\";\nimport Network from \"../../Elements/Network/Network\";\n\nconst Media = ({ Post, ThemeStyle, CardStyle, ThemeInfo, index, inView }) => {\n  const autoPlay = (([3, 5].includes(Post.type)) && ThemeStyle.autoPlay == 1) || false\n  const size = isTagbox && CardStyle.style.ratio ? CardStyle.style.ratio : false\n  const networkOnTop =  !ThemeInfo.id == 59 && !isTagShop && !isTagbox ? true : false\n\n  return <div className=\"tb_nc_media_wrap\">\n    {networkOnTop ?\n      <div className=\"tb_nc_social_ tb_nc_social_top_\">\n        <Network networkClass={'tb_nc_social_ico'} networkId={Post.network.id}  network={Post.network} iconStyle={CardStyle.icon} />\n      </div> : null}\n      <MediaIcon Post={Post} IconClass={networkOnTop ? 'tb_nc_media_icon_te' : 'tb_nc_media_icon'} show={true}  hideVideo={autoPlay} /> \n      {autoPlay  ?\n      <Video VideoClass=\"tb_nc_video\" Post={Post} size={size} isCover={true} controls={false} autoPlay={autoPlay} muted={true} index={index} inView={inView} />\n      :\n      <Image ImageClass=\"tb_nc_image\" Post={Post} size={size} hotspot={isTagShop} blurBG={false} observer={true} index={index} inView={inView} />\n    }\n  </div>\n}\nexport default Media","import React, { Suspense, useRef } from 'react'\nimport { PostTrimContent } from \"../../../../utils\";\nimport { isTagShop, isTagbox } from \"../../../../actions/api\";\nimport Media from \"./Media\";\nimport PostContent from \"../../Elements/PostContent/PostContent\";\nimport ShareOnHover from \"../../Elements/ShareOnHover/ShareOnHover\";\nimport CTAButton from \"../../Elements/CTA/CtaButton\";\nimport InViewWrapper from '../../Elements/InViewWrapper';\nimport AuthorDetails from '../../Elements/Author/AuthorDetails';\nconst SocialAction = React.lazy(() => import('../../Elements/SocialAction/SocialAction'));\nconst Rating = React.lazy(() => import(\"../../Elements/Rating/Rating\"));\n\n\nconst trim_content_length = 200;\n\nconst Card = ({ postSize, clickToShowPopUp, index, onClickToCTA, ThemeStyle, CardStyle, Post, ThemeInfo, counter }) => {\n  const themeId = ThemeInfo.id;\n  const mediaType = Post.type !== 1;\n  const rating = Post.rating > 0;\n  const contentClass = Post.rating > 0 ? \"tb_nc_rating_content\" : \"tb_nc_content\";\n  const textDecorate = Post.type === 1 && CardStyle.style.textDecoration ? \"tb_nc_text_decoration tb_nc_text_post\" : \"\";\n  const postTextContent = CardStyle.content.trimcontent ? PostTrimContent(Post.content.text, trim_content_length) : Post.content.text;\n\n  return (\n    <InViewWrapper>\n      {({ ref, inView }) => (\n        <div ref={ref} style={{ width: `${postSize}%`, padding: CardStyle.style.padding / 2, opacity: inView ? 1 : 0, transition: inView ? 'opacity .5s ease-in-out' : '' }} className={`tb_nc_post_wrapper${(isTagbox && themeId === 83) ? ` tb_nc_post_gradient tb_nc_gradient-${counter}` : \"\"}`} role=\"article\" area-label={Post.content.text} post-id={Post.referenceId ? Post.referenceId : Post.id} feed-id={Post.feedId}>\n          <div id={`tb_nc_id-${Post.id}`} tb-network={Post.networkId} post-id={Post.referenceId || Post.id} feed-id={Post.feedId} tabIndex=\"0\" area-label={postTextContent} role=\"article\">\n            <div className=\"tb_nc_post_wrap_in\">\n              <div className=\"tb_nc_post_in\" onClick={clickToShowPopUp(index, Post)} role=\"button\" aria-label=\"open detail modal for post\" tabIndex=\"0\">\n                {Post.share.status ? (\n                  <ShareOnHover share={Post.share} shareClass={\"tb_nc_share_container\"} Post={Post} ThemeInfo={ThemeInfo} />\n                ) : null}\n                {mediaType ? (\n                  <Media Post={Post} CardStyle={CardStyle} ThemeStyle={ThemeStyle} ThemeInfo={ThemeInfo} index={index} inView={inView} />\n                ) : null}\n                {rating && themeId !== 59 && !isTagShop ? (\n                  <div className=\"tb_nc_rating__\">\n                    <Suspense fallback={<div className='rating-default-height'></div>}>\n                      <Rating rating={Post.rating} networkId={Post.networkId} />\n                    </Suspense>\n                  </div>\n                ) : null}\n                <div className=\"tb_nc_contant_wrapper\">\n                  <AuthorDetails className={'tb_nc'} Post={Post} CardStyle={CardStyle} ThemeInfo={ThemeInfo} inView={inView} />\n\n                  {Post.ctaStatus ?\n                    <div className=\"tb_nc_post_cta\">\n                      <CTAButton ctaClass={\"tb_nc_post_cta_btn\"} cta={Post} Post={Post} onClickToCTA={onClickToCTA} />\n                    </div>\n                    : null}\n                  {rating && isTagShop ? (\n                    <div className=\"tb_nc_rating__\">\n                      <Suspense fallback={<div className='rating-default-height'></div>}>\n                        <Rating rating={Post.rating} networkId={Post.networkId} />\n                      </Suspense>\n                    </div>\n                  ) : null}\n                  {(CardStyle.content.status || Post.type === 1) ? (\n                    <PostContent contentClass={`${contentClass} ${textDecorate}`} Post={Post} content={postTextContent} CardStyle={CardStyle} contentTitle={Post.content.title} />\n                  ) : null}\n                </div>\n                {CardStyle.actionStatus ? (\n                  <Suspense fallback={''}>\n                    <SocialAction Post={Post} CardStyle={CardStyle} actionClass={`tb_nc_social_action__`} />\n                  </Suspense>\n                ) : null}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </InViewWrapper>\n  );\n}\nexport default Card","import React, { PureComponent } from \"react\";\nimport Masonry from 'react-masonry-component';\nimport { isTagbox } from '../../../actions/api'\nimport './scss/NewsCard.scss'\nimport Card from './Elements/Card';\nimport { getColumns, getSizeInPercent } from \"../../../utils\";\nclass NewsCard extends PureComponent {\n\n  componentDidMount(){\n    this.props.loadBranding()\n  }\n\n  render() {\n    const { postData, completeDataObject, CardStyle, ThemeStyle, ThemeInfo, clickToShowPopUp, onClickToCTA, onClickPopUpSlider, containerSize } = this.props;\n    const responsiveColumns = Math.max((containerSize.width / (CardStyle.minimumWidth + 20)).toFixed(), 1)\n    const columns =  getColumns(containerSize.width, ThemeStyle.column, responsiveColumns);\n    const postSize = getSizeInPercent(containerSize.width, columns)\n\n    let counter = 0;\n\n    return (\n      <Masonry\n        className={`tb_nc_post_container`}\n        tabIndex='0'\n        aria-label={`There are ${(postData && postData.length > 0) ? postData.length : 0} posts in the feed`} role=\"feed\"\n        elementType={'div'}\n        options={{\n          transitionDuration: 0,\n          percentPosition: true,\n          itemSelector: '.tb_nc_post_wrapper',\n          horizontalOrder: true,\n          resize: true,\n        }}\n        disableImagesLoaded={false}\n        updateOnEachImageLoad={false}\n        imagesLoadedOptions={{}}\n        enableResizableChildren={true}>{\n          ((postData && postData.length > 0)) && postData.map((item, index) => {\n            const cardData = completeDataObject[item];\n            counter = (isTagbox && ThemeInfo?.id == 83) ? index % 6 === 0 ? 1 : counter + 1 : 1;\n            return <Card key={index} postSize={postSize} clickToShowPopUp={clickToShowPopUp} onClickToCTA={onClickToCTA} onClickPopUpSlider={onClickPopUpSlider} Post={cardData} index={index} CardStyle={CardStyle} ThemeStyle={ThemeStyle} ThemeInfo={ThemeInfo}/>\n          })\n        }\n      </Masonry>\n    );\n  }\n}\n\nexport default NewsCard\n\n\n"],"names":["DefaultNetwork","React","Network","PureComponent","render","networkId","networkClass","iconStyle","isPopUp","this","props","default","includes","_jsx","Suspense","fallback","_Fragment","children","className","GET_NETWORK_ICON","GET_NETWORK_NAME","PostContent","constructor","super","contentRef","componentDidMount","setTimeout","_this$contentRef","_this$contentRef$curr","current","clientHeight","_this$contentRef2","_this$contentRef2$cur","contentHeight","contentRefCallBack","CardStyle","contentClass","content","contentTitle","maxLines","isReadMore","trimLines","trimcontent","isTagShop","truncateStyle","WebkitLineClamp","textAlign","style","contentData","STRING_TO_URL_CONVERT","contentClasses","variant","_jsxs","ref","parse","ShareOnHover","arguments","onClickData","shareURL","event","Post","ThemeInfo","stopPropagation","themePostTracking","type","action","wall","wallID","feed","feedId","post","referenceId","id","owner","ownerId","gtmAnalytics","window","open","shareClass","facebook","twitter","linkedin","share","GetShareIncon","_ref","shareOn","icon","onClick","title","ThemeStyle","index","inView","autoPlay","size","isTagbox","ratio","networkOnTop","network","MediaIcon","IconClass","show","hideVideo","Video","VideoClass","isCover","controls","muted","Image","ImageClass","hotspot","blurBG","observer","SocialAction","Rating","postSize","clickToShowPopUp","onClickToCTA","counter","themeId","mediaType","rating","textDecorate","textDecoration","postTextContent","PostTrimContent","text","InViewWrapper","_ref2","width","padding","opacity","transition","role","tabIndex","status","Media","AuthorDetails","ctaStatus","CTAButton","ctaClass","cta","actionStatus","actionClass","NewsCard","loadBranding","postData","completeDataObject","onClickPopUpSlider","containerSize","responsiveColumns","Math","max","minimumWidth","toFixed","columns","getColumns","column","getSizeInPercent","Masonry","length","elementType","options","transitionDuration","percentPosition","itemSelector","horizontalOrder","resize","disableImagesLoaded","updateOnEachImageLoad","imagesLoadedOptions","enableResizableChildren","map","item","cardData","Card"],"sourceRoot":""}