{"version":3,"file":"static/js/2155.1640134e.chunk.js","mappings":"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","sources":["app/Themes/Elements/Network/Network.js","app/Themes/Elements/SocialAction/SocialAction.js","app/Themes/NewsCard/Elements/AuthorDetails.js","app/Themes/NewsCard/Elements/Media.js","app/Themes/NewsCard/Elements/Card.js"],"sourcesContent":["import React, { PureComponent, Suspense } from \"react\";\r\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from \"../../../../utils/Network\";\r\nimport \"./IconDefaultColor.scss\"\r\nconst DefaultNetwork = React.lazy(() => import(\"./DefaultNetwork\"));\r\n\r\nexport default class Network extends PureComponent {\r\n  render() {\r\n    const { networkId, networkClass, iconStyle, isPopUp } = this.props;\r\n    const defaultNetworks = [7, 4, 36]\r\n    const isDefaultIcon = iconStyle?.default || (defaultNetworks.includes(networkId))\r\n    return (isDefaultIcon ?  <Suspense fallback={<></>}><DefaultNetwork networkId={networkId} networkClass={networkClass} /></Suspense> : <div className={`${networkClass} tb__icon tb-${GET_NETWORK_ICON(networkId)}`} aria-label={`post network ${GET_NETWORK_NAME(networkId)}`}><div></div></div>);\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\"; \r\nimport { convertToAtob, kFormatter } from \"../../../../utils/Common\";\r\nimport { GET_NETWORK_NAME } from \"../../../../utils/Network\";\r\nimport \"./scss/SocialAction.scss\";\r\n\r\nconst NetworkAction = (networkID, postID, Link, action) => {\r\n  const actions = {\r\n    like: `https://twitter.com/intent/favorite?tweet_id=${convertToAtob(postID)}`,\r\n    comment: `https://twitter.com/intent/tweet?in_reply_to=${convertToAtob(postID)}`,\r\n    retweet: `https://twitter.com/intent/retweet?tweet_id=${convertToAtob(postID)}`\r\n  };\r\n  return networkID === 1 ? actions[action] : Link;\r\n};\r\n\r\nconst SocialItm = ({ arialbl, hrefClick, Icon, count, itemId = 0, type }) => {\r\n  const countNo = count > 0 ? kFormatter(count) : \"\";\r\n  return <div className=\"tb_social_action__list\" role=\"listitem\" aria-roledescription=\"post social action links\">\r\n    <div onClick={event => { event.stopPropagation(); window.open(hrefClick, \"_blank\"); }} className={`tb_social_action__ico_wrap tb_social_action__ico_wrap_${itemId}`} aria-label={`${arialbl} post ${type} count ${countNo}`} role=\"button\" tabIndex=\"0\">\r\n      <div className={`tb_social_action_ico__ tb__icon tb-${Icon}`}>  </div>\r\n      {countNo ? <div className=\"tb_social_action_counts__\">{countNo}</div>:''}\r\n    </div>\r\n  </div>\r\n};\r\n\r\nexport default class SocialAction extends PureComponent {\r\n  componentDidMount() {\r\n    try {\r\n      const { Post } = this.props;\r\n      const socialActionId = `.tb_social_action__ico_wrap_${Post?.id}`;\r\n      document.querySelector(socialActionId)?.addEventListener('keydown', function (event) {\r\n        if (event.key === 'Enter' || event.key === ' ') {\r\n          event.preventDefault();\r\n          this.click(); // Triggers the existing onClick functionality\r\n        }\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { Post, CardStyle, actionClass } = this.props;\r\n    const { icon, style } = CardStyle;\r\n    const iconStyle = { color: icon.default !== 1 ? icon.color : style.color };\r\n\r\n    const networkID = Post.networkId;\r\n    const { comment, like } = Post.count;\r\n    const likeIcon = [3, 10, 7].includes(networkID) ? 'like' : 'heart-outline';\r\n    const likeIconStatus = [1, 2, 3, 7, 8, 9, 10, 18].includes(networkID);\r\n    const commentIconStatus = ![29, 19].includes(networkID);\r\n    const networkName = GET_NETWORK_NAME(networkID);\r\n\r\n    return ![29, 26, 23, 6, 5, 11, 12, 15, 20, 21].includes(networkID) ? (\r\n      <div className={actionClass}>\r\n        <div className=\"tb_social_action__\" role=\"list\">\r\n          {likeIconStatus && <SocialItm itemId={Post.id} arialbl={networkName} hrefClick={NetworkAction(networkID, Post.postId, Post.link, 'like')} Icon={likeIcon} iconStyle={iconStyle} count={like} type=\"like\" />}\r\n          {commentIconStatus && <SocialItm itemId={Post.id} arialbl={networkName} hrefClick={NetworkAction(networkID, Post.postId, Post.link, 'comment')} Icon={\"comment\"} iconStyle={iconStyle} count={comment} type=\"comment\" />}\r\n          {networkID === 1 && <SocialItm itemId={Post.id} arialbl={networkName} hrefClick={NetworkAction(networkID, Post.postId, Post.link, 'retweet')} Icon={\"retweet\"} iconStyle={iconStyle} count={comment} type=\"comment\" />}\r\n          <SocialItm arialbl={networkName} itemId={Post.id} hrefClick={Post.link} Icon={\"eye\"} iconStyle={iconStyle} count={0} type=\"view\" />\r\n        </div>\r\n      </div>\r\n    ) : null;\r\n  }\r\n}","import React, { Suspense, lazy } from \"react\";\r\nimport {  isTagShop, isTagbox } from \"../../../../actions/api\";\r\nimport { isInstaUser } from \"../../../../utils\";\r\nconst Author = lazy(() => import( \"../../Elements/Author/Author\"));\r\nconst Time = lazy(() => import( \"../../Elements/Time/Time\"));\r\nconst Network = lazy(() => import( \"../../Elements/Network/Network\"));\r\n\r\nconst AuthorDetails = ({ Post, CardStyle, ThemeInfo }) => {\r\n  const { author, networkId } = Post\r\n  const { ThemeId } = ThemeInfo.id\r\n  const username = author.username ? author.username.length > 0 ? `@${author.username}` : `` : '';\r\n  const instaUser =  isInstaUser(author.name);\r\n\r\n  const postAuthor = (CardStyle.author.status && !instaUser) ? true : false;\r\n  const authorSeprator = (CardStyle.author.status && CardStyle.timeStatus && !instaUser && username != '') ? true : false;\r\n  return <div className=\"tb_nc_author_wrapper\" aria-label=\"Author details\" aria-roledescription=\"post author details\">\r\n    <div className={`tb_nc_author`}>\r\n      {postAuthor ? <Suspense fallback={<div className=\"tb_nc_author_profile\"></div>}><Author author={author} network={Post.network} networkId={networkId} authorClass={'tb_nc_author_profile'} /> </Suspense> : ''}\r\n      <div className=\"tb_nc_author_info\">\r\n        {postAuthor ? <div className=\"tb_nc_authorname\">{author.name}</div> : ''}\r\n        <div className=\"tb_nc_post_info\">\r\n          {postAuthor && username != '' ? <div className=\"tb_nc_username\">{username}</div> : ''}\r\n          {authorSeprator ? <div className=\"tb_nc_seprator\"><div></div></div> : ''}\r\n          {CardStyle.timeStatus ? <Suspense fallback={<></>}>\r\n          <Time createdAt={Post.createdAt} timeClass={`tb_nc_time tb-cTBfont-${CardStyle.author.variant}`} /></Suspense> : ''}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"tb_nc_social_\">\r\n        <Suspense fallback={<div style={{minWidth:20}}></div>}>\r\n          <Network networkClass={'tb_nc_social_ico'} networkId={networkId} iconStyle={CardStyle.icon} />\r\n        </Suspense>\r\n      </div>\r\n  </div>\r\n}\r\nexport default AuthorDetails","import React from \"react\";\r\nimport { isTagShop, isTagbox } from \"../../../../actions/api\";\r\nimport Image from \"../../Elements/Media/Image\";\r\nimport Video from \"../../Elements/Media/Video\";\r\nimport MediaIcon from \"../../Elements/MediaIcon/MediaIcon\";\r\nimport Network from \"../../Elements/Network/Network\";\r\n\r\nconst Media = ({ Post, ThemeStyle, CardStyle, ThemeInfo, index }) => {\r\n  const autoPlay = (([3, 5].includes(Post.type)) && ThemeStyle.autoPlay == 1) || false\r\n  const size = isTagbox && CardStyle.style.ratio ? CardStyle.style.ratio : false\r\n  const networkOnTop =  !ThemeInfo.id == 59 && !isTagShop && !isTagbox ? true : false\r\n\r\n  return <div className=\"tb_nc_media_wrap\">\r\n    {networkOnTop ?\r\n      <div className=\"tb_nc_social_ tb_nc_social_top_\">\r\n        <Network networkClass={'tb_nc_social_ico'} networkId={Post.network.id}  network={Post.network} iconStyle={CardStyle.icon} />\r\n      </div> : null}\r\n      <MediaIcon Post={Post} IconClass={networkOnTop ? 'tb_nc_media_icon_te' : 'tb_nc_media_icon'} show={true}  hideVideo={autoPlay} /> \r\n     {autoPlay  ?\r\n      <Video VideoClass=\"tb_nc_video\" Post={Post} size={size} isCover={true} controls={false} autoPlay={autoPlay} muted={true} index={index} />\r\n      :\r\n      <Image ImageClass=\"tb_nc_image\" Post={Post} size={size} hotspot={isTagShop} blurBG={false} observer={true} index={index} />\r\n    }\r\n  </div>\r\n}\r\nexport default Media","import React, { useEffect, useRef, lazy } from 'react'\r\nimport { PostTrimContent, themeImpressionTracking } from \"../../../../utils\";\r\nimport { isTagShop, isTagbox } from \"../../../../actions/api\";\r\nimport AuthorDetails from \"./AuthorDetails\";\r\nimport Media from \"./Media\";\r\nimport PostContent from \"../../Elements/PostContent/PostContent\";\r\nimport SocialAction from \"../../Elements/SocialAction/SocialAction\";\r\nimport ShareOnHover from \"../../Elements/ShareOnHover/ShareOnHover\";\r\nimport CTAButton from \"../../Elements/CTA/CtaButton\";\r\nimport Rating from \"../../Elements/Rating/Rating\";\r\n\r\nconst trim_content_length = 200;\r\n\r\nconst Card = ({ adjustWidth, clickToShowPopUp, index, onClickToCTA, onClickPopUpSlider, ThemeStyle, CardStyle, Post, ThemeInfo, counter }) => {\r\n    const postTrack = useRef(null);\r\n    const themeId = ThemeInfo.id;\r\n\r\n    const cardSize = { width: `${adjustWidth}%`, padding: CardStyle.style.padding / 2};\r\n    const mediaType = Post.type !== 1;\r\n    const rating = Post.rating > 0;\r\n    const contentClass = Post.rating > 0 ? \"tb_nc_rating_content\" : \"tb_nc_content\";\r\n    const textDecorate = Post.type === 1 && CardStyle.style.textDecoration ? \"tb_nc_text_decoration tb_nc_text_post\" : \"\";\r\n    const postTextContent = CardStyle.content.trimcontent ? PostTrimContent(Post.content.text, trim_content_length) : Post.content.text;\r\n\r\n    useEffect(() => {\r\n      if (isTagShop) themeImpressionTracking(postTrack);\r\n    }, []);\r\n\r\n    return (\r\n      <div style={cardSize} className={`tb_nc_post_wrapper ${(isTagbox && themeId == 83) ? `tb_nc_post_gradient tb_nc_gradient-${counter}`: \"\" }`}>\r\n          <div id={`tb_nc_id-${Post.id}`} tb-network={Post.networkId} post-id={Post.referenceId || Post.id} feed-id={Post.feedId} ref={postTrack} tabIndex=\"0\" area-label={postTextContent} role=\"article\">\r\n            <div className=\"tb_nc_post_wrap_in\">\r\n              <div className=\"tb_nc_post_in\" onClick={clickToShowPopUp(index, Post)} role=\"button\" aria-label=\"open detail modal for post\" tabIndex=\"0\">\r\n                <div className=\"tb_nc_post_media_wrapp\" role=\"button\" tabIndex=\"0\" aria-label=\"Pop Up Button\">\r\n                  {Post.share.status ? (\r\n                      <ShareOnHover share={Post.share} shareClass={\"tb_nc_share_container\"} Post={Post} ThemeInfo={ThemeInfo} />\r\n                  ) : null}\r\n                  {mediaType ? (\r\n                    <Media Post={Post} CardStyle={CardStyle} ThemeStyle={ThemeStyle} ThemeInfo={ThemeInfo} index={index} />\r\n                  ) : null}\r\n                  {rating  && themeId != 59 && !isTagShop ? (\r\n                    <div className=\"tb_nc_rating__\">\r\n                      <Rating rating={Post.rating} networkId={Post.networkId} />\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"tb_nc_contant_wrapper\">\r\n                <AuthorDetails Post={Post} CardStyle={CardStyle} ThemeStyle={ThemeStyle} mediaType={mediaType} ThemeInfo={ThemeInfo}/>\r\n                  { Post.ctaStatus ?\r\n                      <div className=\"tb_nc_post_cta\">\r\n                        <CTAButton ctaClass={\"tb_nc_post_cta_btn\"} cta={Post} Post={Post} onClickToCTA={onClickToCTA} />\r\n                      </div>\r\n                  : null }\r\n                  {rating && isTagShop ? (\r\n                      <div className=\"tb_nc_rating__\">\r\n                        <Rating rating={Post.rating} networkId={Post.networkId} />\r\n                      </div>\r\n                    ) : null}\r\n                  {((CardStyle.content.status) || Post.type === 1) ? (\r\n                      <PostContent contentClass={`${contentClass} ${textDecorate}`} Post={Post} content={postTextContent} CardStyle={CardStyle} contentTitle={Post.content.title} /> \r\n                  ) : null}\r\n                \r\n                </div>\r\n                {CardStyle.actionStatus ? (\r\n                    <SocialAction Post={Post} CardStyle={CardStyle} actionClass={`tb_nc_social_action__`}/>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\nexport default Card"],"names":["DefaultNetwork","React","Network","PureComponent","render","networkId","networkClass","iconStyle","isPopUp","this","props","default","includes","_jsx","Suspense","fallback","_Fragment","children","className","GET_NETWORK_ICON","GET_NETWORK_NAME","NetworkAction","networkID","postID","Link","action","actions","like","convertToAtob","comment","retweet","SocialItm","_ref","arialbl","hrefClick","Icon","count","itemId","type","countNo","kFormatter","role","_jsxs","onClick","event","stopPropagation","window","open","tabIndex","SocialAction","componentDidMount","_document$querySelect","Post","socialActionId","id","document","querySelector","addEventListener","key","preventDefault","click","e","console","log","CardStyle","actionClass","icon","style","color","likeIcon","likeIconStatus","commentIconStatus","networkName","postId","link","Author","lazy","Time","ThemeInfo","author","ThemeId","username","length","instaUser","isInstaUser","name","postAuthor","status","authorSeprator","timeStatus","network","authorClass","createdAt","timeClass","variant","minWidth","ThemeStyle","index","autoPlay","size","isTagbox","ratio","networkOnTop","isTagShop","MediaIcon","IconClass","show","hideVideo","Video","VideoClass","isCover","controls","muted","Image","ImageClass","hotspot","blurBG","observer","adjustWidth","clickToShowPopUp","onClickToCTA","onClickPopUpSlider","counter","postTrack","useRef","themeId","cardSize","width","padding","mediaType","rating","contentClass","textDecorate","textDecoration","postTextContent","content","trimcontent","PostTrimContent","text","useEffect","themeImpressionTracking","referenceId","feedId","ref","share","ShareOnHover","shareClass","Media","Rating","AuthorDetails","ctaStatus","CTAButton","ctaClass","cta","PostContent","contentTitle","title","actionStatus"],"sourceRoot":""}