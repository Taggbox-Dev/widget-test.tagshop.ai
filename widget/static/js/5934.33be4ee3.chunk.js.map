{"version":3,"file":"static/js/5934.33be4ee3.chunk.js","mappings":"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","sources":["app/Themes/Elements/Network/Network.js","app/Themes/Elements/ShareOnHover/ShareOnHover.js","app/Themes/Elements/ShopButton/ShopButton.js","app/Themes/SquarePhoto/Elements/Card.js","app/Themes/SquarePhoto/index.js"],"sourcesContent":["import React, { PureComponent, Suspense } from \"react\";\nimport { isTagEmbed } from \"../../../../actions/api\";\nconst DefaultNetwork = React.lazy(() => import(\"./DefaultNetwork\"));\n\nexport default class Network extends PureComponent {\n  render() {\n    const { network, networkClass, ThemeRule, isDefault, Personalization } = this.props;\n    const isDefaultIcon = isDefault ? (network.id === 7 || network.id === 4 || network.id === 36) ? false : true : false\n    const icon = isTagEmbed && network.id == 36 ? \"tagembed\" : network.icon;\n    return (isDefaultIcon ? <div className={`${networkClass} tb__icon tb-${icon.replace(/fa-/g, \"\")}`} aria-label={`post network ${network?.name || \"\"}`}><div></div></div> : <Suspense fallback={<></>}> <DefaultNetwork network={network} networkClass={networkClass} /></Suspense>);\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport { themePostTracking, gtmAnalyticsAction } from '../../../../actions/themeActions'\nimport { isTagEmbed } from '../../../../actions/api'\n\nexport default class ShareOnHover extends PureComponent {\n\n\n  onClickData = (shareURL) => event => {\n    const { item, wallID, ownerId } = this.props;\n    event.stopPropagation();\n    if (!isTagEmbed) themePostTracking({\n      type: 2,\n      action: 2,\n      wall: wallID,\n      feed: item.feedId,\n      post: item.referenceId ? item.referenceId : item.id,\n      owner: ownerId\n    })\n    gtmAnalyticsAction(\"Tagbox\", \"shareUrl\", \"shareUrl\", shareURL)\n    window.open(shareURL, \"_blank\")\n  }\n\n  render() {\n    const { share, shareClass } = this.props;\n    return <div className={`tb_share_wrapper ${shareClass}`}>\n      <div className={`tb_share_button_ tb__icon ${isTagEmbed ? 'tb-share-fill' : 'tb-share'}`}><div></div></div>\n      <div className=\"tb_share_icon_list_wrap\">\n        {share.facebook ?\n          <div className=\"tb_share_icon_list\">\n            <div onClick={this.onClickData(share.facebook)} className=\"tb_share_ico__ tb__icon tb-facebook\" title=\"facebook\"><div></div></div>\n          </div>\n          : ''}\n        {share.twitter ?\n          <div className=\"tb_share_icon_list\">\n            <div onClick={this.onClickData(share.twitter)} className=\"tb_share_ico__  tb__icon tb-twitter\" title=\"twitter\"><div></div></div>\n          </div>\n          : ''}\n        {share.linkedin ?\n          <div className=\"tb_share_icon_list\">\n            <div onClick={this.onClickData(share.linkedin)} className=\"tb_share_ico__ tb__icon tb-linkedin\" title=\"linkedin\"><div></div></div>\n          </div>\n          : ''}\n      </div>\n    </div>\n  }\n}\n","import \"./scss/ShopButton.scss\";\nimport { IS_THEME } from \"../../../../utils\";\nconst ShopButton = ({ ThemeRule, btnClass }) => {\n  const shopBtnStyle = { fontFamily: ThemeRule.css_font }\n  return <div className={`tb_shop_btn_wrap ${btnClass}`}>\n    <div className={`tb_shop_btn${ThemeRule.postHover || IS_THEME(4) || IS_THEME(55) ? ' tb_shop_btn_light' : ' tb_shop_btn_dark'}`} style={shopBtnStyle}>\n      {ThemeRule.shoppingText}\n    </div>\n  </div>\n}\n\n\nexport default ShopButton;","import React, { Suspense, useRef, useEffect } from \"react\";\nimport { PostTrimContent, themeImpressionTracking } from '../../../../utils'\nimport { isTagEmbed, isTagShop, isTagbox } from \"../../../../actions/api\";\nimport { suiteTrack } from '../../../../actions/api'\nimport ShareOnHover from \"../../Elements/ShareOnHover/ShareOnHover\";\nimport Network from \"../../Elements/Network/Network\";\nimport ShopButton from \"../../Elements/ShopButton/ShopButton\";\nconst AuthorDetails = React.lazy(() => import(\"./AuthorDetails\"));\nconst Media = React.lazy(() => import('./Media'));\nconst PostContent = React.lazy(() => import('../../Elements/PostContent/PostContent'));\nconst trim_content_length = !isTagEmbed ? 200 : null;\n\n\nconst Card = ({ itemData, personalization, adjustWidth, ThemeRule, clickToShowPopUp, itemIndex, wallID, ownerId, postSizeInPx, wall, onClickPopUpSlider }) => {\n  const postTrack = useRef(null);\n  const mediaType = itemData.type !== 1 ? true : false;\n  const postTextContent = personalization.trimcontent ? PostTrimContent(itemData.content, trim_content_length) : itemData.content\n  const responsiveCardSize2x = postSizeInPx.adjustWidth < 250 ? true : false\n  const themeMode = (ThemeRule.postHover == 0 && isTagShop) ? 'light' : 'dark'\n  const overlay = isTagbox ? 'tb_sp_color_overlay' : 'tb_sp_post_overlay-' + themeMode\n  const overlayStyle = { backgroundColor: isTagbox ? ThemeRule.cardColor : '' }\n  useEffect(() => {\n    if (suiteTrack || isTagShop) themeImpressionTracking(postTrack);\n  }, []);\n  const isHotspot = itemData.hotspot && itemData.ugc_products.length > 0 ? true : false\n  const isShopBtn = isTagShop && (!itemData.hotspot && itemData.ugc_products.length > 0) ? true : false;\n\n  useEffect(() => {\n    if (itemData.isPopUp) onClickPopUpSlider(itemIndex, itemData)\n  }, [itemIndex, itemData.isPopUp, itemData]);\n  return <div id={`tb-sp-post-${itemData.id}`} className={`tb_sp_post_wrapper${responsiveCardSize2x ? ' tb_sp_post_wrapper2x' : ''}`} style={{ width: `${adjustWidth}%`, padding: personalization.padding / 2 }} tb-network={itemData.network.id} tb-product={isShopBtn ? 1 : isHotspot ? 2 : 0} tabIndex=\"0\" role=\"article\" aria-label={`Post ${parseInt(itemIndex) + 1},${postTextContent}`} ref={postTrack} post-id={itemData.referenceId ? itemData.referenceId : itemData.id} feed-id={itemData.feedId}>\n    <div className={`tb_sp_post_in${isTagShop ? ' tb_sp_post_ani' : ''}`} onClick={clickToShowPopUp(itemIndex, itemData)} role=\"button\" aria-roledescription=\"Click to open pop up\" tabIndex={\"0\"}>\n      <div className=\"tb_sp_post_media_wrapp\" role=\"button\" tabindex=\"0\" aria-label=\"Pop Up Button\">\n        {itemData.share.status ? <ShareOnHover share={itemData.share} shareClass={'tb_sp_share_container'} item={itemData} wallID={wallID} ownerId={ownerId} /> : ''}\n        {mediaType ? <Suspense fallback={<></>}><Media key={`img${itemIndex}_${itemData.id}`} itemData={itemData} wallID={wallID} ownerId={ownerId} ThemeID={personalization.widgetTheme} wall={wall} /></Suspense> : ''}\n        {!isHotspot ? <>\n          <div className=\"tb_sp_post_details\">\n            {isTagShop ? <div className=\"tb_sp_social_\">\n              <Network networkClass={'tb_sp_social__ico'} network={itemData.network} isDefault={ThemeRule.iconType === 1 ? true : false} ThemeRule={ThemeRule} Personalization={personalization} />\n            </div> : null}\n            {isShopBtn ? <ShopButton ThemeRule={ThemeRule} btnClass={'tb_sp_btn_wrap'} /> : null}\n            {!isTagShop ? <>\n              <div className=\"tb_sp_contant_wrapper\">\n                {!ThemeRule.hideContent || itemData.type == 1 ? <Suspense fallback={<></>}><PostContent contentClass={'tb_sp_content'} item={itemData} content={postTextContent} font={ThemeRule} ThemeRule={ThemeRule} personalization={personalization} contentTitle={itemData.contentTitle} /></Suspense> : ''}\n              </div>\n              <Suspense fallback={<></>}><AuthorDetails ownerId={ownerId} postTime={itemData.createdAt} author={itemData.author} network={itemData.network} font={ThemeRule} personalization={personalization} ThemeRule={ThemeRule} /></Suspense>\n            </>\n              : null}\n          </div>\n          <div className={`tb_sp_post_overlay ${overlay}`} style={overlayStyle}><div></div></div>\n        </> : null}\n      </div>\n    </div>\n  </div>\n}\nexport default Card","import React, { PureComponent } from \"react\";\nimport Card from \"./Elements/Card\";\nimport { connect } from 'react-redux';\nimport { managePostHeight } from '../../../actions/themeActions';\nimport \"./scss/SquarePhoto.scss\";\nclass SquarePhoto extends PureComponent {\n  state = {\n    postData: []\n  }\n  render() {\n    const { postData, completeDataObject, adjustWidth, wall, clickToShowPopUp, cardNumber, onClickToCTA, postSizeInPx, onClickPopUpSlider } = this.props;\n    let totalPostBestFit = postData.length;\n    if (wall && wall.Personalization.fitRow == 1) {\n      if (postData.length >= parseInt(cardNumber)) {\n        let bestFitEachRow = postData.length / parseInt(cardNumber);\n        totalPostBestFit = (parseInt(cardNumber) * parseInt(bestFitEachRow));\n      }\n    }\n    return (\n      <div tabIndex=\"0\" aria-label={`There are ${(postData && postData.length > 0) ? postData.length : 0} posts in the feed`} role=\"feed\" className=\"tb_sp_post_container\">\n        {(postData && postData.length > 0) && postData.map((item, index) => {\n          const cardData = completeDataObject[item];\n          return parseInt(totalPostBestFit) >= parseInt((index + 1)) ? <Card ownerId={wall.Wall.owner} itemData={cardData} key={`sqr_crd_${index}_${item.id}`} itemIndex={index} adjustWidth={cardData.highlight == 1 ? adjustWidth * 2 : adjustWidth} personalization={wall.Personalization} ThemeRule={wall.ThemeRule} wallID={wall.Wall.id} clickToShowPopUp={clickToShowPopUp} onClickToCTA={onClickToCTA} postSizeInPx={postSizeInPx} wall={wall} onClickPopUpSlider={onClickPopUpSlider} />\n            : null\n        })}\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    postHeight: state.postHeight.data\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    managePostHeight: (data) => dispatch(managePostHeight(data))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SquarePhoto)"],"names":["DefaultNetwork","React","Network","PureComponent","render","network","networkClass","ThemeRule","isDefault","Personalization","this","props","isDefaultIcon","id","icon","isTagEmbed","_jsx","className","concat","replace","name","children","_jsxs","Suspense","fallback","_Fragment","ShareOnHover","constructor","arguments","onClickData","shareURL","event","item","wallID","ownerId","stopPropagation","themePostTracking","type","action","wall","feed","feedId","post","referenceId","owner","gtmAnalyticsAction","window","open","share","shareClass","facebook","onClick","title","twitter","linkedin","_ref","btnClass","shopBtnStyle","fontFamily","css_font","postHover","IS_THEME","style","shoppingText","AuthorDetails","Media","PostContent","trim_content_length","itemData","personalization","adjustWidth","clickToShowPopUp","itemIndex","postSizeInPx","onClickPopUpSlider","postTrack","useRef","mediaType","postTextContent","trimcontent","PostTrimContent","content","responsiveCardSize2x","themeMode","isTagShop","overlay","isTagbox","overlayStyle","backgroundColor","cardColor","useEffect","suiteTrack","themeImpressionTracking","isHotspot","hotspot","ugc_products","length","isShopBtn","isPopUp","width","padding","tabIndex","role","parseInt","ref","tabindex","status","ThemeID","widgetTheme","iconType","ShopButton","hideContent","contentClass","font","contentTitle","postTime","createdAt","author","SquarePhoto","state","postData","completeDataObject","cardNumber","onClickToCTA","totalPostBestFit","fitRow","bestFitEachRow","map","index","cardData","Card","Wall","highlight","connect","postHeight","data","dispatch","managePostHeight"],"sourceRoot":""}