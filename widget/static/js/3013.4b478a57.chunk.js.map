{"version":3,"file":"static/js/3013.4b478a57.chunk.js","mappings":"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","sources":["actions/ImageRenewAction.js","app/Components/ReelPopUp/Elements/ReelMediaSlider.js","app/Themes/Elements/Hotspot/Hotspot.js","app/Themes/Elements/Media/Image.js"],"sourcesContent":["import { CloudUrl, NO_IMAGE } from \"../constants\";\nimport store from \"../store\";\nimport { isTagbox, isTagShop, tbox, UPDATE_STATUS } from \"./api\";\nimport { isUpdateFrom } from \"./commonAction\";\nimport HttpClient from \"./http-client\";\n\nlet imgQue = [];\nexport let dataSource;\n \nexport const checkImageUrl = async (url) =>\n    [\"taggbox.com\", \"tagbox.com\", \"tagembed.com\", \"socialwalls.com\"].some((item) => url.includes(item)) || \n    (await fetch(url).then((res) => res.ok).catch(() => false));\n \n\nexport const POPUP_IMAGE_RENEW_REQUEST = (event) => {\n    event.persist();\n    const target = event.target;\n    const { network, itemId, themeId } = target.dataset;\n    if (network == 1 && ![3, 4, 16, 47, 50, 55, 60].includes(themeId)) {\n        const element = document.querySelector(`.tb_media-${itemId}`);\n        if (element) element.style.display = \"none\";\n    } else if (!imgQue.includes(event)) {\n        imgQue.push(event);\n    }\n    if (imgQue.length === 1) processImageInQueue();\n};\n\nconst formatPostData = (data, wall, res) => {\n    const { UserPlan, Wall } = wall;\n    return {\n        table_name: UserPlan?.db_table,\n        ...data,\n        ...(res?.length ? {\n            feedId: res[0]?.feedId,\n            type: res[0]?.type,\n            link: res[0]?.link,\n            postFile: res[0]?.postFile,\n            mediaFile: res[0]?.mediaFile,\n        } : {}),\n        url: Wall?.url,\n    };\n};\n\n\n// export const updateInstagramPodstImage = (data) => {\n//     const { postData, wall } = store.getState().appData;\n//     const res = postData?.completeDataObject\n//         ? Object.values(postData.completeDataObject).filter((val) => val.id === data.postId)\n//         : [];\n\n//     if (res.length) {\n//         const dataFormatted = formatPostData(data, wall, res);\n//         checkImageUrl(res[0]?.postFileNew)\n//             .then((isValid) => {\n//                 if (!isValid) {\n//                     new HttpClient()\n//                         .post(UPDATE_STATUS, dataFormatted, { headers: isUpdateFrom })\n//                         .catch(console.error);\n//                 }\n//             })\n//             .catch(({ response }) => console.log(response));\n//     }\n// };\n\n\nconst processImageInQueue = async () => {\n    const { postData, wall } = store.getState().appData;\n    if (!wall || !Object.keys(wall).length || !imgQue.length) return;\n\n    const { User, Wall } = wall;\n    const ownerId = User?.id;\n    const wallId = isTagShop && dataSource === \"website\" && Wall?.wallId ? Wall.wallId : Wall?.id;\n\n    const target = imgQue[0]?.target;\n    const { filterId, network, itemId, load } = target.dataset;\n    const imgTargets = document.querySelector(`img[data-item-id=\"${itemId}\"]`);\n    const res = postData?.completeDataObject\n        ? Object.values(postData.completeDataObject).filter((val) => val.id === itemId)\n        : [];\n\n    if (res?.length) {\n        const isValid = await checkImageUrl(res[0]?.postFileNew);\n        if (!isValid && imgTargets) {\n            if (\n                [2, 18, 3, 28].includes(+network) &&\n                load === \"0\" &&\n                filterId !== \"34\" &&\n                !target.src.includes(\"cloud.taggbox.com\")\n            ) {\n                const dataFormatted = formatPostData(\n                    {\n                        wallId,\n                        postId: itemId,\n                        ownerId,\n                    },\n                    wall,\n                    res\n                );\n                try {\n                    const { data } = await new HttpClient().post(UPDATE_STATUS, dataFormatted, { headers: isUpdateFrom });\n                    const baseUrl = isTagShop || isTagbox ? \"\" : `https://images.${tbox}/`;\n                    target.src = network === \"18\" ? `${baseUrl}${data.media}` : data.media;\n                } catch {\n                    target.src = NO_IMAGE;\n                } finally {\n                    dataLoad(target);\n                }\n            } else {\n                target.src = NO_IMAGE;\n                dataLoad(target);\n            }\n            imgQue.shift();\n            processImageInQueue();\n        } else {\n            const src = `${CloudUrl}/media/images/no-image.svg`;\n            target.src = src;\n            target.srcset = src;\n            dataLoad(target);\n            imgQue.shift();\n        }\n    }\n};\n\nconst dataLoad = (target)=> target.setAttribute(\"data-load\", \"1\")\n \n\n\n","import React, { PureComponent, Suspense } from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/css\";\nimport { isTagShop } from \"../../../../actions/api\";\nimport Image from \"../../../Themes/Elements/Media/Image\";\nconst ReelVideo = React.lazy(() => import(\"./ReelVideo\"));\n\nconst mediaDimension = JSON.parse(\n  window.localStorage.getItem(\"mediaDimension\")\n);\nexport default class ReelMediaSlider extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mediaSize: {\n        height: mediaDimension != null ? mediaDimension[0] : \"85vh\",\n        width: mediaDimension != null ? mediaDimension[1] : \"85vh\",\n      }\n    }\n  }\n  mediaSize = (mediaSize) => this.props.mediaSizeCallback(mediaSize);\n  render() {\n    const { Post, wallID, size, onUpdateProdImgIdx } = this.props;\n    const muted = false;\n    const pagination = {\n      clickable: true,\n      bulletClass: `tb_rp_bullet`,\n    };\n\n    return (\n      <div className=\"tb_rp_media_holder\">\n        <Swiper\n          ref={this.splideRef}\n          direction=\"horizontal\"\n          passiveListeners={true}\n          pagination={pagination}\n          onSlideChange={(swiper) => onUpdateProdImgIdx(swiper.activeIndex)}\n        >\n          { Post.mediaList.map((imageItem, index) => (\n            <SwiperSlide key={index}>\n              {({ isActive }) => (\n                <>\n                  {[2, 4].includes(imageItem.type) || !isActive ? ( \n                    <Image\n                        ImageClass=\"tb_rp_s_image\"\n                        Post={Post}\n                        mediaOnly={imageItem}\n                        size={size}\n                        hotspot={isTagShop}\n                      />\n                    \n                  ) : [3, 5].includes(imageItem.type) ? (\n                    <Suspense fallback={<></>}>\n                      <ReelVideo\n                        VideoClass=\"tb_rp_video\"\n                        media={imageItem.video.full}\n                        mediaPoster={imageItem.image.original}\n                        Post={{...Post, media : { video : imageItem.video , image : imageItem.image }}}\n                        wallID={wallID}\n                        size={size}\n                        isCover={true}\n                        controls={false}\n                        autoPlay={isActive}\n                        muted={muted}\n                        index={index}\n                      />\n                    </Suspense>\n                  ) : null}\n                </>\n              )}\n            </SwiperSlide>\n          ))}\n        </Swiper>\n      </div>\n    );\n  }\n}\n","import React, { memo, useCallback, useMemo, useState } from \"react\";\nimport { connect } from 'react-redux';\nimport { createPortal } from \"react-dom\";\nimport { Tooltip } from 'react-tooltip';\nimport \"./scss/Hotspot.scss\"; \nimport { generateUniqueString } from \"../../../../utils/Common\";\nimport { themePostTracking } from \"../../../../actions/moredataAction\";\n\n// Memoized components to prevent unnecessary re-renders\nconst TooltipContent = memo(({ item }) => {\n  const hasDiscount = item.discount > 0 && item.discount !== item.price;\n  const displayPrice = item.discount > 0 ? item.discount : item.price;\n  \n  return (\n    <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"tb_tooltip_wrap\">\n      <div className=\"tb_p_tooltip_title\">{item.title}</div>\n      {hasDiscount && (\n        <div className=\"tb_p_tooltip_price tb_price_disabled\">\n          {item.currency}{item.price}\n        </div>\n      )}\n      {(item.price > 0 || item.discount > 0) && (\n        <div className=\"tb_p_tooltip_price\">\n          {item.currency}{displayPrice}\n        </div>\n      )}\n    </a>\n  );\n});\n\nconst HotspotComponent = ({ products, appData, Post }) => {\n  const [activeIndex, setActiveIndex] = useState(null);\n  \n  // Memoized hotspot configuration\n  const hotspotConfig = useMemo(() => (\n    appData?.wall?.ProductSetting?.Hotspot || {}\n  ), [appData]);\n\n  // Stable event handlers\n  const handleTracking = useCallback((product) => {\n    if (appData?.wall) {\n      themePostTracking({\n      });\n    }\n  }, [appData, Post]);\n\n  const handleHotspotClick = useCallback((event, item) => {\n    event.stopPropagation();\n    handleTracking(item);\n    window.open(item.url, '_blank');\n  }, [handleTracking]);\n\n  if (!hotspotConfig?.status) return null;\n\n  return products.map((item, index) => {\n    const tooltipId = `hotspot-${item.id}-${generateUniqueString()}`;\n    const isActive = activeIndex === index;\n    \n    return (\n      <div key={`${item.id}-${index}`} id={tooltipId} className={`tb_hotspot_dot${isActive ? ' tb_hotspot_active_' : ''}`} role=\"button\" style={{ \n          top: item.hotspot.top, \n          left: item.hotspot.left \n        }}\n        onMouseEnter={() => setActiveIndex(index)} onMouseLeave={() => setActiveIndex(null)} onClick={(e) => handleHotspotClick(e, item)} data-tooltip-offset={7} >\n        <div className={`tb_hotspot__ ${hotspotConfig.type === 0 ? 'tb_hotspot_ani__' : ''}`}>\n          {index + 1}\n        </div>\n        \n        {createPortal(\n          <Tooltip className=\"tb_pro_tooltip\" anchorSelect={`#${tooltipId}`} clickable >\n            <TooltipContent item={item} />\n          </Tooltip>,\n          document.body\n        )}\n      </div>\n    );\n  });\n};\n\n// Memoize the main component\nconst MemoizedHotspot = memo(HotspotComponent);\n\n// Optimized Redux connection\nconst mapState = (state) => ({ appData: state.appData });\nexport default connect(mapState)(MemoizedHotspot);","import React, { PureComponent, Suspense } from \"react\"; \nimport { GET_IMAGE_SIZE } from '../../../../utils/Common'\nimport { CloudUrl } from \"../../../../constants\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport { POPUP_IMAGE_RENEW_REQUEST } from \"../../../../actions/ImageRenewAction\";\nimport Hotspot from '../Hotspot/Hotspot';\nexport default class Image extends PureComponent {\n    constructor(props) {\n        super(props);\n        const { mediaOnly, Post } = props;\n        this.state = {\n            isVisible: !this.props.observer, // Tracks if the image is in the viewport\n            height: mediaOnly?.height || Post?.media?.height || 0,\n            width:  mediaOnly?.width || Post?.media?.width || 0,\n            currentHeight: 0,\n            currentWidth: 0,\n        };\n        this.mediaRef = React.createRef();\n        this.observer = null\n    }\n    \n\n    componentDidMount() {\n        this._isMounted = true;\n        // Use requestAnimationFrame to ensure DOM is fully rendered\n        requestAnimationFrame(() => {\n            this.updateMediaDimensions();\n            this.mediaSizeCalc();\n        });\n\n        // IntersectionObserver for visibility\n        this.observer = new IntersectionObserver(\n            ([entry]) => {\n                if (entry.isIntersecting) {\n                    this.setState({ isVisible: true});\n                    this.observer.disconnect(); // Stop observing after the element becomes visible\n                }\n            },\n            { threshold: 0.01 } // Adjust threshold as needed\n        );\n\n        if (this.mediaRef.current) {\n            this.observer.observe(this.mediaRef.current);\n        }\n\n    }\n    \n        componentWillUnmount() {\n            this._isMounted = false;\n        if (this.observer) {\n            this.observer.disconnect();\n        }\n    }\n\n\n    updateMediaDimensions = () => {\n        if (this.mediaRef.current) {\n            const { offsetHeight, offsetWidth } = this.mediaRef.current;\n            this.setState({\n                currentHeight: offsetHeight,\n                currentWidth: offsetWidth,\n            });\n        }\n    };\n    mediaSizeCalc = async () => {\n        const { Post, mediaOnly } = this.props\n        const media = mediaOnly ? mediaOnly : Post.media;\n        if (!media?.height && !media?.width) {\n            try {\n                const { width, height } = await GET_IMAGE_SIZE(media?.image?.small);\n                if (this._isMounted) {\n                    this.setState({\n                        height: height,\n                        width: width,\n                    });\n                }\n            } catch (error) {\n                if (this._isMounted) {\n                    this.setState({\n                        height: 300,\n                        width: 300,\n                    });\n                }\n            }\n        }\n    }\n\n    render() { \n        const { ImageClass, Post, hotspot, size, blurBG, ProductSetting, mediaOnly } = this.props;\n        const { id, link, products } = Post\n        const media = mediaOnly ? mediaOnly : Post?.media;\n        const { isVisible, height, width, currentWidth, currentHeight } = this.state;\n\n        const paddingSize = size || (height * 100) / width;\n\n        const imageStyle = {\n            paddingBottom: paddingSize === 1 ? null : `${paddingSize}%`};\n\n        const blurImgStyle = {\n            backgroundImage: isVisible ? `url(${media?.image?.small})` : null\n        };\n\n        const newWidth = width > height ? '100%' : `${(width / height) * 100}%`;\n        const newHeight = width > height ? `${(height / width) * 100}%` : '100%';\n\n        const isHotspot = Post.isProduct && hotspot;\n        const hotspotImgStyle = { width: isHotspot && size ? newWidth : null, height: isHotspot && size ? newHeight : null };\n\n        return (\n            <div className={`${ImageClass}_wrap_`} style={imageStyle} ref={this.mediaRef}> \n                {isHotspot && blurBG ? <div className=\"tb_blur_bg_\" style={blurImgStyle}></div> : null}\n                <div className={`${ImageClass}_wrap_in`} style={hotspotImgStyle}>\n                    {isHotspot ?\n                    <Hotspot products={products} ProductSetting={ProductSetting} hotspot={Post.hotspot} dataPost={Post} />\n                    : null}\n\n                    { isVisible ?\n                        <img\n                            key={id}\n                            className={`${ImageClass} tb_media-${id}`}\n                            src={media?.image?.small}\n                            srcSet={`${media?.image?.small} 1x, ${media?.image?.large} 2x`}\n                            sizes={`${currentWidth}px`}\n                            loading={isVisible ? \"eager\" : \"lazy\"}\n                            decoding=\"async\"\n                            fetchPriority={isVisible ? \"high\" : \"low\"}\n                            data-id={id}\n                            height={currentHeight}\n                            width={currentWidth}\n                            data-height={height}\n                            data-width={width}\n                            data-link={link}\n                            onLoad={this.onLoad}\n                            onError={(e) => {\n                                e.target.src = `${CloudUrl}/media/error/no-image.svg`\n                                e.target.srcset = `${CloudUrl}/media/error/no-image.svg`\n                                POPUP_IMAGE_RENEW_REQUEST(e)\n                            }}\n                            alt={media?.title}\n                            title={ReactHtmlParser(media?.title)}\n                        />\n                        : null} \n                </div>\n            </div>\n        );\n    }\n}"],"names":["imgQue","POPUP_IMAGE_RENEW_REQUEST","event","persist","target","network","itemId","themeId","dataset","includes","push","element","document","querySelector","style","display","length","processImageInQueue","async","_imgQue$","postData","wall","store","getState","appData","Object","keys","User","Wall","ownerId","id","wallId","isTagShop","filterId","load","imgTargets","res","completeDataObject","values","filter","val","_res$6","isValid","some","item","url","fetch","then","ok","catch","checkImageUrl","postFileNew","src","dataFormatted","formatPostData","data","_res$","_res$2","_res$3","_res$4","_res$5","UserPlan","table_name","db_table","feedId","type","link","postFile","mediaFile","postId","HttpClient","post","UPDATE_STATUS","headers","isUpdateFrom","baseUrl","isTagbox","tbox","media","NO_IMAGE","dataLoad","shift","CloudUrl","srcset","setAttribute","ReelVideo","React","mediaDimension","JSON","parse","window","localStorage","getItem","ReelMediaSlider","PureComponent","constructor","props","super","mediaSize","this","mediaSizeCallback","state","height","width","render","Post","wallID","size","onUpdateProdImgIdx","pagination","clickable","bulletClass","_jsx","className","children","Swiper","ref","splideRef","direction","passiveListeners","onSlideChange","swiper","activeIndex","mediaList","map","imageItem","index","SwiperSlide","_ref","isActive","_Fragment","Image","ImageClass","mediaOnly","hotspot","Suspense","fallback","VideoClass","video","full","mediaPoster","image","original","isCover","controls","autoPlay","muted","TooltipContent","memo","hasDiscount","discount","price","displayPrice","_jsxs","href","rel","title","currency","HotspotComponent","_ref2","products","setActiveIndex","useState","hotspotConfig","useMemo","_appData$wall","_appData$wall$Product","ProductSetting","Hotspot","handleTracking","useCallback","product","themePostTracking","handleHotspotClick","stopPropagation","open","status","tooltipId","generateUniqueString","role","top","left","onMouseEnter","onMouseLeave","onClick","e","createPortal","Tooltip","anchorSelect","body","MemoizedHotspot","connect","_Post$media","_Post$media2","updateMediaDimensions","mediaRef","current","offsetHeight","offsetWidth","setState","currentHeight","currentWidth","mediaSizeCalc","_media$image","GET_IMAGE_SIZE","small","_isMounted","error","isVisible","observer","componentDidMount","requestAnimationFrame","IntersectionObserver","entry","isIntersecting","disconnect","threshold","observe","componentWillUnmount","_media$image2","_media$image3","_media$image4","_media$image5","blurBG","paddingSize","imageStyle","paddingBottom","blurImgStyle","backgroundImage","newWidth","newHeight","isHotspot","isProduct","hotspotImgStyle","dataPost","srcSet","large","sizes","loading","decoding","fetchPriority","onLoad","onError","alt","ReactHtmlParser"],"sourceRoot":""}