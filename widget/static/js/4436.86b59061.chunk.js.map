{"version":3,"file":"static/js/4436.86b59061.chunk.js","mappings":"mMAEe,MAAMA,UAAeC,EAAAA,cAElCC,MAAAA,GACE,MAAM,OAAEC,EAAM,YAAEC,EAAW,UAAEC,EAAS,KAAEC,EAAI,OAAEC,GAAWC,KAAKC,MAE9D,OAAOC,EAAAA,EAAAA,KAAA,OAAyBC,UAAWP,EAAaQ,MAAO,CAAEC,SAAuB,GAAbR,EAAiB,UAAY,IAAKS,SAClGP,GAASG,EAAAA,EAAAA,KAAA,OAAKC,UAAW,GAAGP,MAAiBW,IAAKZ,EAAOa,QAAS,aAAW,SAASC,IAAKd,EAAOe,KAAMC,MAAOb,GAAc,GAAIc,OAAQd,GAAc,GACxJe,QAAUC,IACR,MAAMC,GAAeC,EAAAA,EAAAA,IAAkBnB,GACjCoB,EAA6B,WAAhBF,EAA4B,MAAQA,EAAaG,QAAQ,IAAK,IACjFJ,EAAEK,OAAOZ,IAAMZ,EAAOyB,SAAWzB,EAAOyB,SAAW,oCAAoCzB,EAAOe,KAAKQ,QAAQ,MAAO,kBAAkBD,sBAA+B,IAChK,MANEI,KAAKC,SAQxB,E,sNCbIC,EAAc,IAAIC,IASlBC,EAA+C,IAAIC,QACrDC,EAAS,EAETC,OAAwC,EA6BrC,SAASC,EAAYC,GAC1B,OAAOC,OAAOC,KAAKF,GAChBG,OACAC,QACEC,QAA2D,IAAnDL,EAAQK,KAElBC,KAAKD,IACJ,MAAO,GAAGA,KACA,SAARA,GArBWE,EAsBGP,EAAQO,KArBvBA,GACDZ,EAAQa,IAAID,KAChBV,GAAU,EACVF,EAAQc,IAAIF,EAAMV,EAAOa,aAFKf,EAAQgB,IAAIJ,IADxB,KAsBRP,EAAQK,KAvBpB,IAAmBE,CAwBX,IAEHG,UACL,CA4DO,SAASE,EACdC,EACAC,GAGA,IAFAd,EAAAe,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAoC,CAAC,EACrCG,EAAAH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAiBjB,EAEjB,GACyC,qBAAhCqB,OAAOC,2BACK,IAAnBF,EACA,CACA,MAAMG,EAASR,EAAQS,wBAWvB,OAVAR,EAASI,EAAgB,CACvBK,eAAgBL,EAChB7B,OAAQwB,EACRW,kBAC+B,kBAAtBxB,EAAQyB,UAAyBzB,EAAQyB,UAAY,EAC9DC,KAAM,EACNC,mBAAoBN,EACpBO,iBAAkBP,EAClBQ,WAAYR,IAEP,MAGT,CAEA,MAAM,GAAES,EAAA,SAAIC,EAAA,SAAUC,GApFxB,SAAwBhC,GAEtB,MAAM8B,EAAK/B,EAAYC,GACvB,IAAIiC,EAAWxC,EAAYkB,IAAImB,GAE/B,IAAKG,EAAU,CAEb,MAAMD,EAAW,IAAItC,IAErB,IAAIwC,EAEJ,MAAMH,EAAW,IAAIX,sBAAsBe,IACzCA,EAAQC,SAASC,IAvEvB,IAAAC,EA0EQ,MAAMrE,EACJoE,EAAMd,gBACNW,EAAWK,MAAMd,GAAcY,EAAMb,mBAAqBC,IAGxDzB,EAAQwC,iBAA8C,qBAApBH,EAAMI,YAG1CJ,EAAMI,UAAYxE,GAGpB,OAAAqE,EAAAN,EAASrB,IAAI0B,EAAMhD,UAAnBiD,EAA4BF,SAAStB,IACnCA,EAAS7C,EAAQoE,EAAM,GACvB,GACF,GACDrC,GAGHkC,EACEH,EAASG,aACRQ,MAAMC,QAAQ3C,EAAQyB,WACnBzB,EAAQyB,UACR,CAACzB,EAAQyB,WAAa,IAE5BQ,EAAW,CACTH,KACAC,WACAC,YAGFvC,EAAYgB,IAAIqB,EAAIG,EACtB,CAEA,OAAOA,CACT,CAmCqCW,CAAe5C,GAG5C6C,EAAYb,EAASrB,IAAIE,IAAY,GAQ3C,OAPKmB,EAASxB,IAAIK,IAChBmB,EAASvB,IAAII,EAASgC,GAGxBA,EAAUC,KAAKhC,GACfiB,EAASnB,QAAQC,GAEV,WAELgC,EAAUE,OAAOF,EAAUG,QAAQlC,GAAW,GAErB,IAArB+B,EAAU7B,SAEZgB,EAASiB,OAAOpC,GAChBkB,EAASmB,UAAUrC,IAGC,IAAlBmB,EAAShE,OAEX+D,EAASoB,aACT1D,EAAYwD,OAAOnB,GAEvB,CACF,CC1GkCsB,EAAAA,U,0BC1DlC,MAQA,EARsBC,IAAmB,IAAlB,SAAE7E,GAAU6E,EAC5B,MAAM,IAAEC,EAAG,OAAErF,GC4Bb,WAW0C,IAXvB,UACxBwD,EAAA,MACA8B,EAAA,gBACAf,EAAA,WACAgB,EAAAjD,KACAA,EAAA,YACAkD,EAAA,KACAC,EAAA,cACAC,EAAA,eACAzC,EAAA,SACA0C,GACF7C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAyB,CAAC,EA9C1B,IAAAuB,EA+CE,MAAOgB,EAAKO,GAAgBC,EAAAA,SAAyB,MAC/ChD,EAAiBgD,EAAAA,OAAwCF,IACxDG,EAAOC,GAAkBF,EAAAA,SAAgB,CAC9C7F,SAAU0F,EACVtB,WAAO,IAKTvB,EAASmD,QAAUL,EAGbE,EAAAA,WACJ,KAEE,GAAIJ,IAASJ,EAAK,OAElB,IAAIJ,EA4BJ,OA3BAA,EAAYtC,EACV0C,GACA,CAACrF,EAAQoE,KACP2B,EAAS,CACP/F,SACAoE,UAEEvB,EAASmD,SAASnD,EAASmD,QAAQhG,EAAQoE,GAE3CA,EAAMd,gBAAkBkC,GAAeP,IAEzCA,IACAA,OAAY,EACd,GAEF,CACE3C,OACAiD,aACA/B,YAEAe,kBAEAe,SAEFrC,GAGK,KACDgC,GACFA,GACF,CACD,GAIH,CAEER,MAAMC,QAAQlB,GAAaA,EAAUf,WAAae,EAClD6B,EACA/C,EACAiD,EACAC,EACAC,EACAlB,EACAtB,EACAqC,IAIJ,MAAMW,EAAc,OAAA5B,EAAAyB,EAAM1B,YAAN,EAAAC,EAAajD,OAC3B8E,EAA4BL,EAAAA,YAA4B,GAE3DR,IACDY,GACCT,GACAC,GACDS,EAAoBF,UAAYC,IAIhCC,EAAoBF,QAAUC,EAC9BF,EAAS,CACP/F,SAAU0F,EACVtB,WAAO,KAIX,MAAM+B,EAAS,CAACP,EAAQE,EAAM9F,OAAQ8F,EAAM1B,OAO5C,OAJA+B,EAAOd,IAAMc,EAAO,GACpBA,EAAOnG,OAASmG,EAAO,GACvBA,EAAO/B,MAAQ+B,EAAO,GAEfA,CACT,CDrI+BC,CAAU,CAC3BZ,aAAa,EACbhC,UAAW,MAGlB,OADI6C,EAAAA,KAAWC,EAAAA,EAAAA,IAAwBjB,GAC/B9E,EAAS,CAAE8E,MAAKrF,UAAS,C,qFEXxC,MAKA,EALkBE,IAChB,MAAM,SAAEqG,GAAarG,EACrB,OAAOC,EAAAA,EAAAA,KAAA,OAAKC,UAAWmG,EAAShG,SAAC,OAAS,C,6GCE5C,MAAMiG,EAAgBA,CAACC,EAAWC,EAAQC,EAAMC,KAC9C,MAAMC,EAAU,CACdC,KAAM,iDAAgDC,EAAAA,EAAAA,IAAcL,KACpEM,QAAS,iDAAgDD,EAAAA,EAAAA,IAAcL,KACvEO,QAAS,gDAA+CF,EAAAA,EAAAA,IAAcL,MAExE,OAAqB,IAAdD,EAAkBI,EAAQD,GAAUD,CAAI,EAG3CO,EAAY9B,IAA0D,IAAzD,MAAE+B,EAAK,UAAEC,EAAS,KAAEC,EAAI,MAAEC,EAAK,OAAEC,EAAS,EAAC,KAAEC,GAAMpC,EACpE,MAAMqC,EAAUH,EAAQ,GAAII,EAAAA,EAAAA,IAAWJ,GAAS,GAChD,OAAOnH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAyBuH,KAAK,WAAW,uBAAqB,2BAA0BpH,UAC5GqH,EAAAA,EAAAA,MAAA,OAAKC,QAASC,IAAWA,EAAMC,kBAAmB7E,OAAO8E,KAAKZ,EAAW,SAAS,EAAKhH,UAAW,yDAAyDmH,IAAU,aAAY,GAAGJ,UAAcK,WAAcC,IAAWE,KAAK,SAASM,SAAS,IAAG1H,SAAA,EACnPJ,EAAAA,EAAAA,KAAA,OAAKC,UAAW,sCAAsCiH,IAAO9G,SAAC,OAC7DkH,GAAUtH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BG,SAAEkH,IAAe,OAEpE,EAGO,MAAMS,UAAqBxI,EAAAA,cACxCyI,iBAAAA,GACE,IAAK,IAADC,EACF,MAAM,KAAEC,GAASpI,KAAKC,MAChBoI,EAAiB,+BAAmC,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMxE,KACtB,QAAtCuE,EAAAG,SAASC,cAAcF,UAAe,IAAAF,GAAtCA,EAAwCK,iBAAiB,WAAW,SAAUX,GAC1D,UAAdA,EAAM1F,KAAiC,MAAd0F,EAAM1F,MACjC0F,EAAMY,iBACNzI,KAAK0I,QAET,GACF,CAAE,MAAO5H,GACP6H,QAAQC,IAAI9H,EACd,CACF,CAEApB,MAAAA,GACE,MAAM,KAAE0I,EAAI,UAAES,EAAS,YAAEC,GAAgB9I,KAAKC,OACxC,KAAE8I,EAAI,MAAE3I,GAAUyI,EAClBG,EAAY,CAAEC,MAAQF,EAAKG,QAAuB9I,EAAM6I,MAAnBF,EAAKE,OAE1CzC,EAAY4B,EAAKvI,WACjB,QAAEkH,EAAO,KAAEF,GAASuB,EAAKf,MACzB8B,EAAW,CAAC,EAAG,GAAI,GAAGC,SAAS5C,GAAa,OAAS,gBACrD6C,EAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,IAAID,SAAS5C,GACrD8C,GAAqB,CAAC,GAAI,IAAIF,SAAS5C,GACvC+C,GAAcC,EAAAA,EAAAA,IAAiBhD,GAErC,MAAQ,CAAC,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAAI4C,SAAS5C,GASpD,MARFtG,EAAAA,EAAAA,KAAA,OAAKC,UAAW2I,EAAYxI,UAC1BqH,EAAAA,EAAAA,MAAA,OAAKxH,UAAU,qBAAqBuH,KAAK,OAAMpH,SAAA,CAC5C+I,IAAkBnJ,EAAAA,EAAAA,KAAC+G,EAAS,CAACK,OAAQc,EAAKxE,GAAIsD,MAAOqC,EAAapC,UAAWZ,EAAcC,EAAW4B,EAAKqB,OAAQrB,EAAKsB,KAAM,QAAStC,KAAM+B,EAAUH,UAAWA,EAAW3B,MAAOR,EAAMU,KAAK,SAC/L+B,IAAqBpJ,EAAAA,EAAAA,KAAC+G,EAAS,CAACK,OAAQc,EAAKxE,GAAIsD,MAAOqC,EAAapC,UAAWZ,EAAcC,EAAW4B,EAAKqB,OAAQrB,EAAKsB,KAAM,WAAYtC,KAAM,UAAW4B,UAAWA,EAAW3B,MAAON,EAASQ,KAAK,YAC3L,IAAdf,IAAmBtG,EAAAA,EAAAA,KAAC+G,EAAS,CAACK,OAAQc,EAAKxE,GAAIsD,MAAOqC,EAAapC,UAAWZ,EAAcC,EAAW4B,EAAKqB,OAAQrB,EAAKsB,KAAM,WAAYtC,KAAM,UAAW4B,UAAWA,EAAW3B,MAAON,EAASQ,KAAK,aACxMrH,EAAAA,EAAAA,KAAC+G,EAAS,CAACC,MAAOqC,EAAajC,OAAQc,EAAKxE,GAAIuD,UAAWiB,EAAKsB,KAAMtC,KAAM,MAAO4B,UAAWA,EAAW3B,MAAO,EAAGE,KAAK,aAIhI,E,kGC5DF,MAAMoC,EAAQ1J,IACZ,MAAM,UAAE2J,EAAS,UAAEC,GAAc5J,EACjC,OAAOC,EAAAA,EAAAA,KAAA,OAAKC,UAAW0J,EAAWnC,KAAK,SAAS,aAAY,mBAAkBoC,EAAAA,EAAAA,IAAQF,KAAatJ,UAAEwJ,EAAAA,EAAAA,IAAQF,IAAiB,EAGhI,GAAeG,EAAAA,EAAAA,MAAKJ,E,mKCFlB,MAiBA,EAjBcxE,IAAgE,IAA/D,KAAEiD,EAAI,UAAE4B,EAAS,WAAEC,EAAU,UAAEpB,EAAS,MAAEqB,EAAK,OAAEnK,GAAQoF,EACtE,MAAMgF,KAAY,CAAC,EAAE,GAAGf,SAAShB,EAAKb,OAAiC,GAAvB0C,EAAWE,UACrDrK,GAAgC,GAAzBkK,EAAUI,aAAoBC,EAAAA,KAAWxB,EAAUzI,MAAMkK,MAAQzB,EAAUzI,MAAMkK,MAAc,IACtGC,GAAYnC,EAAKoC,QACvB,OACE7C,EAAAA,EAAAA,MAAA,OAAKxH,UAAU,mBAAkBG,SAAA,CAC9BiK,GACCrK,EAAAA,EAAAA,KAACuK,EAAAA,QAAS,CAACrC,KAAMA,EAAMsC,UAAU,mBAAmBC,KAAMJ,EAAWK,UAAU,EAAOC,UAAWV,IAC/F,KACHA,GACCjK,EAAAA,EAAAA,KAAC4K,EAAAA,EAAK,CAACC,WAAW,cAAc3C,KAAMA,EAAMtI,KAAMA,EAAMkL,SAAS,EAAMC,UAAU,EAAOd,SAAUA,EAAUe,OAAO,EAAMrH,UAAU,EAAOqG,MAAOA,EAAOnK,OAAQA,KAEhKG,EAAAA,EAAAA,KAACiL,EAAAA,EAAK,CAACC,WAAW,cAAchD,KAAMA,EAAMtI,KAAMA,EAAM0K,SAAS,EAAMa,OAAQjF,EAAAA,GAAWvC,UAAU,EAAOqG,MAAOA,EAAOnK,OAAQA,MAE/H,E,iFCdZ,MAwBA,EAxBsBoF,IAAkC,IAAjC,KAAEiD,EAAI,UAAES,EAAS,OAAE9I,GAAQoF,EAChD,MAAM,OAAExF,EAAM,UAAEE,GAAcuI,EACxBkD,EAAW3L,EAAO2L,UAAW3L,EAAO2L,SAASxI,OAAS,EAAI,IAAInD,EAAO2L,WAAkB,GACvFC,KAAc1C,EAAUlJ,OAAO6L,QAAW7L,EAAO8L,aACjDC,KAAkB7C,EAAUlJ,OAAO6L,SAAU3C,EAAU8C,YAAehM,EAAO8L,aAC7EG,EAA6B,OAAd/L,GAAoC,KAAdA,EAC3C,OAAO8H,EAAAA,EAAAA,MAAA,OAAKxH,UAAU,uBAAuB,aAAW,iBAAiB,uBAAqB,sBAAqBG,SAAA,CAChHiL,GAAarL,EAAAA,EAAAA,KAACV,EAAAA,QAAM,CAACqM,QAASzD,EAAKyD,QAASlM,OAAQA,EAAQC,YAAa,uBAAwBE,KAAM,GAAIC,OAAQA,IAAa,IACjI4H,EAAAA,EAAAA,MAAA,OAAKxH,UAAU,oBAAmBG,SAAA,CAC/BiL,GAAarL,EAAAA,EAAAA,KAAA,OAAKC,UAAW,+BAA+B0I,EAAUlJ,OAAOmM,UAAUxL,SAAEX,EAAOe,OAAc,IAC9GiH,EAAAA,EAAAA,MAAA,OAAKxH,UAAU,kBAAiBG,SAAA,CAC9BiL,GAAarL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBG,SAAEgL,IAAkB,GAChEI,GAAiBxL,EAAAA,EAAAA,KAAC6L,EAAAA,QAAQ,CAACzF,SAAU,mBAAuB,GAC5DuC,EAAU8C,YACXzL,EAAAA,EAAAA,KAACyJ,EAAAA,QAAI,CAACC,UAAWxB,EAAKwB,UAAWC,UAAW,yBAAyBhB,EAAUlJ,OAAOmM,YAAgB,SAGzGF,GACC1L,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeG,UAC5BJ,EAAAA,EAAAA,KAAC8L,EAAAA,QAAO,CAACC,aAAc,mBAAoBpM,UAAWA,EAAWmJ,UAAWH,EAAUE,SAEtF,OACA,E,qCCbO,MAAMmD,UAAazM,EAAAA,cAChC0M,WAAAA,CAAYlM,GACVmM,MAAMnM,GAAM,KASdoM,WAAajH,IACXpF,KAAK8F,SAAS,CACZlF,OAAQwE,GACR,EAEH,KAEDkH,iBAAmBlH,IACjBpF,KAAK8F,SAAS,CACZyG,aAAcnH,GACd,EACH,KAEDoH,aAAgB3E,IACdA,EAAMC,kBACN9H,KAAK8F,SAAS,CACZ2G,YAAazM,KAAK6F,MAAM4G,YACxB,EAzBFzM,KAAK6F,MAAQ,CACX4G,YAAY,EACZF,aAAc,EACd3L,OAAQ,GAEVZ,KAAKwM,aAAexM,KAAKwM,aAAaE,KAAK1M,KAC7C,CAuBAN,MAAAA,GACE,MAAM,KAAE0I,EAAI,UAAES,EAAS,MAAEqB,EAAK,UAAEF,EAAS,aAAE2C,EAAY,WAAE1C,GAAejK,KAAKC,MACvE2M,EAA0B,IAAdxE,EAAKb,KACjBsF,KAASzE,EAAKyE,QAAWzE,EAAKyE,OAAS,GACvCC,EAAgB1E,EAAKyE,OAAS,EAAK,uBAAyB,gBAC5DE,EAA8B,IAAd3E,EAAKb,KAAc,kBAAoB,GACvDyF,EAA8B,IAAd5E,EAAKb,MAAe0F,OAAO7E,EAAK8E,SAASpK,OAAS,GAAM+F,EAAUzI,MAAM+M,eAAkB,wBAA0B,GACpIC,IAAYhF,EAAKiF,IAAI7B,OACrB8B,EAAmBzE,EAAUqE,QAAQK,aAAcC,EAAAA,EAAAA,IAAgBpF,EAAK8E,QAAQO,KAzC9D,KAyC2FrF,EAAK8E,QAAQO,KAEhI,OAAOvN,EAAAA,EAAAA,KAACwN,EAAAA,EAAa,CAAApN,SAChB6E,IAAA,IAAC,IAAEC,EAAG,OAAErF,GAAQoF,EAAA,OACfjF,EAAAA,EAAAA,KAAA,OAAK0D,GAAI,YAAYwE,EAAKxE,KAAMzD,UAAU,qBAAqBiF,IAAKA,EAAKhF,MAAO,CAAEuN,QAAS9E,EAAUzI,MAAMuN,QAAU,GAAKjG,KAAK,UAAU,aAAY,QAAQkG,SAAS1D,GAAS,KAAKoD,IAAkBhN,UACpMqH,EAAAA,EAAAA,MAAA,OAAKxH,UAAU,gBAAiBuH,KAAK,SAAS,aAAW,QAAQM,SAAU,EAAE1H,SAAA,CACxE8H,EAAKyF,MAAMrC,QAAStL,EAAAA,EAAAA,KAAC4N,EAAAA,QAAY,CAACD,MAAOzF,EAAKyF,MAAOE,WAAY,wBAAyB3F,KAAMA,EAAM4B,UAAWA,IAAe,GAChI4C,GAAY1M,EAAAA,EAAAA,KAAC8N,EAAK,CAAC5F,KAAMA,EAAMS,UAAWA,EAAWmB,UAAWA,EAAWC,WAAYA,EAAYC,MAAOA,EAAOnK,OAAQA,IACxH,MACJ4H,EAAAA,EAAAA,MAAA,OAAKxH,UAAW,yBAAyB4M,IAAezM,SAAA,EACtDJ,EAAAA,EAAAA,KAAC+N,EAAa,CAAC7F,KAAMA,EAAMS,UAAWA,EAAW9I,OAAQA,IACxDqN,GAAYlN,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAiByH,QAAU9G,IAAQA,EAAEgH,iBAAiB,EAAGxH,UACnFJ,EAAAA,EAAAA,KAACgO,EAAAA,QAAS,CAACC,SAAU,qBAAsB/F,KAAMA,EAAMuE,aAAcA,MAErE,GACDE,GAAS3M,EAAAA,EAAAA,KAAA,OAAKC,UAAW,iBAAiBG,UAC3CJ,EAAAA,EAAAA,KAACkO,EAAAA,EAAM,CAACvB,OAAQzE,EAAKyE,OAAQhN,UAAWuI,EAAKvI,UAAWwO,QAASrE,EAAUpG,OAClE,KACPiF,EAAUqE,QAAQ1B,QAAwB,GAAbpD,EAAKb,MAClCrH,EAAAA,EAAAA,KAAA,OAAKC,UAAW,0BAA0BG,UACtCJ,EAAAA,EAAAA,KAACoO,EAAAA,QAAW,CAACxB,aAAc,GAAGA,IAAeE,IAAgB5E,KAAMA,EAAM8E,QAASI,EAAiBzE,UAAWA,EAAW0F,aAAcnG,EAAK8E,QAAQsB,UAEtJ,QAELpI,EAAAA,GAAcyC,EAAU4F,cACzBvO,EAAAA,EAAAA,KAAC+H,EAAAA,QAAY,CAACG,KAAMA,EAAMS,UAAWA,EAAWC,YAAa,0BAC7D,KAAQ,OAEN,GAGd,E,mCC1EF,MAAM4F,UAAyBC,EAAAA,UAC7BxC,WAAAA,CAAYlM,GACVmM,MAAMnM,GAAM,KAKd4F,MAAQ,CACN+I,YAAatG,SAASuG,eAAeC,EAAAA,KAAcxG,SAASuG,eAAeC,EAAAA,IAAWC,YAAczG,SAASuG,eAAeC,EAAAA,IAAWC,YAAc9L,OAAO+L,WAC5JC,aAAc,KACf,KAKDC,aAAe,KACb,MAAM,SAAEC,GAAanP,KAAKC,MAAMkP,SAChCnP,KAAK8F,SAAS,CACZ8I,YAAaO,GAAY7G,SAASuG,eAAeM,GAAY7G,SAASuG,eAAeM,GAAUJ,YAAczG,SAASuG,eAAeC,EAAAA,KAAcxG,SAASuG,eAAeC,EAAAA,IAAWC,YAAczG,SAASuG,eAAeC,EAAAA,IAAWC,YAAc9L,OAAO+L,YAC5P,EACH,KAEDI,YAAc,KACZ,MAAM,WAAEC,EAAU,UAAErF,EAAS,WAAEC,EAAU,UAAEqF,EAAS,YAAEC,EAAW,SAAEC,GAAaxP,KAAKC,OACpFD,KAAK6F,MAAM4J,UAAYzP,KAAK0P,WAAW,GACpCH,GACFC,EACEpJ,EAAAA,GAAY4D,EAAU2F,MAAQ3F,EAAU4F,OACxCvO,KAAKwO,MAAMC,KAAKC,MAAQ,KACxB9F,EAAW+F,WACXX,EAAW7I,UACX6I,EAAWY,MACXX,EACAD,EAAWa,YAEf,EACA,KAqDFR,WAAc5O,IACRd,KAAK6F,MAAM4J,WACbzP,KAAK8F,SAAS,CAAE2J,UAAW,IAC3BU,YAAW,IAAMnQ,KAAKC,MAAMmQ,gBAAoB,IAAFtP,GAChD,EACH,KAECuP,eAAiBxI,IACf,IACE,MAAM,WAAEoC,GAAejK,KAAKC,MAC5B,GAAkC,GAA9BgK,EAAWqG,MAAMC,UAAgB,CAEnC,IADgB,CAAC,QAAS,YAAYnH,SAASvB,EAAM1G,OAAOqP,UAC7B,UAAf3I,EAAM4I,KAAkB,CACtC,MAAM,SAAEC,GAAa1Q,KAAKC,MAC1B4H,EAAMY,iBACN,IAAIkI,EAAW3Q,KAAK4Q,UAAUF,GAAUG,OAAOC,WAAWH,SACtDA,EAASI,WAAYJ,EAASK,OAC7BL,EAASM,OAChB,CACF,CACF,CACA,MAAOC,GACP,GACD,KAIDC,WAAa,KAEXhB,YAAW,KACT,IAAIiB,EAAe9I,SAASC,cAAc,iBACtC8I,EAAW/I,SAASC,cAAc,kBAAkB+I,YACxD,MAAMC,EAAejJ,SAASkJ,iBAAiB,6BAA6B1O,OAEtE2O,EADYnJ,SAASC,cAAc,uCACnBmJ,aAAa,cAAcC,UAAU,EAAG,GACxDC,EAAWC,OAAOJ,IAAQF,EAAe,GAAKA,EAChDK,EAAW,GACbR,EAAahR,MAAM0R,WAAa,UAChCV,EAAahR,MAAM2R,UAAY,eAAgBH,EAAWP,QAE1DD,EAAahR,MAAM2R,UAAY,iBACjC,GACC,IAAI,EACR,KAcDC,iBAAoBnB,IAElB,MAAM,WAAE5G,GAAejK,KAAKC,MACtBgS,EAAmBhI,EAAWgI,iBASpC,GAPApB,EAAOqB,GAAG,QAAQ,KACflS,KAAKmS,YAAa,GACjBnS,KAAK6F,MAAM4J,UAAYzP,KAAK0P,WAAW,EAAE,IAG7CmB,EAAOqB,GAAG,QAAQ,MAASlS,KAAK6F,MAAM4J,WAAazP,KAAKmS,YAAcnS,KAAK0P,WAAW,EAAE,IAEhE,GAApBuC,EAAuB,CACzB,MAAMG,EAAevB,EAAO3G,MACR2G,EAAO/N,OAETsP,IADFvB,EAAW,GAAEwB,SACerS,KAAKoP,aACnD,GAhKApP,KAAK6F,MAAQ,CAAE4J,UAAW,GAC1BzP,KAAK4Q,UAAY,CAAC,EAClB5Q,KAAKmS,YAAa,CACpB,CAMAG,yBAAAA,GACEtS,KAAKkP,cACP,CAwBAhH,iBAAAA,GACE,IAAIqK,EAASjK,SAASC,cAAc,sBAChC3H,EAAS2R,EAASA,EAAOC,aAAexS,KAAK6F,MAAMjF,OACvDuP,YAAW,KACTnQ,KAAK8F,SAAS,CACZmJ,aAAcrO,IAEhB,MAAM6R,EAAgBnK,SAASkJ,iBAAiB,kBAChDiB,GAAiBA,EAAcvO,SAASvB,IAAaA,EAAQ+P,gBAAgB,eAAe/P,EAAQ+P,gBAAgB,OAAO,GAAE,GAC5H,KACH,MAAM,SAAEC,EAAQ,aAAEC,GAAiB5S,KAAKC,MAExC,GAAI0S,GAA+B,GAAnBA,EAAS7P,OAAa,CAEpC,IAAI+P,EAAgBvK,SAASC,cAAc,uBACvCuK,EAAiBxK,SAASC,cAAc,wBAU5C,SAASwK,IACP5C,YAAW,KACT,IAAI6C,EAAW1K,SAASC,cAAc,iBACtB,MAAZyK,IACFA,EAAS5S,MAAM2R,UAAY,gBAC7B,GACC,IACL,CAhBIc,GAAiBC,IACnBD,EAAczS,MAAQ,eACtB0S,EAAe1S,MAAQ,gBAGzBkI,SAAS2K,KAAKzK,iBAAiB,SAAS,WAAcuK,GAAa,IAEnEA,IAUA9P,OAAOuF,iBAAiB,SAAUuK,EACpC,MAEE9P,OAAOuF,iBAAiB,UAAU,KAChCxI,KAAKkP,cAAc,IAIvB,IAAIgE,EAAW5K,SAASC,cAAc,oBACtB,MAAZ2K,GACFA,EAAS1K,iBAAiB,QAASxI,KAAKmR,YAG1ClO,OAAOuF,iBAAiB,UAAWxI,KAAKqQ,gBACxCuC,GAEF,CA0BAO,oBAAAA,GACElQ,OAAOmQ,oBAAoB,UAAWpT,KAAKqQ,eAC7C,CAoBAgD,kBAAAA,GACE,IAAId,EAASjK,SAASC,cAAc,sBAChC3H,EAAS2R,EAASA,EAAOC,aAAexS,KAAK6F,MAAMjF,OAClDA,EAAS,IAAOZ,KAAK6F,MAAMoJ,cAC9BkB,YAAW,KACTnQ,KAAK8F,SAAS,CACZmJ,aAAcrO,EAAS,IACvB,GACD,IAEP,CAsBAlB,MAAAA,GACE,MAAM,SAAEiT,EAAQ,mBAAEW,EAAkB,UAAEzK,EAAS,WAAEoB,EAAU,UAAED,EAAS,WAAEuJ,EAAU,SAAE7C,EAAQ,aAAG/D,EAAY,iBAAE6G,EAAgB,eAAEC,EAAc,cAAEC,GAAmB1T,KAAKC,OAEjK,aAAEgP,GAAiBjP,KAAK6F,MACxB8N,EAAYjD,GACZ,YAAE9B,GAAgB5O,KAAK6F,MACvB+N,EAAgB3J,EAAW+F,WAC3B6D,EAAgB5J,EAAW6J,OAAOC,QAClCC,EAAe/J,EAAW6J,OAAOG,OACjCC,EAAYjK,EAAWqG,MAAMC,YAAcnK,EAAAA,GAC3C+N,EAAgBlK,EAAWqG,MAAM6D,cACjClC,EAAmBhI,EAAWgI,iBAC9BmC,EAAgD,IAAlCvL,EAAUqE,QAAQK,YAChC8G,KAAkBzF,EAAc,MAAO0F,EAAAA,EAAAA,OAEvCC,EAAcX,EAAgBhG,SAAS2F,GAAc3F,SAAS2F,GAAcK,EAC5EY,EAAmB7B,GAAYA,EAAS7P,OAAUuR,EAAiB,EAAI1B,EAAS7P,OAASyR,EAAcA,EAAc5B,EAAS7P,OAAS,EACvI2R,EAAgB9B,GAAYA,EAAS7P,OAAUuR,EAAiB,EAAI1B,EAAS7P,OAASyR,EAAcA,EAAc5B,EAAS7P,OAAS,EACpI4R,EAAe,CAAC,EAChBC,EAA6B,GAApB1C,GAAwBlQ,OAAOC,KAAK0S,GAAa5R,QAAiB,QAAU,QACrF8R,EAAYJ,GAAmB7B,EAAS7P,QAAY2R,GAAgB9B,EAAS7P,QAAaf,OAAOC,KAAK0S,GAAa5R,OAA0C6P,EAAjCnO,MAAM,GAAGqQ,KAAKlC,GAAUmC,OACpJC,IAAeX,EAEfY,EAAanB,GAAiBG,EAAeN,EAAc/S,MAAQ,IAAMkT,EAAgBG,GAAgBN,EAAc/S,MADzG,KAC8HsU,QAAQ,IAAM,EAC1JC,EAAW,IACZR,EACHnN,KAA2B,IAArB0K,GAAiC0C,EACvCjN,KAAM,UACNR,MAAO,gBACPiO,QAAQ,EACRC,MAAO,IACPC,KAA2B,IAArBpD,EACNqD,SAAUpB,EAA4B,IAAhBC,EAAuB,IAC7C9B,QAAS2C,EACTO,IAAK,EACLC,SAAU,EACVC,WAAUvB,EACVvG,QAAS,IACT+H,YAAY,EACZC,SAAQtB,GAAwB1B,EAAS7P,SAAW+Q,EAAgB,EAAIA,EAAgBY,GACxFmB,YAAab,GAGf,OAAOpN,EAAAA,EAAAA,MAAAkO,EAAAA,SAAA,CAAAvV,SAAA,CAAe,IAAZoQ,GAERxQ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAuBiF,IAAKpF,KAAKiP,aAAc7O,MAAO,CAAE0V,UAAW7G,GAA+B8G,KAAf9G,EAAqBA,EAAe,IAAK3O,UAEzIqH,EAAAA,EAAAA,MAACqO,EAAAA,GAAM,CAAEC,UAAU,EAAO9V,UAAW,sBAAqB4U,EAAc,qBAAuB,IAAMjT,QAASoT,EAAU9P,IAAMsL,GAAa1Q,KAAK4Q,UAAU+C,GAAajD,EAAWwF,IAAI,UAAUC,OAAQnW,KAAKgS,iBAAiB1R,SAAA,EAC5NJ,EAAAA,EAAAA,KAACkW,EAAAA,GAAW,CAAA9V,SAENsU,GAAWA,EAAQ9R,OAAS,GAAO8R,EAAQxS,KAAI,CAACiU,EAAMnM,KACtD,MAAMoM,EAAWhD,EAAmB+C,GACpC,OAAOnW,EAAAA,EAAAA,KAACqW,EAAAA,GAAW,CACX,UAASD,EAAS1S,GAElB4S,YAAahD,EACbiD,UAAY3V,GAAM2S,EAAe3S,EAAGoJ,EAAOoM,GAC3CI,aAAclD,EACdmD,WAAa7V,GAAM2S,EAAe3S,EAAGoJ,EAAOoM,GAC5CM,KAAMlG,EAAUvQ,UAAW,MAAMmW,EAAS1S,KAAKtD,UACnDJ,EAAAA,EAAAA,KAACgM,EAAI,CAACS,aAAcA,EAAevE,KAAMkO,EAAUpM,MAAOA,EAAOrB,UAAWA,EAAWoB,WAAYA,EAAYD,UAAWA,KANjHE,EAOC,OAGpBvC,EAAAA,EAAAA,MAAA,OAAKxH,UAAU,0DAA0DuH,KAAK,aAAa,aAAW,4BAA2BpH,SAAA,EAC/HJ,EAAAA,EAAAA,KAAA,OAAKwH,KAAK,aAAavH,UAAU,8FAA8F,kBAAgB,4BAA2BG,SAAC,OAC3KJ,EAAAA,EAAAA,KAAA,OAAKwH,KAAK,aAAavH,UAAU,gGAAgG,kBAAgB,wBAAwByH,QAASxB,EAAAA,GAAYpG,KAAKoP,YAAc,KAAK9O,SAAC,cAGpN,KAAK,MAClB,EAGF,MAKA,GAAeyJ,EAAAA,EAAAA,OAAK8M,EAAAA,EAAAA,IAAQ,IALDC,IAClB,CACLtH,SAAUA,CAACuH,EAAQC,EAAWC,EAAWpX,EAAWoQ,EAAO0C,EAAUzC,EAAagH,IAAqBJ,GAAStH,EAAAA,EAAAA,IAASuH,EAAQC,EAAWC,EAAWpX,EAAWoQ,EAAO0C,EAAUzC,EAAagH,OAGhLL,CAAgCnI,G,+BCvPpD,IAAIyI,EAAuBC,EAAQ,OAEnC,SAASC,IAAiB,CAC1B,SAASC,IAA0B,CACnCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKzX,EAAO0X,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWZ,EAAf,CAIA,IAAIa,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAItX,KAAO,sBACLsX,CAPN,CAQF,CAEA,SAASE,IACP,OAAOR,CACT,CAHAA,EAAKS,WAAaT,EAMlB,IAAIU,EAAiB,CACnBC,MAAOX,EACPY,OAAQZ,EACRa,KAAMb,EACNc,KAAMd,EACNe,OAAQf,EACRgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EAERmB,IAAKnB,EACLoB,QAASZ,EACTvV,QAAS+U,EACTqB,YAAarB,EACbsB,WAAYd,EACZe,KAAMvB,EACNwB,SAAUhB,EACViB,MAAOjB,EACPkB,UAAWlB,EACXmB,MAAOnB,EACPoB,MAAOpB,EAEPqB,eAAgBjC,EAChBC,kBAAmBF,GAKrB,OAFAe,EAAeoB,UAAYpB,EAEpBA,CACT,C,kBC/CEZ,EAAOC,QAAUL,EAAQ,MAARA,E,yBCNnBI,EAAOC,QAFoB,8C","sources":["app/Themes/Elements/Author/Author.js","../node_modules/react-intersection-observer/src/observe.ts","../node_modules/react-intersection-observer/src/InView.tsx","app/Themes/Elements/InViewWrapper.js","../node_modules/react-intersection-observer/src/useInView.tsx","app/Themes/Elements/Seprator/Seprator.js","app/Themes/Elements/SocialAction/SocialAction.js","app/Themes/Elements/Time/Time.js","app/Themes/HorizontalColumns/Elements/Media.js","app/Themes/HorizontalColumns/Elements/AuthorDetails.js","app/Themes/HorizontalColumns/Elements/Card.js","app/Themes/HorizontalColumns/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import React, {PureComponent } from \"react\";\r\nimport { GET_NETWORK_COLOR } from \"../../../../utils/Network\";\r\nexport default class Author extends PureComponent {\r\n\r\n  render() {\r\n    const { author, authorClass, networkId, size, inView } = this.props;\r\n\r\n    return <div key={Math.random()} className={authorClass} style={{ overflow: networkId == 4 ? 'visible' : '' }}>\r\n              {inView ? <img className={`${authorClass}__`} src={author.picture} aria-label=\"author\" alt={author.name} width={size ? size : 44} height={size ? size : 44}\r\n              onError={(e) => {\r\n                const networkColor = GET_NETWORK_COLOR(networkId); \r\n                const background = networkColor == '#ffffff' ? '000' : networkColor.replace(\"#\", \"\"); \r\n                e.target.src = author.errorPic ? author.errorPic : `https://ui-avatars.com/api/?name=${author.name.replace(/\\s/g, '')}&background=${background}&color=fff&length=1`}}\r\n              /> : null}\r\n          </div>\r\n  }\r\n}\r\n\r\n","import type { ObserverInstanceCallback } from \"./index\";\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit[\"root\"]) {\n  if (!root) return \"0\";\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === \"root\"\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  const id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    // biome-ignore lint/style/useConst: It's fine to use let here, as we are going to assign it later\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === \"undefined\") {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === \"undefined\" &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === \"number\" ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  const callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from \"react\";\nimport type { IntersectionObserverProps, PlainChildrenProps } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== \"function\";\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n  }\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === \"function\") {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || \"div\",\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import React, { Component } from 'react';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { isTagShop } from '../../../actions/api';\r\nimport { themeImpressionTracking } from '../../../utils';\r\n\r\n// Functional component wrapper\r\nconst InViewWrapper = ({ children }) => {\r\n       const { ref, inView } = useInView({\r\n              triggerOnce: true, // Trigger only once\r\n              threshold: 0.01, // Trigger when 10% of the element is visible\r\n       });\r\n       if (isTagShop) themeImpressionTracking(ref);\r\n       return  children({ ref, inView });\r\n};\r\nexport default InViewWrapper","import * as React from \"react\";\nimport type { InViewHookResponse, IntersectionOptions } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions[\"onChange\"]>(onChange);\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: threshold is not correctly detected as a dependency\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element | undefined>(undefined);\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n","import React from \"react\"; \r\nconst Seprator = (props) => {\r\n  const { sepClass } = props;\r\n  return <div className={sepClass}>   </div>\r\n}\r\n\r\nexport default Seprator","import React, { PureComponent } from \"react\"; \r\nimport { convertToAtob, kFormatter } from \"../../../../utils/Common\";\r\nimport { GET_NETWORK_NAME } from \"../../../../utils/Network\";\r\nimport \"./scss/SocialAction.scss\";\r\n\r\nconst NetworkAction = (networkID, postID, Link, action) => {\r\n  const actions = {\r\n    like: `https://twitter.com/intent/favorite?tweet_id=${convertToAtob(postID)}`,\r\n    comment: `https://twitter.com/intent/tweet?in_reply_to=${convertToAtob(postID)}`,\r\n    retweet: `https://twitter.com/intent/retweet?tweet_id=${convertToAtob(postID)}`\r\n  };\r\n  return networkID === 1 ? actions[action] : Link;\r\n};\r\n\r\nconst SocialItm = ({ label, hrefClick, Icon, count, itemId = 0, type }) => {\r\n  const countNo = count > 0 ? kFormatter(count) : \"\";\r\n  return <div className=\"tb_social_action__list\" role=\"listitem\" aria-roledescription=\"post social action links\">\r\n    <div onClick={event => { event.stopPropagation(); window.open(hrefClick, \"_blank\"); }} className={`tb_social_action__ico_wrap tb_social_action__ico_wrap_${itemId}`} aria-label={`${label} post ${type} count ${countNo}`} role=\"button\" tabIndex=\"0\">\r\n      <div className={`tb_social_action_ico__ tb__icon tb-${Icon}`}>  </div>\r\n      {countNo ? <div className=\"tb_social_action_counts__\">{countNo}</div>:''}\r\n    </div>\r\n  </div>\r\n};\r\n\r\nexport default class SocialAction extends PureComponent {\r\n  componentDidMount() {\r\n    try {\r\n      const { Post } = this.props;\r\n      const socialActionId = `.tb_social_action__ico_wrap_${Post?.id}`;\r\n      document.querySelector(socialActionId)?.addEventListener('keydown', function (event) {\r\n        if (event.key === 'Enter' || event.key === ' ') {\r\n          event.preventDefault();\r\n          this.click(); // Triggers the existing onClick functionality\r\n        }\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { Post, CardStyle, actionClass } = this.props;\r\n    const { icon, style } = CardStyle;\r\n    const iconStyle = { color: !icon.default ? icon.color : style.color };\r\n\r\n    const networkID = Post.networkId;\r\n    const { comment, like } = Post.count;\r\n    const likeIcon = [3, 10, 7].includes(networkID) ? 'like' : 'heart-outline';\r\n    const likeIconStatus = [1, 2, 3, 7, 8, 9, 10, 18].includes(networkID);\r\n    const commentIconStatus = ![29, 19].includes(networkID);\r\n    const networkName = GET_NETWORK_NAME(networkID);\r\n\r\n    return ![29, 26, 23, 6, 5, 11, 12, 15, 20, 21].includes(networkID) ? (\r\n      <div className={actionClass}>\r\n        <div className=\"tb_social_action__\" role=\"list\">\r\n          {likeIconStatus && <SocialItm itemId={Post.id} label={networkName} hrefClick={NetworkAction(networkID, Post.postId, Post.link, 'like')} Icon={likeIcon} iconStyle={iconStyle} count={like} type=\"like\" />}\r\n          {commentIconStatus && <SocialItm itemId={Post.id} label={networkName} hrefClick={NetworkAction(networkID, Post.postId, Post.link, 'comment')} Icon={\"comment\"} iconStyle={iconStyle} count={comment} type=\"comment\" />}\r\n          {networkID === 1 && <SocialItm itemId={Post.id} label={networkName} hrefClick={NetworkAction(networkID, Post.postId, Post.link, 'retweet')} Icon={\"retweet\"} iconStyle={iconStyle} count={comment} type=\"comment\" />}\r\n          <SocialItm label={networkName} itemId={Post.id} hrefClick={Post.link} Icon={\"eye\"} iconStyle={iconStyle} count={0} type=\"view\" />\r\n        </div>\r\n      </div>\r\n    ) : null;\r\n  }\r\n}","import React, { memo } from \"react\"; \r\nimport { timeAgo } from \"../../../../utils/Common\";\r\nconst Time = (props) => {\r\n  const { createdAt, timeClass } = props;\r\n  return <div className={timeClass} role=\"status\" aria-label={`post timestamp ${timeAgo(createdAt)}`}>{timeAgo(createdAt)}</div>\r\n}\r\n\r\nexport default memo(Time)","  import React from \"react\";\r\n  import { isTagbox, isTagShop } from \"../../../../actions/api\";\r\n  import Video from \"../../Elements/Media/Video\";\r\n  import Image from \"../../Elements/Media/Image\";\r\n  import MediaIcon from \"../../Elements/MediaIcon/MediaIcon\";\r\n  const Media = ({ Post, ThemeInfo, ThemeStyle, CardStyle, index, inView }) => {\r\n    const autoPlay = ([3,5].includes(Post.type)) && ThemeStyle.autoPlay == 1 ? true : false;\r\n    const size = ThemeInfo.productType == 9 || isTagbox ? CardStyle.style.ratio ? CardStyle.style.ratio : 100 : 100;\r\n    const mediaIcon = Post.hotspot ? false : true;\r\n    return (\r\n      <div className=\"tb_hc_media_wrap\">\r\n        {mediaIcon ? (\r\n          <MediaIcon Post={Post} IconClass=\"tb_hc_media_icon\" show={mediaIcon} isCenter={false} hideVideo={autoPlay}/>\r\n        ) : null}\r\n        {autoPlay ? (\r\n          <Video VideoClass=\"tb_hc_video\" Post={Post} size={size} isCover={true} controls={false} autoPlay={autoPlay} muted={true} observer={false} index={index} inView={inView} />\r\n        ) : (\r\n          <Image ImageClass=\"tb_hc_image\" Post={Post} size={size} hotspot={true} blurBG={isTagShop} observer={false} index={index} inView={inView} />\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n  export default Media;\r\n","import React from 'react';\r\nimport Time from '../../Elements/Time/Time';\r\nimport Network from '../../Elements/Network/Network';\r\nimport Author from '../../Elements/Author/Author';\r\nimport Seprator from '../../Elements/Seprator/Seprator';\r\nconst AuthorDetails = ({ Post, CardStyle, inView }) => {\r\n  const { author, networkId } = Post\r\n  const username = author.username ? author.username.length > 0 ? `@${author.username}` : `` : '';\r\n  const postAuthor = (CardStyle.author.status && !author.isInstaUser) ? true : false;\r\n  const authorSeprator = (CardStyle.author.status && CardStyle.timeStatus && !author.isInstaUser) ? true : false;\r\n  const networkIcon = (networkId !== null && networkId !== '') ? true : false\r\n  return <div className=\"tb_hc_author_wrapper\" aria-label=\"Author details\" aria-roledescription=\"post author details\">\r\n    {postAuthor ? <Author network={Post.network} author={author} authorClass={'tb_hc_author_profile'} size={46} inView={inView} /> : ''}\r\n    <div className=\"tb_hc_author_info\">\r\n      {postAuthor ? <div className={`tb_hc_authorname tb-cTBfont-${CardStyle.author.variant}`}>{author.name}</div> : ''}\r\n      {<div className=\"tb_hc_post_info\">\r\n        {postAuthor ? <div className=\"tb_hc_username\">{username}</div> : ''}\r\n        {authorSeprator ? <Seprator sepClass={`tb_hc_seprator`} /> : ''}\r\n        {CardStyle.timeStatus ? \r\n        <Time createdAt={Post.createdAt} timeClass={`tb_hc_time tb-cTBfont-${CardStyle.author.variant}`} /> : ''}\r\n      </div>}\r\n    </div>\r\n    {networkIcon ?\r\n      <div className=\"tb_hc_social_\">\r\n        <Network networkClass={'tb_hc_social_ico'} networkId={networkId} iconStyle={CardStyle.icon} />\r\n      </div>\r\n      : null}\r\n  </div>\r\n}\r\nexport default AuthorDetails","import React, { PureComponent } from \"react\";\r\nimport { PostTrimContent  } from '../../../../utils'\r\nimport { isTagShop } from \"../../../../actions/api\";\r\nimport Media from \"./Media\";\r\nimport CTAButton from \"../../Elements/CTA/CtaButton\";\r\nimport Rating from \"../../Elements/Rating/Rating\";\r\nimport SocialAction from \"../../Elements/SocialAction/SocialAction\";\r\nimport AuthorDetails from \"./AuthorDetails\";\r\nimport PostContent from \"../../Elements/PostContent/PostContent\";\r\nimport ShareOnHover from \"../../Elements/ShareOnHover/ShareOnHover\";\r\nimport InViewWrapper from '../../Elements/InViewWrapper';\r\n\r\n\r\nconst trim_content_length = 140;\r\nexport default class Card extends PureComponent {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      isExpanded: false,\r\n      hiddenHeight: 0,\r\n      height: 0\r\n    };\r\n    this.toggleExpand = this.toggleExpand.bind(this);\r\n  }\r\n\r\n  contentRef = ref => {\r\n    this.setState({\r\n      height: ref\r\n    })\r\n\r\n  }\r\n\r\n  contentRefHidden = ref => {\r\n    this.setState({\r\n      hiddenHeight: ref\r\n    })\r\n  }\r\n\r\n  toggleExpand = (event) => {\r\n    event.stopPropagation()\r\n    this.setState({\r\n      isExpanded: !this.state.isExpanded\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    const { Post, CardStyle, index, ThemeInfo, onClickToCTA, ThemeStyle } = this.props;\r\n    const mediaType = Post.type !== 1 ? true : false;\r\n    const rating = Post.rating && (Post.rating > 0) ? true : false;\r\n    const contentClass = (Post.rating > 0) ? 'tb_hc_rating_content' : 'tb_hc_content';\r\n    const noMediaClass = (Post.type === 1) ? 'tb_hc_text_post' : '';\r\n    const textDecorate = (Post.type === 1) && String(Post.content).length > 0 && (CardStyle.style.textDecoration) ? 'tb_hc_text_decoration' : '';\r\n    const ctaActive = Post.cta.status ? true : false;\r\n    const postTextContent =  CardStyle.content.trimcontent ? PostTrimContent(Post.content.text, trim_content_length) : Post.content.text\r\n\r\n    return <InViewWrapper>\r\n        {({ ref, inView }) => (\r\n          <div id={`tb_hc_id-${Post.id}`} className=\"tb_hc_post_wrapper\" ref={ref} style={{ padding: CardStyle.style.padding / 2 }} role=\"article\" aria-label={`Post ${parseInt(index) + 1},${postTextContent}`}>\r\n            <div className=\"tb_hc_post_in\"  role=\"button\" aria-label=\"Popup\" tabIndex={0}>\r\n                {Post.share.status ? <ShareOnHover share={Post.share} shareClass={\"tb_hc_share_container\"} Post={Post} ThemeInfo={ThemeInfo} />: ''}\r\n                {mediaType ? <Media Post={Post} CardStyle={CardStyle} ThemeInfo={ThemeInfo} ThemeStyle={ThemeStyle} index={index} inView={inView}/> \r\n                : null}\r\n              <div className={`tb_hc_contant_wrapper ${noMediaClass}`}>\r\n                <AuthorDetails Post={Post} CardStyle={CardStyle} inView={inView} />\r\n                {ctaActive ? <div className=\"tb_hc_post_cta\" onClick={(e) => { e.stopPropagation() }}>\r\n                  <CTAButton ctaClass={\"tb_hc_post_cta_btn\"} Post={Post} onClickToCTA={onClickToCTA} />\r\n                </div>\r\n                : ''} \r\n                {rating ? <div className={`tb_hc_rating__`}> \r\n                <Rating rating={Post.rating} networkId={Post.networkId} ThemeID={ThemeInfo.id} />\r\n                </div> : null}\r\n                {(CardStyle.content.status) || Post.type == 1 ?\r\n                  <div className={`tb_hc_content_wrapper__`}>\r\n                      <PostContent contentClass={`${contentClass}${textDecorate}`} Post={Post} content={postTextContent} CardStyle={CardStyle} contentTitle={Post.content.title} /> \r\n                  </div>\r\n                  : null}\r\n              </div> \r\n              {isTagShop  ? (CardStyle.actionStatus ?\r\n              <SocialAction Post={Post} CardStyle={CardStyle} actionClass={`tb_hc_social_action__`} />\r\n            : null) : ''}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </InViewWrapper>\r\n  }\r\n}\r\n","import React, { Component,  memo } from \"react\";\r\n//import { isMobile } from 'react-device-detect';\r\nimport { connect } from \"react-redux\";\r\nimport { Splide, SplideSlide, SplideTrack } from '@splidejs/react-splide'; \r\nimport { isTagShop } from \"../../../actions/api\";\r\nimport { detectMobile } from '../../../utils'\r\nimport Card from \"./Elements/Card\";\r\nimport '../scss/ThemesSplide.scss'\r\nimport './scss/HorizontalColumns.scss' \r\nimport { mainClass } from \"../../../utils/Common\";\r\nimport { nextData } from \"../../../actions/moredataAction\";\r\nclass HorizontalColumn extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { loadData : false }\r\n    this.inputRefs = {};  \r\n    this.isDragging = false; // Class property to track dragging\r\n  }\r\n  state = {\r\n    windowWidth: document.getElementById(mainClass) && document.getElementById(mainClass).clientWidth ? document.getElementById(mainClass).clientWidth : window.innerWidth,\r\n    sliderHeight: 300\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.onScreenLoad()\r\n  }\r\n  onScreenLoad = () => {\r\n    const { renderId } = this.props.renderId\r\n    this.setState({\r\n      windowWidth: renderId && document.getElementById(renderId) ? document.getElementById(renderId).clientWidth : document.getElementById(mainClass) && document.getElementById(mainClass).clientWidth ? document.getElementById(mainClass).clientWidth : window.innerWidth\r\n    })\r\n  }\r\n\r\n  requestData = () => {\r\n    const { appendData, ThemeInfo, ThemeStyle, preRender, hasMoreData, nextData } = this.props;\r\n    !this.state.loadData && this.updatepost(0) \r\n    if (hasMoreData) {\r\n      nextData(\r\n        isTagShop ? ThemeInfo.webId : ThemeInfo.wallId,\r\n        Math.floor(Date.now() / 1000),\r\n        ThemeStyle.totalPosts,\r\n        appendData.networkID,\r\n        appendData.after,\r\n        preRender,\r\n        appendData.heightEvent\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    var slider = document.querySelector('.tb_hc_post_slider');\r\n    var height = slider ? slider.offsetHeight : this.state.height;\r\n    setTimeout(() => {\r\n      this.setState({\r\n        sliderHeight: height\r\n      })\r\n      const classNameRole = document.querySelectorAll('.splide__slide');\r\n      classNameRole && classNameRole.forEach((element) => {element.removeAttribute(\"aria-hidden\");element.removeAttribute(\"role\")});\r\n    }, 100);\r\n    const { postData, loadBranding } = this.props;\r\n\r\n    if (postData && postData.length == 1) {\r\n\r\n      let arrow_left_id = document.querySelector(\".tb_hc_arrow_left__\")\r\n      let arrow_right_id = document.querySelector(\".tb_hc_arrow_right__\")\r\n      if (arrow_left_id && arrow_right_id) {\r\n        arrow_left_id.style = 'display:none'\r\n        arrow_right_id.style = 'display:none'\r\n      }\r\n\r\n      document.body.addEventListener('click', function () { myFunction() });\r\n\r\n      myFunction();\r\n\r\n      function myFunction() {\r\n        setTimeout(() => {\r\n          let splide01 = document.querySelector(\".splide__list\");\r\n          if (splide01 != null) {\r\n            splide01.style.transform = 'translateX(0)';\r\n          }\r\n        }, 100);\r\n      }\r\n      window.addEventListener(\"resize\", myFunction);\r\n    }\r\n    else {\r\n      window.addEventListener(\"resize\", () => {\r\n        this.onScreenLoad();\r\n      });\r\n    }\r\n\r\n    let splide02 = document.querySelector(\"#kt_aside_toggle\");\r\n    if (splide02 != null) {\r\n      splide02.addEventListener(\"click\", this.reScrolled)\r\n    }\r\n\r\n    window.addEventListener('keydown', this.handleKeyPress);\r\n    loadBranding()\r\n\r\n  }\r\n\r\n  updatepost = (e) => {    \r\n    if(!this.state.loadData){ \r\n      this.setState({ loadData : true })\r\n      setTimeout(() => this.props.loadMoredata() , (e*1000))\r\n    }\r\n}\r\n\r\n  handleKeyPress = event => {\r\n    try {\r\n      const { ThemeStyle } = this.props \r\n      if (ThemeStyle.slide.autoSlide == 1) {\r\n        const isInput = ['INPUT', 'TEXTAREA'].includes(event.target.tagName);\r\n        if (!isInput && event.code === 'Space') {\r\n          const { parentID } = this.props\r\n          event.preventDefault(); // Prevent scrolling the page\r\n          var Autoplay = this.inputRefs[parentID].splide.Components.Autoplay;\r\n          if (Autoplay.isPaused()) Autoplay.play();\r\n          else Autoplay.pause();\r\n        }\r\n      }\r\n    }\r\n    catch (error) {\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyPress);\r\n  }\r\n  reScrolled = () => {\r\n\r\n    setTimeout(() => {\r\n      let splide__list = document.querySelector('.splide__list');\r\n      let getWidth = document.querySelector(\".splide__slide\").offsetWidth;\r\n      const isVisibleAll = document.querySelectorAll('.splide__slide.is-visible').length;\r\n      const isVisible = document.querySelector('.splide__slide.is-active.is-visible');\r\n      const str = isVisible.getAttribute('aria-label').substring(0, 2)\r\n      const getIndex = Number(str) + (isVisibleAll - 1) + isVisibleAll\r\n      if (getIndex > 0) {\r\n        splide__list.style.transition = '0s ease';\r\n        splide__list.style.transform = `translateX(-${(getIndex * getWidth)}px)`;\r\n      } else {\r\n        splide__list.style.transform = `translateX(0px)`;\r\n      }\r\n    }, 200);\r\n  }\r\n\r\n\r\n  componentDidUpdate() {\r\n    var slider = document.querySelector('.tb_hc_post_slider');\r\n    var height = slider ? slider.offsetHeight : this.state.height;\r\n    if ((height + 15) != this.state.sliderHeight) {\r\n      setTimeout(() => {\r\n        this.setState({\r\n          sliderHeight: height + 15\r\n        })\r\n      }, 100);\r\n    }\r\n  }\r\n  autoScrollSlider = (splide) => {\r\n   \r\n    const { ThemeStyle } = this.props\r\n    const autoScrollStatus = ThemeStyle.autoScrollStatus;\r\n   \r\n    splide.on(\"drag\", () =>{  \r\n       this.isDragging = true; // Reset flag after move\r\n       !this.state.loadData && this.updatepost(0)\r\n    } );\r\n\r\n    splide.on(\"move\", () => { !this.state.loadData && !this.isDragging && this.updatepost(3)} );\r\n\r\n    if (autoScrollStatus == 1) {\r\n      const currentIndex = splide.index\r\n      const slideLength = splide.length\r\n      const permove = splide[\"_o\"].perPage\r\n      if (slideLength - currentIndex === permove) this.requestData()\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { postData, completeDataObject, CardStyle, ThemeStyle, ThemeInfo, cardNumber, parentID,  onClickToCTA, handlePressStart, handlePressEnd, containerSize  } = this.props;\r\n\r\n    const { sliderHeight } = this.state\r\n    const inputName = parentID;\r\n    const { windowWidth } = this.state;\r\n    const numberOfPosts = ThemeStyle.totalPosts;\r\n    const desktopColumn = ThemeStyle.column.desktop;\r\n    const mobileColumn = ThemeStyle.column.mobile;\r\n    const slidePost = ThemeStyle.slide.autoSlide && !isTagShop;\r\n    const slideDuration = ThemeStyle.slide.slideDuration;\r\n    const autoScrollStatus = ThemeStyle.autoScrollStatus;\r\n    const trimContent = CardStyle.content.trimcontent === 1 ? true : false;\r\n    const isMobileStatus =  windowWidth < 768 || detectMobile() ? true : false\r\n\r\n    const renderCount = numberOfPosts > parseInt(cardNumber) ? parseInt(cardNumber) : numberOfPosts\r\n    const manageItemCount = (postData && postData.length) ? isMobileStatus ? 1 : postData.length > renderCount ? renderCount : postData.length : 3\r\n    const desktopCount = (postData && postData.length) ? isMobileStatus ? 1 : postData.length > renderCount ? renderCount : postData.length : 4\r\n    const cloneStatus =  {};\r\n    const isType = autoScrollStatus != 1 ? Object.keys(cloneStatus).length ? false : 'slide' : 'slide'\r\n    const newData = ((manageItemCount == postData.length) || (desktopCount == postData.length)) && !Object.keys(cloneStatus).length ? Array(2).fill(postData).flat() : postData\r\n    const equalHeight =  trimContent ? true : false\r\n    const minCardSize = 240;\r\n    const slideView =  desktopColumn && mobileColumn ? containerSize.width > 767 ? desktopColumn : mobileColumn : (containerSize.width / minCardSize).toFixed(0) || 1;\r\n    const settings = {\r\n      ...cloneStatus,\r\n      type: autoScrollStatus === 1 ? false : isType,\r\n      role: 'article',\r\n      label: 'social widget',\r\n      rewind: true,\r\n      speed: 1000,\r\n      loop: autoScrollStatus === 1 ? false : true,\r\n      interval: slidePost ? slideDuration * 1000 : 5000,\r\n      perPage: slideView,\r\n      gap: 0,\r\n      perMove:  false,\r\n      autoplay: slidePost ? true : false,\r\n      padding: \"0\",\r\n      pagination: false,\r\n      arrows: isMobileStatus ? true : postData.length >= (desktopColumn > 0 ? desktopColumn : desktopCount) ? true : false,\r\n      fixedHeight: equalHeight,\r\n    };\r\n\r\n    return <>{parentID != \"\" ?\r\n      \r\n      <div className=\"tb_hc_post_container\" ref={this.sliderHeight} style={{ minHeight: sliderHeight && sliderHeight!= NaN ? sliderHeight : '' }}>\r\n      \r\n        <Splide  hasTrack={false} className={`tb_hc_post_slider ${equalHeight ? 'tb_hc_fixed_height' : ''}`} options={settings} ref={(parentID) => this.inputRefs[inputName] = parentID}  tag=\"section\" onMove={this.autoScrollSlider}>\r\n          <SplideTrack>\r\n            {\r\n              ((newData && newData.length > 0)) && newData.map((item, index) => {\r\n                const cardData = completeDataObject[item];\r\n                return <SplideSlide \r\n                        data-id={cardData.id} \r\n                        key={index} \r\n                        onMouseDown={handlePressStart}\r\n                        onMouseUp={(e) => handlePressEnd(e, index, cardData)}\r\n                        onTouchStart={handlePressStart}\r\n                        onTouchEnd={(e) => handlePressEnd(e, index ,cardData)}\r\n                        p_id={parentID} className={`tb_${cardData.id}`}>\r\n                    <Card onClickToCTA={onClickToCTA}  Post={cardData} index={index} CardStyle={CardStyle} ThemeStyle={ThemeStyle} ThemeInfo={ThemeInfo}/>\r\n                </SplideSlide>\r\n              })}\r\n          </SplideTrack>\r\n          <div className=\"splide__arrows splide__arrows--ltr tb_hc_arrow_wrapper_\" role=\"navigation\" aria-label=\"Slider Navigation Wrapper\">\r\n            <div role=\"navigation\" className=\"tb_hc_arrow splide__arrow splide__arrow--prev tb_hc_arrow_left__ tb__icon tb-arrow-left-alt\" aria-labelledby=\"Navigation Previous Slide\"> </div>\r\n            <div role=\"navigation\" className=\"tb_hc_arrow splide__arrow splide__arrow--next tb_hc_arrow_right__ tb__icon tb-arrow-right-alt\" aria-labelledby=\"Navigation Next Slide\" onClick={isTagShop ? this.requestData : null}> </div>\r\n          </div>\r\n        </Splide>\r\n      </div> : null} </>\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    nextData: (wallID, timeStamp, postCount, networkId, after, postData, heightEvent, updateInStateNow) => dispatch(nextData(wallID, timeStamp, postCount, networkId, after, postData, heightEvent, updateInStateNow)),\r\n  }\r\n}\r\nexport default memo(connect(\"\", mapDispatchToProps)(HorizontalColumn));","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["Author","PureComponent","render","author","authorClass","networkId","size","inView","this","props","_jsx","className","style","overflow","children","src","picture","alt","name","width","height","onError","e","networkColor","GET_NETWORK_COLOR","background","replace","target","errorPic","Math","random","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","options","Object","keys","sort","filter","key","map","root","has","set","toString","get","observe","element","callback","arguments","length","undefined","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","intersectionRatio","threshold","time","boundingClientRect","intersectionRect","rootBounds","id","observer","elements","instance","thresholds","entries","forEach","entry","_a","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","delete","unobserve","disconnect","React","_ref","ref","delay","rootMargin","triggerOnce","skip","initialInView","onChange","setRef","React2","state","setState","current","entryTarget","previousEntryTarget","result","useInView","isTagShop","themeImpressionTracking","sepClass","NetworkAction","networkID","postID","Link","action","actions","like","convertToAtob","comment","retweet","SocialItm","label","hrefClick","Icon","count","itemId","type","countNo","kFormatter","role","_jsxs","onClick","event","stopPropagation","open","tabIndex","SocialAction","componentDidMount","_document$querySelect","Post","socialActionId","document","querySelector","addEventListener","preventDefault","click","console","log","CardStyle","actionClass","icon","iconStyle","color","default","likeIcon","includes","likeIconStatus","commentIconStatus","networkName","GET_NETWORK_NAME","postId","link","Time","createdAt","timeClass","timeAgo","memo","ThemeInfo","ThemeStyle","index","autoPlay","productType","isTagbox","ratio","mediaIcon","hotspot","MediaIcon","IconClass","show","isCenter","hideVideo","Video","VideoClass","isCover","controls","muted","Image","ImageClass","blurBG","username","postAuthor","status","isInstaUser","authorSeprator","timeStatus","networkIcon","network","variant","Seprator","Network","networkClass","Card","constructor","super","contentRef","contentRefHidden","hiddenHeight","toggleExpand","isExpanded","bind","onClickToCTA","mediaType","rating","contentClass","noMediaClass","textDecorate","String","content","textDecoration","ctaActive","cta","postTextContent","trimcontent","PostTrimContent","text","InViewWrapper","padding","parseInt","share","ShareOnHover","shareClass","Media","AuthorDetails","CTAButton","ctaClass","Rating","ThemeID","PostContent","contentTitle","title","actionStatus","HorizontalColumn","Component","windowWidth","getElementById","mainClass","clientWidth","innerWidth","sliderHeight","onScreenLoad","renderId","requestData","appendData","preRender","hasMoreData","nextData","loadData","updatepost","webId","wallId","floor","Date","now","totalPosts","after","heightEvent","setTimeout","loadMoredata","handleKeyPress","slide","autoSlide","tagName","code","parentID","Autoplay","inputRefs","splide","Components","isPaused","play","pause","error","reScrolled","splide__list","getWidth","offsetWidth","isVisibleAll","querySelectorAll","str","getAttribute","substring","getIndex","Number","transition","transform","autoScrollSlider","autoScrollStatus","on","isDragging","currentIndex","perPage","UNSAFE_componentWillMount","slider","offsetHeight","classNameRole","removeAttribute","postData","loadBranding","arrow_left_id","arrow_right_id","myFunction","splide01","body","splide02","componentWillUnmount","removeEventListener","componentDidUpdate","completeDataObject","cardNumber","handlePressStart","handlePressEnd","containerSize","inputName","numberOfPosts","desktopColumn","column","desktop","mobileColumn","mobile","slidePost","slideDuration","trimContent","isMobileStatus","detectMobile","renderCount","manageItemCount","desktopCount","cloneStatus","isType","newData","fill","flat","equalHeight","slideView","toFixed","settings","rewind","speed","loop","interval","gap","perMove","autoplay","pagination","arrows","fixedHeight","_Fragment","minHeight","NaN","Splide","hasTrack","tag","onMove","SplideTrack","item","cardData","SplideSlide","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","p_id","connect","dispatch","wallID","timeStamp","postCount","updateInStateNow","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"sourceRoot":""}