{"version":3,"file":"static/js/3560.e4c3bb67.chunk.js","mappings":"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","sources":["app/Themes/Elements/Network/Network.js","app/Themes/Elements/SocialAction/SocialAction.js","app/Themes/NewsCard/Elements/AuthorDetails.js","app/Themes/NewsCard/Elements/Media.js","app/Themes/NewsCard/Elements/Card.js"],"sourcesContent":["import React, { PureComponent, Suspense } from \"react\";\r\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from \"../../../../utils/Network\";\r\nconst DefaultNetwork = React.lazy(() => import(\"./DefaultNetwork\"));\r\n\r\nexport default class Network extends PureComponent {\r\n  render() {\r\n    const { networkId, networkClass, iconStyle } = this.props;\r\n    const defaultNetworks = [7, 4, 36]\r\n    const isDefaultIcon = iconStyle?.default === 1 ? (defaultNetworks.includes(networkId)) ? false : true : false\r\n    return (isDefaultIcon ? <div className={`${networkClass} tb__icon tb-${GET_NETWORK_ICON(networkId)}`} aria-label={`post network ${GET_NETWORK_NAME(networkId)}`}><div></div></div> : \r\n    <Suspense fallback={<></>}><DefaultNetwork networkId={networkId} networkClass={networkClass} /></Suspense>);\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\"; \r\nimport { convertToAtob, kFormatter } from \"../../../../utils/Common\";\r\nimport { GET_NETWORK_NAME } from \"../../../../utils/Network\";\r\n\r\nconst NetworkAction = (networkID, postID, Link, action) => {\r\n  const actions = {\r\n    like: `https://twitter.com/intent/favorite?tweet_id=${convertToAtob(postID)}`,\r\n    comment: `https://twitter.com/intent/tweet?in_reply_to=${convertToAtob(postID)}`,\r\n    retweet: `https://twitter.com/intent/retweet?tweet_id=${convertToAtob(postID)}`\r\n  };\r\n  return networkID === 1 ? actions[action] : Link;\r\n};\r\n\r\nconst SocialItm = ({ arialbl, hrefClick, Icon, count, itemId = 0, type }) => (\r\n  <div className=\"tb_social_action__list\" role=\"listitem\" aria-roledescription=\"post social action links\">\r\n    <div onClick={event => { event.stopPropagation(); window.open(hrefClick, \"_blank\"); }} className={`tb_social_action__ico_wrap tb_social_action__ico_wrap_${itemId}`} aria-label={`${arialbl} post ${type} count ${kFormatter(count)}`} role=\"button\" tabIndex=\"0\">\r\n      <div className={`tb_social_action_ico__ tb__icon tb-${Icon}`}> </div>\r\n      {count > 0 && <div className=\"tb_social_action_counts__\">{kFormatter(count)}</div>}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default class SocialAction extends PureComponent {\r\n  componentDidMount() {\r\n    try {\r\n      const { Post } = this.props;\r\n      const socialActionId = `.tb_social_action__ico_wrap_${Post?.id}`;\r\n      document.querySelector(socialActionId)?.addEventListener('keydown', function (event) {\r\n        if (event.key === 'Enter' || event.key === ' ') {\r\n          event.preventDefault();\r\n          this.click(); // Triggers the existing onClick functionality\r\n        }\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { Post, CardStyle, actionClass } = this.props;\r\n    const { icon, style } = CardStyle;\r\n    const iconStyle = { color: icon.default !== 1 ? icon.color : style.color };\r\n\r\n    const networkID = Post.networkId;\r\n    const { comment, like } = Post.count;\r\n    const likeIcon = [3, 10, 7].includes(networkID) ? 'like' : 'heart-outline';\r\n    const likeIconStatus = [1, 2, 3, 7, 8, 9, 10, 18].includes(networkID);\r\n    const commentIconStatus = ![29, 19].includes(networkID);\r\n    const networkName = GET_NETWORK_NAME(networkID);\r\n\r\n    return ![29, 26, 23, 6, 5, 11, 12, 15, 20, 21].includes(networkID) ? (\r\n      <div className={actionClass}>\r\n        <div className=\"tb_social_action__\" role=\"list\">\r\n          {likeIconStatus && <SocialItm itemId={Post.id} arialbl={networkName} hrefClick={NetworkAction(networkID, Post.postId, Post.link, 'like')} Icon={likeIcon} iconStyle={iconStyle} count={like} type=\"like\" />}\r\n          {commentIconStatus && <SocialItm itemId={Post.id} arialbl={networkName} hrefClick={NetworkAction(networkID, Post.postId, Post.link, 'comment')} Icon={\"comment\"} iconStyle={iconStyle} count={comment} type=\"comment\" />}\r\n          {networkID === 1 && <SocialItm itemId={Post.id} arialbl={networkName} hrefClick={NetworkAction(networkID, Post.postId, Post.link, 'retweet')} Icon={\"retweet\"} iconStyle={iconStyle} count={comment} type=\"comment\" />}\r\n          <SocialItm arialbl={networkName} itemId={Post.id} hrefClick={Post.link} Icon={\"eye\"} iconStyle={iconStyle} count={0} type=\"view\" />\r\n        </div>\r\n      </div>\r\n    ) : null;\r\n  }\r\n}","import React, { Suspense, lazy } from \"react\";\r\nimport {  isTagShop, isTagbox } from \"../../../../actions/api\";\r\nimport { isInstaUser } from \"../../../../utils\";\r\nconst Author = lazy(() => import( \"../../Elements/Author/Author\"));\r\nconst Time = lazy(() => import( \"../../Elements/Time/Time\"));\r\nconst Network = lazy(() => import( \"../../Elements/Network/Network\"));\r\n\r\nconst AuthorDetails = ({ Post, CardStyle, ThemeInfo }) => {\r\n  const { author, networkId } = Post\r\n  const { ThemeId } = ThemeInfo\r\n  const username = author.username ? author.username.length > 0 ? `@${author.username}` : `` : '';\r\n  const instaUser =  isInstaUser(author.name);\r\n\r\n  const postAuthor = (CardStyle.author.status && !instaUser) ? true : false;\r\n  const authorSeprator = (CardStyle.author.status && CardStyle.timeStatus && !instaUser && username != '') ? true : false;\r\n  return <div className=\"tb_nc_author_wrapper\" aria-label=\"Author details\" aria-roledescription=\"post author details\">\r\n    <div className={`tb_nc_author`}>\r\n      {postAuthor ? <Suspense fallback={<div className=\"tb_nc_author_profile\"></div>}><Author author={author} network={Post.network} networkId={networkId} authorClass={'tb_nc_author_profile'} /> </Suspense> : ''}\r\n      <div className=\"tb_nc_author_info\">\r\n        {postAuthor ? <div className=\"tb_nc_authorname\">{author.name}</div> : ''}\r\n        <div className=\"tb_nc_post_info\">\r\n          {postAuthor && username != '' ? <div className=\"tb_nc_username\">{username}</div> : ''}\r\n          {authorSeprator ? <div className=\"tb_nc_seprator\"><div></div></div> : ''}\r\n          {CardStyle.timeStatus ? <Suspense fallback={<></>}>\r\n          <Time createdAt={Post.createdAt} timeClass={`tb_nc_time tb-cTBfont-${CardStyle.author.variant}`} /></Suspense> : ''}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    { [59,83].includes(ThemeId) || (ThemeId == 19 && (isTagShop || isTagbox))\r\n      ?\r\n      <div className=\"tb_nc_social_\">\r\n        <Suspense fallback={<div style={{minWidth:20}}></div>}>\r\n        <Network networkClass={'tb_nc_social_ico'} networkId={networkId} iconStyle={CardStyle.icon} /></Suspense>\r\n      </div>\r\n      : null}\r\n  </div>\r\n}\r\nexport default AuthorDetails","import React from \"react\";\r\nimport { isTagShop, isTagbox } from \"../../../../actions/api\";\r\nimport Image from \"../../Elements/Media/Image\";\r\nimport Video from \"../../Elements/Media/Video\";\r\nimport MediaIcon from \"../../Elements/MediaIcon/MediaIcon\";\r\nimport Network from \"../../Elements/Network/Network\";\r\n\r\nconst Media = ({ Post, ThemeStyle, CardStyle, ThemeInfo, index }) => {\r\n  const autoPlay = (([3, 5].includes(Post.type)) && ThemeStyle.autoPlay == 1) || false\r\n  const size = isTagbox && CardStyle.style.ratio ? CardStyle.style.ratio : false\r\n  const networkOnTop =  !ThemeInfo.id == 59 && !isTagShop && !isTagbox ? true : false\r\n\r\n  return <div className=\"tb_nc_media_wrap\">\r\n    {networkOnTop ?\r\n      <div className=\"tb_nc_social_ tb_nc_social_top_\">\r\n        <Network networkClass={'tb_nc_social_ico'} networkId={Post.network.id}  network={Post.network} iconStyle={CardStyle.icon} />\r\n      </div> : null}\r\n      <MediaIcon Post={Post} IconClass={networkOnTop ? 'tb_nc_media_icon_te' : 'tb_nc_media_icon'} show={true}  hideVideo={autoPlay} /> \r\n     {autoPlay  ?\r\n      <Video VideoClass=\"tb_nc_video\" Post={Post} size={size} isCover={true} controls={false} autoPlay={autoPlay} muted={true} index={index} />\r\n      :\r\n      <Image ImageClass=\"tb_nc_image\" Post={Post} size={size} hotspot={isTagShop} blurBG={false} observer={true} index={index} />\r\n    }\r\n  </div>\r\n}\r\nexport default Media","import React, { useEffect, useRef, lazy } from 'react'\r\nimport { PostTrimContent, themeImpressionTracking } from \"../../../../utils\";\r\nimport { isTagShop, isTagbox } from \"../../../../actions/api\";\r\nimport AuthorDetails from \"./AuthorDetails\";\r\nimport Media from \"./Media\";\r\nimport PostContent from \"../../Elements/PostContent/PostContent\";\r\nimport SocialAction from \"../../Elements/SocialAction/SocialAction\";\r\nimport ShareOnHover from \"../../Elements/ShareOnHover/ShareOnHover\";\r\nimport CTAButton from \"../../Elements/CTA/CtaButton\";\r\nimport Rating from \"../../Elements/Rating/Rating\";\r\n\r\nconst trim_content_length = 200;\r\n\r\nconst Card = ({ adjustWidth, clickToShowPopUp, index, onClickToCTA, onClickPopUpSlider, ThemeStyle, CardStyle, Post, ThemeInfo, counter }) => {\r\n    const postTrack = useRef(null);\r\n    const themeId = ThemeInfo.id;\r\n\r\n    const cardSize = { width: `${adjustWidth}%`, padding: CardStyle.style.padding / 2};\r\n    const mediaType = Post.type !== 1;\r\n    const rating = Post.rating > 0;\r\n    const contentClass = Post.rating > 0 ? \"tb_nc_rating_content\" : \"tb_nc_content\";\r\n    const textDecorate = Post.type === 1 && CardStyle.style.textDecoration ? \"tb_nc_text_decoration tb_nc_text_post\" : \"\";\r\n    const postTextContent = CardStyle.content.trimcontent ? PostTrimContent(Post.content.text, trim_content_length) : Post.content.text;\r\n\r\n    useEffect(() => {\r\n      if (isTagShop) themeImpressionTracking(postTrack);\r\n    }, []);\r\n\r\n    return (\r\n      <div style={cardSize} className={`tb_nc_post_wrapper ${(isTagbox && themeId == 83) ? `tb_nc_post_gradient tb_nc_gradient-${counter}`: \"\" }`}>\r\n          <div id={`tb_nc_id-${Post.id}`} tb-network={Post.networkId} post-id={Post.referenceId || Post.id} feed-id={Post.feedId} ref={postTrack} tabIndex=\"0\" area-label={postTextContent} role=\"article\">\r\n            <div className=\"tb_nc_post_wrap_in\">\r\n              <div className=\"tb_nc_post_in\" onClick={clickToShowPopUp(index, Post)} role=\"button\" aria-label=\"open detail modal for post\" tabIndex=\"0\">\r\n                <div className=\"tb_nc_post_media_wrapp\" role=\"button\" tabIndex=\"0\" aria-label=\"Pop Up Button\">\r\n                  {Post.share.status ? (\r\n                      <ShareOnHover share={Post.share} shareClass={\"tb_nc_share_container\"} Post={Post} ThemeInfo={ThemeInfo} />\r\n                  ) : null}\r\n                  {mediaType ? (\r\n                    <Media Post={Post} CardStyle={CardStyle} ThemeStyle={ThemeStyle} ThemeInfo={ThemeInfo} index={index} />\r\n                  ) : null}\r\n                  {rating  && themeId != 59 && !isTagShop ? (\r\n                    <div className=\"tb_nc_rating__\">\r\n                      <Rating rating={Post.rating} networkId={Post.networkId} />\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"tb_nc_contant_wrapper\">\r\n                <AuthorDetails Post={Post} CardStyle={CardStyle} ThemeStyle={ThemeStyle} mediaType={mediaType} ThemeInfo={ThemeInfo}/>\r\n                  { Post.ctaStatus ?\r\n                      <div className=\"tb_nc_post_cta\">\r\n                        <CTAButton ctaClass={\"tb_nc_post_cta_btn\"} cta={Post} Post={Post} onClickToCTA={onClickToCTA} />\r\n                      </div>\r\n                  : null }\r\n                  {rating && isTagShop ? (\r\n                      <div className=\"tb_nc_rating__\">\r\n                        <Rating rating={Post.rating} networkId={Post.networkId} />\r\n                      </div>\r\n                    ) : null}\r\n                  {((CardStyle.content.status) || Post.type === 1) ? (\r\n                      <PostContent contentClass={`${contentClass} ${textDecorate}`} Post={Post} content={postTextContent} CardStyle={CardStyle} contentTitle={Post.content.title} /> \r\n                  ) : null}\r\n                \r\n                </div>\r\n                {CardStyle.actionStatus ? (\r\n                    <SocialAction Post={Post} CardStyle={CardStyle} actionClass={`tb_nc_social_action__`}/>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\nexport default Card"],"names":["DefaultNetwork","React","Network","PureComponent","render","networkId","networkClass","iconStyle","this","props","default","includes","_jsx","className","GET_NETWORK_ICON","GET_NETWORK_NAME","children","Suspense","fallback","_Fragment","NetworkAction","networkID","postID","Link","action","actions","like","convertToAtob","comment","retweet","SocialItm","_ref","arialbl","hrefClick","Icon","count","itemId","type","role","_jsxs","onClick","event","stopPropagation","window","open","kFormatter","tabIndex","SocialAction","componentDidMount","_document$querySelect","Post","socialActionId","id","document","querySelector","addEventListener","key","preventDefault","click","e","console","log","CardStyle","actionClass","icon","style","color","likeIcon","likeIconStatus","commentIconStatus","networkName","postId","link","Author","lazy","Time","ThemeInfo","author","ThemeId","username","length","instaUser","isInstaUser","name","postAuthor","status","authorSeprator","timeStatus","network","authorClass","createdAt","timeClass","variant","isTagShop","isTagbox","minWidth","ThemeStyle","index","autoPlay","size","ratio","networkOnTop","MediaIcon","IconClass","show","hideVideo","Video","VideoClass","isCover","controls","muted","Image","ImageClass","hotspot","blurBG","observer","adjustWidth","clickToShowPopUp","onClickToCTA","onClickPopUpSlider","counter","postTrack","useRef","themeId","cardSize","width","padding","mediaType","rating","contentClass","textDecorate","textDecoration","postTextContent","content","trimcontent","PostTrimContent","text","useEffect","themeImpressionTracking","referenceId","feedId","ref","share","ShareOnHover","shareClass","Media","Rating","AuthorDetails","ctaStatus","CTAButton","ctaClass","cta","PostContent","contentTitle","title","actionStatus"],"sourceRoot":""}