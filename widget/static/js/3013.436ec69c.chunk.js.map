{"version":3,"file":"static/js/3013.436ec69c.chunk.js","mappings":"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","sources":["actions/ImageRenewAction.js","app/Components/ReelPopUp/Elements/ReelMediaSlider.js","app/Themes/Elements/Hotspot/Hotspot.js","app/Themes/Elements/Media/Image.js"],"sourcesContent":["import { CloudUrl, NO_IMAGE } from \"../constants\";\r\nimport store from \"../store\";\r\nimport { isTagbox, isTagShop, tbox, UPDATE_STATUS } from \"./api\";\r\nimport { isUpdateFrom } from \"./commonAction\";\r\nimport HttpClient from \"./http-client\";\r\n\r\nlet imgQue = [];\r\nexport let dataSource;\r\n \r\nexport const checkImageUrl = async (url) =>\r\n    [\"taggbox.com\", \"tagbox.com\", \"tagembed.com\", \"socialwalls.com\"].some((item) => url.includes(item)) || \r\n    (await fetch(url).then((res) => res.ok).catch(() => false));\r\n \r\n\r\nexport const POPUP_IMAGE_RENEW_REQUEST = (event) => {\r\n    event.persist();\r\n    const target = event.target;\r\n    const { network, itemId, themeId } = target.dataset;\r\n    if (network == 1 && ![3, 4, 16, 47, 50, 55, 60].includes(themeId)) {\r\n        const element = document.querySelector(`.tb_media-${itemId}`);\r\n        if (element) element.style.display = \"none\";\r\n    } else if (!imgQue.includes(event)) {\r\n        imgQue.push(event);\r\n    }\r\n    if (imgQue.length === 1) processImageInQueue();\r\n};\r\n\r\nconst formatPostData = (data, wall, res) => {\r\n    const { UserPlan, Wall } = wall;\r\n    return {\r\n        table_name: UserPlan?.db_table,\r\n        ...data,\r\n        ...(res?.length ? {\r\n            feedId: res[0]?.feedId,\r\n            type: res[0]?.type,\r\n            link: res[0]?.link,\r\n            postFile: res[0]?.postFile,\r\n            mediaFile: res[0]?.mediaFile,\r\n        } : {}),\r\n        url: Wall?.url,\r\n    };\r\n};\r\n\r\n\r\n// export const updateInstagramPodstImage = (data) => {\r\n//     const { postData, wall } = store.getState().appData;\r\n//     const res = postData?.completeDataObject\r\n//         ? Object.values(postData.completeDataObject).filter((val) => val.id === data.postId)\r\n//         : [];\r\n\r\n//     if (res.length) {\r\n//         const dataFormatted = formatPostData(data, wall, res);\r\n//         checkImageUrl(res[0]?.postFileNew)\r\n//             .then((isValid) => {\r\n//                 if (!isValid) {\r\n//                     new HttpClient()\r\n//                         .post(UPDATE_STATUS, dataFormatted, { headers: isUpdateFrom })\r\n//                         .catch(console.error);\r\n//                 }\r\n//             })\r\n//             .catch(({ response }) => console.log(response));\r\n//     }\r\n// };\r\n\r\n\r\nconst processImageInQueue = async () => {\r\n    const { postData, wall } = store.getState().appData;\r\n    if (!wall || !Object.keys(wall).length || !imgQue.length) return;\r\n\r\n    const { User, Wall } = wall;\r\n    const ownerId = User?.id;\r\n    const wallId = isTagShop && dataSource === \"website\" && Wall?.wallId ? Wall.wallId : Wall?.id;\r\n\r\n    const target = imgQue[0]?.target;\r\n    const { filterId, network, itemId, load } = target.dataset;\r\n    const imgTargets = document.querySelector(`img[data-item-id=\"${itemId}\"]`);\r\n    const res = postData?.completeDataObject\r\n        ? Object.values(postData.completeDataObject).filter((val) => val.id === itemId)\r\n        : [];\r\n\r\n    if (res?.length) {\r\n        const isValid = await checkImageUrl(res[0]?.postFileNew);\r\n        if (!isValid && imgTargets) {\r\n            if (\r\n                [2, 18, 3, 28].includes(+network) &&\r\n                load === \"0\" &&\r\n                filterId !== \"34\" &&\r\n                !target.src.includes(\"cloud.taggbox.com\")\r\n            ) {\r\n                const dataFormatted = formatPostData(\r\n                    {\r\n                        wallId,\r\n                        postId: itemId,\r\n                        ownerId,\r\n                    },\r\n                    wall,\r\n                    res\r\n                );\r\n                try {\r\n                    const { data } = await new HttpClient().post(UPDATE_STATUS, dataFormatted, { headers: isUpdateFrom });\r\n                    const baseUrl = isTagShop || isTagbox ? \"\" : `https://images.${tbox}/`;\r\n                    target.src = network === \"18\" ? `${baseUrl}${data.media}` : data.media;\r\n                } catch {\r\n                    target.src = NO_IMAGE;\r\n                } finally {\r\n                    dataLoad(target);\r\n                }\r\n            } else {\r\n                target.src = NO_IMAGE;\r\n                dataLoad(target);\r\n            }\r\n            imgQue.shift();\r\n            processImageInQueue();\r\n        } else {\r\n            const src = `${CloudUrl}/media/images/no-image.svg`;\r\n            target.src = src;\r\n            target.srcset = src;\r\n            dataLoad(target);\r\n            imgQue.shift();\r\n        }\r\n    }\r\n};\r\n\r\nconst dataLoad = (target)=> target.setAttribute(\"data-load\", \"1\")\r\n \r\n\r\n\r\n","import React, { PureComponent, Suspense } from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\nimport { isTagShop } from \"../../../../actions/api\";\r\nimport Image from \"../../../Themes/Elements/Media/Image\";\r\nconst ReelVideo = React.lazy(() => import(\"./ReelVideo\"));\r\n\r\nconst mediaDimension = JSON.parse(\r\n  window.localStorage.getItem(\"mediaDimension\")\r\n);\r\nexport default class ReelMediaSlider extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mediaSize: {\r\n        height: mediaDimension != null ? mediaDimension[0] : \"85vh\",\r\n        width: mediaDimension != null ? mediaDimension[1] : \"85vh\",\r\n      }\r\n    }\r\n  }\r\n  mediaSize = (mediaSize) => this.props.mediaSizeCallback(mediaSize);\r\n  render() {\r\n    const { Post, wallID, size, onUpdateProdImgIdx } = this.props;\r\n    const muted = false;\r\n    const pagination = {\r\n      clickable: true,\r\n      bulletClass: `tb_rp_bullet`,\r\n    };\r\n\r\n    return (\r\n      <div key={Post.id} className=\"tb_rp_media_holder\">\r\n        <Swiper\r\n          ref={this.splideRef}\r\n          direction=\"horizontal\"\r\n          passiveListeners={true}\r\n          pagination={pagination}\r\n          onSlideChange={(swiper) => onUpdateProdImgIdx(swiper.activeIndex)}\r\n        >\r\n          {Post.mediaList.map((imageItem, index) => (\r\n            <SwiperSlide key={index}>\r\n              {({ isActive }) => (\r\n                <>\r\n                  {[2, 4].includes(imageItem.type) || !isActive ? (\r\n                    <Image\r\n                      ImageClass=\"tb_rp_image\"\r\n                      Post={Post}\r\n                      mediaOnly={imageItem}\r\n                      size={size}\r\n                      multiPic={1}\r\n                      multiKey={index}\r\n                      hotspot={imageItem.product.length ? isTagShop : false}\r\n                    />\r\n                  ) : [3, 5].includes(imageItem.type) ? (\r\n                      <ReelVideo\r\n                        VideoClass=\"tb_rp_video\"\r\n                        media={imageItem.video.full}\r\n                        mediaPoster={imageItem.image.original}\r\n                        Post={{...Post, media : { video : imageItem.video , image : imageItem.image }}}\r\n                        wallID={wallID}\r\n                        size={size}\r\n                        isCover={true}\r\n                        controls={false}\r\n                        autoPlay={isActive}\r\n                        muted={muted}\r\n                        index={index}\r\n                      />\r\n                  ) : null}\r\n                </>\r\n              )}\r\n            </SwiperSlide>\r\n          ))}\r\n        </Swiper>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { memo, useCallback, useMemo, useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { createPortal } from \"react-dom\";\r\nimport { Tooltip } from 'react-tooltip';\r\nimport \"./scss/Hotspot.scss\"; \r\nimport { generateUniqueString } from \"../../../../utils/Common\";\r\nimport { themePostTracking } from \"../../../../actions/moredataAction\";\r\n\r\n// Memoized components to prevent unnecessary re-renders\r\nconst TooltipContent = memo(({ item }) => {\r\n  const hasDiscount = item.discount > 0 && item.discount !== item.price;\r\n  const displayPrice = item.discount > 0 ? item.discount : item.price;\r\n  \r\n  return (\r\n    <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"tb_tooltip_wrap\">\r\n      <div className=\"tb_p_tooltip_title\">{item.title}</div>\r\n      {hasDiscount && (\r\n        <div className=\"tb_p_tooltip_price tb_price_disabled\">\r\n          {item.currency}{item.price}\r\n        </div>\r\n      )}\r\n      {(item.price > 0 || item.discount > 0) && (\r\n        <div className=\"tb_p_tooltip_price\">\r\n          {item.currency}{displayPrice}\r\n        </div>\r\n      )}\r\n    </a>\r\n  );\r\n});\r\n\r\nconst HotspotComponent = ({ products, appData, Post }) => {\r\n  const [activeIndex, setActiveIndex] = useState(null);\r\n  \r\n  // Memoized hotspot configuration\r\n  const hotspotConfig = useMemo(() => (\r\n    appData?.wall?.ProductSetting?.Hotspot || {}\r\n  ), [appData]);\r\n\r\n  // Stable event handlers\r\n  const handleTracking = useCallback((product) => {\r\n    if (appData?.wall) {\r\n      themePostTracking({\r\n      });\r\n    }\r\n  }, [appData, Post]);\r\n\r\n  const handleHotspotClick = useCallback((event, item) => {\r\n    event.stopPropagation();\r\n    handleTracking(item);\r\n    window.open(item.url, '_blank');\r\n  }, [handleTracking]);\r\n\r\n  if (!hotspotConfig?.status) return null;\r\n\r\n  return products.map((item, index) => {\r\n    const tooltipId = `hotspot-${item.id}-${generateUniqueString()}`;\r\n    const isActive = activeIndex === index;\r\n    \r\n    return (\r\n      <div key={`${item.id}-${index}`} id={tooltipId} className={`tb_hotspot_dot${isActive ? ' tb_hotspot_active_' : ''}`} role=\"button\" style={{ \r\n          top: item.hotspot.top, \r\n          left: item.hotspot.left \r\n        }}\r\n        onMouseEnter={() => setActiveIndex(index)} onMouseLeave={() => setActiveIndex(null)} onClick={(e) => handleHotspotClick(e, item)} data-tooltip-offset={7} >\r\n        <div className={`tb_hotspot__ ${hotspotConfig.type === 0 ? 'tb_hotspot_ani__' : ''}`}>\r\n          {index + 1}\r\n        </div>\r\n        \r\n        {createPortal(\r\n          <Tooltip className=\"tb_pro_tooltip\" anchorSelect={`#${tooltipId}`} clickable >\r\n            <TooltipContent item={item} />\r\n          </Tooltip>,\r\n          document.body\r\n        )}\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\n// Memoize the main component\r\nconst MemoizedHotspot = memo(HotspotComponent);\r\n\r\n// Optimized Redux connection\r\nconst mapState = (state) => ({ appData: state.appData });\r\nexport default connect(mapState)(MemoizedHotspot);","import React, { PureComponent, Suspense } from \"react\"; \r\nimport { GET_IMAGE_SIZE } from '../../../../utils/Common'\r\nimport { CloudUrl } from \"../../../../constants\";\r\nimport { POPUP_IMAGE_RENEW_REQUEST } from \"../../../../actions/ImageRenewAction\";\r\nimport Hotspot from '../Hotspot/Hotspot';\r\nexport default class Image extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        const { mediaOnly, Post } = props;\r\n        this.state = {\r\n            height: mediaOnly?.height || Post?.media?.height || 0,\r\n            width: mediaOnly?.width || Post?.media?.width || 0,\r\n            currentHeight: 0,\r\n            currentWidth: 0,\r\n        };\r\n        this.mediaRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        requestAnimationFrame(() => {\r\n            this.updateMediaDimensions();\r\n            this.mediaSizeCalc();\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    updateMediaDimensions = () => {\r\n        if (this.mediaRef.current) {\r\n            const { offsetHeight, offsetWidth } = this.mediaRef.current;\r\n            this.setState({\r\n                currentHeight: offsetHeight,\r\n                currentWidth: offsetWidth,\r\n            });\r\n        }\r\n    };\r\n\r\n    mediaSizeCalc = async () => {\r\n        const { Post, mediaOnly } = this.props;\r\n        const media = mediaOnly ? mediaOnly : Post.media;\r\n        if (!media?.height && !media?.width) {\r\n            try {\r\n                const { width, height } = await GET_IMAGE_SIZE(media?.image?.small);\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        height: height,\r\n                        width: width,\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                if (this._isMounted) {\r\n                    this.setState({\r\n                        height: 300,\r\n                        width: 300,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { height, width } = this.state;\r\n        if (!height || !width) {\r\n            return null; // Or a loading spinner\r\n        }\r\n\r\n        const { ImageClass, Post, hotspot, size, blurBG, ProductSetting, mediaOnly, inView, multiKey } = this.props;\r\n        const { id, link, products } = Post;\r\n        const media = mediaOnly ? mediaOnly : Post?.media;\r\n        const { currentWidth, currentHeight } = this.state;\r\n\r\n        const paddingSize = size || (height * 100) / width;\r\n        const imageStyle = {\r\n            paddingBottom: paddingSize === 1 ? null : `${paddingSize}%`,\r\n        };\r\n\r\n        const blurImgStyle = {\r\n            backgroundImage: inView ? `url(${media?.image?.small})` : null,\r\n        };\r\n\r\n        const newWidth = width > height ? '100%' : `${(width / height) * 100}%`;\r\n        const newHeight = width > height ? `${(height / width) * 100}%` : '100%';\r\n\r\n        const isHotspot = Post.isProduct && hotspot;\r\n        const hotspotImgStyle = { width: isHotspot && size ? newWidth : null, height: isHotspot && size ? newHeight : null };\r\n        \r\n        return (\r\n            <div className={`${ImageClass}_wrap_`} style={imageStyle} ref={this.mediaRef}>\r\n                {isHotspot && blurBG ? <div className=\"tb_blur_bg_\" style={blurImgStyle}></div> : null}\r\n                <div className={`${ImageClass}_wrap_in`} style={hotspotImgStyle}>\r\n                    {isHotspot  ? (\r\n                        <Hotspot products={this.props.multiPic ? Post.mediaList[multiKey].product : products} ProductSetting={ProductSetting} hotspot={Post.hotspot} dataPost={Post} />\r\n                    ) : null}\r\n                    <img\r\n                        key={`${id}-${height}-${width}-${inView}`}\r\n                        className={`${ImageClass} tb_media-${id}`}\r\n                        src={media?.image?.small}\r\n                        srcSet={`${media?.image?.small} 1x, ${media?.image?.large} 2x`}\r\n                        sizes={`${currentWidth}px`}\r\n                        loading={inView ? \"eager\" : \"lazy\"}\r\n                        decoding=\"async\"\r\n                        fetchPriority={inView ? \"high\" : \"low\"}\r\n                        data-id={id}\r\n                        height={currentHeight}\r\n                        width={currentWidth}\r\n                        data-height={height}\r\n                        data-width={width}\r\n                        data-link={link}\r\n                        onLoad={this.onLoad}\r\n                        onError={(e) => {\r\n                            e.target.src = `${CloudUrl}/media/error/no-image.svg`;\r\n                            e.target.srcset = `${CloudUrl}/media/error/no-image.svg`;\r\n                            POPUP_IMAGE_RENEW_REQUEST(e);\r\n                        }}\r\n                        alt={media?.title}\r\n                        title={media?.title}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"],"names":["imgQue","POPUP_IMAGE_RENEW_REQUEST","event","persist","target","network","itemId","themeId","dataset","includes","push","element","document","querySelector","style","display","length","processImageInQueue","async","_imgQue$","postData","wall","store","getState","appData","Object","keys","User","Wall","ownerId","id","wallId","isTagShop","filterId","load","imgTargets","res","completeDataObject","values","filter","val","_res$6","isValid","some","item","url","fetch","then","ok","catch","checkImageUrl","postFileNew","src","dataFormatted","formatPostData","data","_res$","_res$2","_res$3","_res$4","_res$5","UserPlan","table_name","db_table","feedId","type","link","postFile","mediaFile","postId","HttpClient","post","UPDATE_STATUS","headers","isUpdateFrom","baseUrl","isTagbox","tbox","media","NO_IMAGE","dataLoad","shift","CloudUrl","srcset","setAttribute","ReelVideo","React","mediaDimension","JSON","parse","window","localStorage","getItem","ReelMediaSlider","PureComponent","constructor","props","super","mediaSize","this","mediaSizeCallback","state","height","width","render","Post","wallID","size","onUpdateProdImgIdx","pagination","clickable","bulletClass","_jsx","className","children","Swiper","ref","splideRef","direction","passiveListeners","onSlideChange","swiper","activeIndex","mediaList","map","imageItem","index","SwiperSlide","_ref","isActive","_Fragment","Image","ImageClass","mediaOnly","multiPic","multiKey","hotspot","product","VideoClass","video","full","mediaPoster","image","original","isCover","controls","autoPlay","muted","TooltipContent","memo","hasDiscount","discount","price","displayPrice","_jsxs","href","rel","title","currency","HotspotComponent","_ref2","products","setActiveIndex","useState","hotspotConfig","useMemo","_appData$wall","_appData$wall$Product","ProductSetting","Hotspot","handleTracking","useCallback","themePostTracking","handleHotspotClick","stopPropagation","open","status","tooltipId","generateUniqueString","role","top","left","onMouseEnter","onMouseLeave","onClick","e","createPortal","Tooltip","anchorSelect","body","MemoizedHotspot","connect","_Post$media","_Post$media2","updateMediaDimensions","mediaRef","current","offsetHeight","offsetWidth","setState","currentHeight","currentWidth","mediaSizeCalc","_media$image","GET_IMAGE_SIZE","small","_isMounted","error","componentDidMount","requestAnimationFrame","componentWillUnmount","_media$image2","_media$image3","_media$image4","_media$image5","blurBG","inView","paddingSize","imageStyle","paddingBottom","blurImgStyle","backgroundImage","newWidth","newHeight","isHotspot","isProduct","hotspotImgStyle","dataPost","srcSet","large","sizes","loading","decoding","fetchPriority","onLoad","onError","alt"],"sourceRoot":""}