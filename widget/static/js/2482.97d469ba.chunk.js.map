{"version":3,"file":"static/js/2482.97d469ba.chunk.js","mappings":"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","sources":["app/Themes/Elements/Network/Network.js","app/Themes/Elements/PostContent/PostContent.js","app/Themes/Elements/Rating/Rating.js","app/Themes/Elements/ShareOnHover/ShareOnHover.js","app/Themes/NewsCard/Elements/AuthorDetails.js","app/Themes/NewsCard/Elements/Media.js","app/Themes/NewsCard/Elements/Card.js"],"sourcesContent":["import React, { PureComponent, Suspense } from \"react\";\r\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from \"../../../../utils/Network\";\r\nimport \"./IconDefaultColor.scss\"\r\nconst DefaultNetwork = React.lazy(() => import(\"./DefaultNetwork\"));\r\n\r\nexport default class Network extends PureComponent {\r\n  render() {\r\n    const { networkId, networkClass, iconStyle, isPopUp } = this.props;\r\n    const defaultNetworks = [7, 4, 36]\r\n    const isDefaultIcon = iconStyle?.default || (defaultNetworks.includes(networkId))\r\n    return (isDefaultIcon ?  <Suspense fallback={<></>}><DefaultNetwork networkId={networkId} networkClass={networkClass} /></Suspense> : <div className={`${networkClass} tb__icon tb-${GET_NETWORK_ICON(networkId)}`} aria-label={`post network ${GET_NETWORK_NAME(networkId)}`}><div></div></div>);\r\n  }\r\n}\r\n","import React, { PureComponent, Suspense } from \"react\";\r\nimport ReactHtmlParser from 'react-html-parser'; \r\nimport { isTagShop } from \"../../../../actions/api\";\r\nimport { STRING_TO_URL_CONVERT } from \"../../../../utils/Common\";\r\n// import PostContentHighlight from \"./PostContentHighlight\";\r\n\r\nexport default class PostContent extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.contentRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n      setTimeout(() => {\r\n        if (this.contentRef?.current?.clientHeight) {\r\n          const contentHeight = this.contentRef?.current?.clientHeight || 0;\r\n          if (this.props.contentRefCallBack) this.props.contentRefCallBack(contentHeight)\r\n        }\r\n      }, 100);\r\n  }\r\n\r\n  render() {\r\n    const { CardStyle, contentClass, content, contentTitle, maxLines, isReadMore } = this.props;\r\n    const trimLines = CardStyle.content.trimcontent && !isTagShop ? CardStyle.content.trimcontent : 0;\r\n    const truncateStyle = {\r\n      WebkitLineClamp: maxLines,\r\n      textAlign: CardStyle.style.textAlign\r\n    };\r\n    const contentData = STRING_TO_URL_CONVERT(content);\r\n    const trimClasses = `${trimLines ? ` tb_content_line-${trimLines}` : ``}`\r\n    const contentClasses = `${contentClass} ${!isReadMore ? trimClasses : ''} tb-cTBfont-${CardStyle.style.variant}`\r\n    return (\r\n      <div className={contentClasses} ref={this.contentRef} style={truncateStyle}>\r\n        {contentTitle ? <div className=\"tb_bold_txt__\">{ReactHtmlParser(contentTitle)}</div> : null}\r\n        {ReactHtmlParser(contentData)}\r\n        {/* <PostContentHighlight content={contentData} CardStyle={CardStyle} /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport \"./scss/rating.scss\";\r\n\r\nconst NetworkStar = ({ networkId }) => {\r\n    const networkStyles = {\r\n        3: { className: 'tb_rating_ico__ tb__icon tb-default-star', color: '#1b74e4' },\r\n        19: { className: 'tb_rating_ico__ tb__icon tb-yelp-star', color: '#e00707' },\r\n        23: { className: 'tb_rating_ico__ tb__icon tb-default-star', color: '#ff385c' },\r\n        28: { className: 'tb_rating_ico__ tb__icon tb-default-star', color: '#F8B90C' },\r\n        29: { className: 'tb_rating_ico__ tb__icon tb-default-star', color: '#613983' },\r\n        33: { className: 'tb_rating_ico__ tb__icon tb-trustpilot', color: '#000' },\r\n        35: { className: 'tb_rating_ico__ tb__icon tb-star-fill', color: '#34E0A1' },\r\n    };\r\n\r\n    const { className, color } = networkStyles[networkId] || {\r\n        className: 'tb_rating_ico__ tb__icon tb-default-star',\r\n        color: '#F8B90C',\r\n    };\r\n\r\n    return <div className={className} style={{ color }} tb-network={networkId}><div></div></div>;\r\n};\r\n\r\nconst ThemeStar = ({ ThemeID, networkId }) => {\r\n    const themeStyles = {\r\n        59: { className: 'tb_rating_ico__ tb__icon tb-star-fill', color: '#34E0A1' },\r\n    };\r\n\r\n    const { className, color } = themeStyles[ThemeID] || {\r\n        className: 'tb_rating_ico__ tb__icon tb-default-star',\r\n        color: '#F8B90C',\r\n    };\r\n\r\n    return <div className={className} style={{ color }} tb-network={networkId}></div>;\r\n};\r\nexport default class Rating extends PureComponent {\r\n    render() {\r\n        const { rating, networkId, ThemeID } = this.props;\r\n        return (\r\n            <div className=\"tb__rating__\" aria-hidden>\r\n                {\r\n                    rating ? [...Array(rating)].map((el, index) => ThemeID ? <ThemeStar key={index} ThemeID={ThemeID} networkId={networkId} /> : <NetworkStar key={index} networkId={networkId} /> ) : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport { gtmAnalytics, themePostTracking } from \"../../../../actions/moredataAction\";\r\nimport './scss/ShareOnHover.scss'\r\n\r\nexport default class ShareOnHover extends PureComponent {\r\n  onClickData = (shareURL) => event => {\r\n    const { Post, ThemeInfo } = this.props;\r\n    event.stopPropagation();\r\n      themePostTracking({\r\n      type: 2,\r\n      action: 2,\r\n      wall: ThemeInfo.wallID,\r\n      feed: Post.feedId,\r\n      post: Post.referenceId ? Post.referenceId : Post.id,\r\n      owner: ThemeInfo.ownerId\r\n    })\r\n    gtmAnalytics(\"Tagbox\", \"shareUrl\", \"shareUrl\", shareURL)\r\n    window.open(shareURL, \"_blank\")\r\n  }\r\n\r\n  render() {\r\n    const { shareClass, Post } = this.props;\r\n    const {facebook,twitter, linkedin } = Post?.share;\r\n    \r\n    const GetShareIncon=({shareOn, icon})=>{\r\n      return <div className=\"tb_share_icon_list\">\r\n            <div onClick={this.onClickData(shareOn)} className={`tb_share_ico__ tb__icon tb-${icon}`} title={icon}><div></div></div>\r\n      </div>\r\n    }\r\n    return <div className={`tb_share_wrapper ${shareClass}`}>\r\n      <div className={`tb_share_button_ tb__icon ${'tb-share'}`}><div></div></div>\r\n      <div className=\"tb_share_icon_list_wrap\">\r\n        {facebook ? <GetShareIncon shareOn={facebook} icon={'facebook'} />  : ''}\r\n        {twitter  ? <GetShareIncon shareOn={twitter} icon={'twitter'} />  : ''}\r\n        {linkedin ? <GetShareIncon shareOn={linkedin} icon={'linkedin'} />  : ''}\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n","import React, { Suspense, lazy } from \"react\";\r\nimport { isInstaUser } from \"../../../../utils\";\r\nconst Author = lazy(() => import( \"../../Elements/Author/Author\"));\r\nconst Time = lazy(() => import( \"../../Elements/Time/Time\"));\r\nconst Network = lazy(() => import( \"../../Elements/Network/Network\"));\r\nconst Seprator = lazy(() => import( \"../../Elements/Seprator/Seprator\"));\r\n\r\nconst AuthorDetails = ({ Post, CardStyle, ThemeInfo }) => {\r\n  const { author, networkId } = Post\r\n  const { ThemeId } = ThemeInfo.id\r\n  const username = author.username ? author.username.length > 0 ? `@${author.username}` : `` : '';\r\n  const instaUser =  isInstaUser(author.name);\r\n\r\n  const postAuthor = (CardStyle.author.status && !instaUser) ? true : false;\r\n  const authorSeprator = (CardStyle.author.status && CardStyle.timeStatus && !instaUser && username != '') ? true : false;\r\n  return <div className=\"tb_nc_author_wrapper\" aria-label=\"Author details\" aria-roledescription=\"post author details\">\r\n    <div className={`tb_nc_author`}>\r\n      {postAuthor ? <Suspense fallback={<div className=\"tb_nc_author_profile\"></div>}><Author author={author} network={Post.network} networkId={networkId} authorClass={'tb_nc_author_profile'} /> </Suspense> : ''}\r\n      <div className=\"tb_nc_author_info\">\r\n        {postAuthor ? <div className=\"tb_nc_authorname\">{author.name}</div> : ''}\r\n        <div className=\"tb_nc_post_info\">\r\n          {postAuthor && username != '' ? <div className=\"tb_nc_username\">{username}</div> : ''}\r\n          {authorSeprator ? <Suspense fallback={<div></div>}><Seprator sepClass={`tb_nc_seprator`} /></Suspense> : ''}\r\n          {CardStyle.timeStatus ? <Suspense fallback={<></>}>\r\n          <Time createdAt={Post.createdAt} timeClass={`tb_nc_time tb-cTBfont-${CardStyle.author.variant}`} /></Suspense> : ''}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"tb_nc_social_\">\r\n        <Suspense fallback={<div style={{minWidth:20}}></div>}>\r\n          <Network networkClass={'tb_nc_social_ico'} networkId={networkId} iconStyle={CardStyle.icon} />\r\n        </Suspense>\r\n      </div>\r\n  </div>\r\n}\r\nexport default AuthorDetails","import React from \"react\";\r\nimport { isTagShop, isTagbox } from \"../../../../actions/api\";\r\nimport Image from \"../../Elements/Media/Image\";\r\nimport Video from \"../../Elements/Media/Video\";\r\nimport MediaIcon from \"../../Elements/MediaIcon/MediaIcon\";\r\nimport Network from \"../../Elements/Network/Network\";\r\n\r\nconst Media = ({ Post, ThemeStyle, CardStyle, ThemeInfo, index, inView }) => {\r\n  const autoPlay = (([3, 5].includes(Post.type)) && ThemeStyle.autoPlay == 1) || false\r\n  const size = isTagbox && CardStyle.style.ratio ? CardStyle.style.ratio : false\r\n  const networkOnTop =  !ThemeInfo.id == 59 && !isTagShop && !isTagbox ? true : false\r\n\r\n  return <div className=\"tb_nc_media_wrap\">\r\n    {networkOnTop ?\r\n      <div className=\"tb_nc_social_ tb_nc_social_top_\">\r\n        <Network networkClass={'tb_nc_social_ico'} networkId={Post.network.id}  network={Post.network} iconStyle={CardStyle.icon} />\r\n      </div> : null}\r\n      <MediaIcon Post={Post} IconClass={networkOnTop ? 'tb_nc_media_icon_te' : 'tb_nc_media_icon'} show={true}  hideVideo={autoPlay} /> \r\n      {autoPlay  ?\r\n      <Video VideoClass=\"tb_nc_video\" Post={Post} size={size} isCover={true} controls={false} autoPlay={autoPlay} muted={true} index={index} inView={inView} />\r\n      :\r\n      <Image ImageClass=\"tb_nc_image\" Post={Post} size={size} hotspot={isTagShop} blurBG={false} observer={true} index={index} inView={inView} />\r\n    }\r\n  </div>\r\n}\r\nexport default Media","import React, { useRef } from 'react'\r\nimport { PostTrimContent } from \"../../../../utils\";\r\nimport { isTagShop, isTagbox } from \"../../../../actions/api\";\r\nimport AuthorDetails from \"./AuthorDetails\";\r\nimport Media from \"./Media\";\r\nimport PostContent from \"../../Elements/PostContent/PostContent\";\r\nimport SocialAction from \"../../Elements/SocialAction/SocialAction\";\r\nimport ShareOnHover from \"../../Elements/ShareOnHover/ShareOnHover\";\r\nimport CTAButton from \"../../Elements/CTA/CtaButton\";\r\nimport Rating from \"../../Elements/Rating/Rating\";\r\nimport InViewWrapper from '../../Elements/InViewWrapper';\r\n\r\nconst trim_content_length = 200;\r\n\r\nconst Card = ({ adjustWidth, clickToShowPopUp, index, onClickToCTA, onClickPopUpSlider, ThemeStyle, CardStyle, Post, ThemeInfo, counter }) => {\r\n    const themeId = ThemeInfo.id;\r\n    const mediaType = Post.type !== 1;\r\n    const rating = Post.rating > 0;\r\n    const contentClass = Post.rating > 0 ? \"tb_nc_rating_content\" : \"tb_nc_content\";\r\n    const textDecorate = Post.type === 1 && CardStyle.style.textDecoration ? \"tb_nc_text_decoration tb_nc_text_post\" : \"\";\r\n    const postTextContent = CardStyle.content.trimcontent ? PostTrimContent(Post.content.text, trim_content_length) : Post.content.text;\r\n\r\n    return (\r\n      <InViewWrapper>\r\n        {({ ref, inView }) => (\r\n          <div ref={ref} style={{ width: `${adjustWidth}%`, padding: CardStyle.style.padding / 2, opacity: inView ? 1 : 0, transition: inView ? 'opacity .5s ease-in-out' : ''}} className={`tb_nc_post_wrapper${(isTagbox && themeId === 83) ? ` tb_nc_post_gradient tb_nc_gradient-${counter}`: \"\" }`} role=\"button\" aria-label=\"open detail modal for post\" tabIndex=\"0\">\r\n          <div id={`tb_nc_id-${Post.id}`} tb-network={Post.networkId} post-id={Post.referenceId || Post.id} feed-id={Post.feedId} tabIndex=\"0\" area-label={postTextContent} role=\"article\">\r\n            <div className=\"tb_nc_post_wrap_in\">\r\n              <div className=\"tb_nc_post_in\" onClick={clickToShowPopUp(index, Post)} role=\"button\" aria-label=\"open detail modal for post\" tabIndex=\"0\">\r\n                {Post.share.status ? (\r\n                    <ShareOnHover share={Post.share} shareClass={\"tb_nc_share_container\"} Post={Post} ThemeInfo={ThemeInfo} />\r\n                ) : null}\r\n                {mediaType ? (\r\n                  <Media Post={Post} CardStyle={CardStyle} ThemeStyle={ThemeStyle} ThemeInfo={ThemeInfo} index={index} inView={inView} />\r\n                ) : null}\r\n                {rating  && themeId !== 59 && !isTagShop ? (\r\n                  <div className=\"tb_nc_rating__\">\r\n                    <Rating rating={Post.rating} networkId={Post.networkId} />\r\n                  </div>\r\n                ) : null}\r\n                <div className=\"tb_nc_contant_wrapper\">\r\n                <AuthorDetails Post={Post} CardStyle={CardStyle} ThemeStyle={ThemeStyle} mediaType={mediaType} ThemeInfo={ThemeInfo}/>\r\n                  { Post.ctaStatus ?\r\n                      <div className=\"tb_nc_post_cta\">\r\n                        <CTAButton ctaClass={\"tb_nc_post_cta_btn\"} cta={Post} Post={Post} onClickToCTA={onClickToCTA} />\r\n                      </div>\r\n                  : null }\r\n                  {rating && isTagShop ? (\r\n                      <div className=\"tb_nc_rating__\">\r\n                        <Rating rating={Post.rating} networkId={Post.networkId} />\r\n                      </div>\r\n                    ) : null}\r\n                  {(CardStyle.content.status) ? (\r\n                      <PostContent contentClass={`${contentClass} ${textDecorate}`} Post={Post} content={postTextContent} CardStyle={CardStyle} contentTitle={Post.content.title} /> \r\n                  ) : null}\r\n                </div>\r\n                {CardStyle.actionStatus ? (\r\n                    <SocialAction Post={Post} CardStyle={CardStyle} actionClass={`tb_nc_social_action__`}/>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        )}\r\n      </InViewWrapper>\r\n    );\r\n}\r\nexport default Card"],"names":["DefaultNetwork","React","Network","PureComponent","render","networkId","networkClass","iconStyle","isPopUp","this","props","default","includes","_jsx","Suspense","fallback","_Fragment","children","className","GET_NETWORK_ICON","GET_NETWORK_NAME","PostContent","constructor","super","contentRef","componentDidMount","setTimeout","_this$contentRef","_this$contentRef$curr","current","clientHeight","_this$contentRef2","_this$contentRef2$cur","contentHeight","contentRefCallBack","CardStyle","contentClass","content","contentTitle","maxLines","isReadMore","trimLines","trimcontent","isTagShop","truncateStyle","WebkitLineClamp","textAlign","style","contentData","STRING_TO_URL_CONVERT","contentClasses","variant","_jsxs","ref","ReactHtmlParser","NetworkStar","_ref","color","ThemeStar","_ref2","ThemeID","Rating","rating","Array","map","el","index","ShareOnHover","arguments","onClickData","shareURL","event","Post","ThemeInfo","stopPropagation","themePostTracking","type","action","wall","wallID","feed","feedId","post","referenceId","id","owner","ownerId","gtmAnalytics","window","open","shareClass","facebook","twitter","linkedin","share","GetShareIncon","shareOn","icon","onClick","title","Author","lazy","Time","Seprator","author","ThemeId","username","length","instaUser","isInstaUser","name","postAuthor","status","authorSeprator","timeStatus","network","authorClass","sepClass","createdAt","timeClass","minWidth","ThemeStyle","inView","autoPlay","size","isTagbox","ratio","networkOnTop","MediaIcon","IconClass","show","hideVideo","Video","VideoClass","isCover","controls","muted","Image","ImageClass","hotspot","blurBG","observer","adjustWidth","clickToShowPopUp","onClickToCTA","onClickPopUpSlider","counter","themeId","mediaType","textDecorate","textDecoration","postTextContent","PostTrimContent","text","InViewWrapper","width","padding","opacity","transition","role","tabIndex","Media","AuthorDetails","ctaStatus","CTAButton","ctaClass","cta","actionStatus","SocialAction","actionClass"],"sourceRoot":""}