{"version":3,"file":"static/js/748.816ae3b3.chunk.js","mappings":"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","sources":["app/Themes/CollageTheme/Elements/Card.js","app/Themes/CollageTheme/CollageRows.js","app/Themes/CollageTheme/index.js","app/Themes/Elements/Network/Network.js","app/Themes/Elements/ShareOnHover/ShareOnHover.js","app/Themes/Elements/ShopButton/ShopButton.js"],"sourcesContent":["import React, { Suspense, useRef, useEffect } from \"react\";\nimport { PostTrimContent, themeImpressionTracking } from '../../../../utils'\nimport { isTagEmbed, isTagShop, isTagbox } from \"../../../../actions/api\";\nimport { suiteTrack } from '../../../../actions/api'\nimport ShareOnHover from \"../../Elements/ShareOnHover/ShareOnHover\";\nimport Network from \"../../Elements/Network/Network\";\nimport ShopButton from \"../../Elements/ShopButton/ShopButton\";\nconst AuthorDetails = React.lazy(() => import(\"./AuthorDetails\"));\nconst Media = React.lazy(() => import('./Media'));\nconst PostContent = React.lazy(() => import('../../Elements/PostContent/PostContent'));\n\nconst trim_content_length = !isTagEmbed ? 200 : null;\n\n\nconst Card = ({ itemData, personalization, adjustWidth, ThemeRule, clickToShowPopUp, itemIndex, wallID, ownerId, postSizeInPx, wall, onClickPopUpSlider }) => {\n  const postTrack = useRef(null);\n  const mediaType = itemData.type !== 1 ? true : false;\n  const postTextContent = personalization.trimcontent ? PostTrimContent(itemData.content, trim_content_length) : itemData.content\n  const responsiveCardSize2x = postSizeInPx.adjustWidth < 250 ? true : false\n  useEffect(() => {\n    if (suiteTrack || isTagShop) themeImpressionTracking(postTrack);\n  }, []);\n\n  const isHotspot = itemData.hotspot && itemData.ugc_products.length > 0 ? true : false\n  const isShopBtn = isTagShop && (!itemData.hotspot && itemData.ugc_products.length > 0) ? true : false;\n  const themeMode = (ThemeRule.postHover == 0 && isTagShop) ? 'light' : 'dark'\n  useEffect(() => {\n    if (itemData.isPopUp) onClickPopUpSlider(itemIndex, itemData)\n  }, [itemIndex, itemData.isPopUp, itemData]);\n  return <div id={`tb-sp-post-${itemData.id}`} className={`tb_ct_post_wrapper${responsiveCardSize2x ? ' tb_ct_post_wrapper2x' : ''}`} style={{ width: `${adjustWidth}%`, padding: personalization.padding / 2, float: 'left' }} tb-network={itemData.network.id} tb-product={isShopBtn ? 1 : isHotspot ? 2 : 0} tabIndex=\"0\" role=\"article\" aria-label={`Post ${parseInt(itemIndex) + 1},${postTextContent}`} ref={postTrack} post-id={itemData.referenceId ? itemData.referenceId : itemData.id} feed-id={itemData.feedId}>\n    <div className=\"tb_ct_post_in\" onClick={clickToShowPopUp(itemIndex, itemData)} role=\"button\" aria-roledescription=\"Click to open pop up\" tabIndex={\"0\"}>\n      <div className=\"tb_ct_post_media_wrapp\" role=\"button\" tabindex=\"0\" aria-label=\"Pop Up Button\">\n        {itemData.share.status && !isTagShop ? <ShareOnHover share={itemData.share} shareClass={'tb_ct_share_container'} item={itemData} wallID={wallID} ownerId={ownerId} /> : ''}\n        {mediaType ? <Suspense fallback={<></>}><Media key={`img${itemIndex}_${itemData.id}`} itemData={{ ...itemData, postFileNew: itemData.filename }} wallID={wallID} ownerId={ownerId} ThemeID={personalization.widgetTheme} wall={wall} /></Suspense> : ''}\n        {!isHotspot ? <>\n          <div className=\"tb_ct_post_details\">\n            {isTagShop ? <div className=\"tb_ct_social_\">\n              <Network networkClass={'tb_ct_social__ico'} network={itemData.network} isDefault={ThemeRule.iconType === 1 ? true : false} ThemeRule={ThemeRule} Personalization={personalization} />\n              {isShopBtn ? <ShopButton ThemeRule={ThemeRule} btnClass={'tb_ct_btn_wrap'} /> : null}\n            </div> : null}\n          </div>\n          <div className={`tb_ct_post_overlay tb_ct_post_overlay-${themeMode}`}><div></div></div>\n        </> : null}\n      </div>\n    </div>\n  </div>\n}\nexport default Card","import Card from \"./Elements/Card\";\nconst generateCSS = (width, sumPost, postPosition) => {\n    const smallDivWidth = `${width}%`;\n    const floatDirection = sumPost === '1' ? (postPosition === 'right' ? 'left' : 'right') : (postPosition === 'right' ? 'left' : 'right');\n    return { width: smallDivWidth, float: floatDirection };\n}\n\nconst CollageRows = ({ wall, largeDiv, smallDiv, itemData, completeDataObject, parentID, itemIndex, clickToShowPopUp, onClickToCTA, postSizeInPx, adjustWidth, onClickPopUpSlider }) => {\n    const postPosition = wall.ThemeRule.highlightPosition; const sumPost = itemIndex % 2;\n    const largeDivStyle = { width: largeDiv + `%`, float: sumPost == '0' ? (postPosition == 'right' ? 'right' : 'left') : postPosition == 'right' ? 'left' : 'right' };\n    const smallDivStyle = { width: smallDiv + `%`, float: sumPost == '1' ? (postPosition == 'right' ? 'left' : 'right') : postPosition == 'right' ? 'left' : 'right' }\n\n    return (itemData && itemData.length > 0) ? <div className=\"ts_cs_post_row\" style={{ width: `100%` }}>\n        <div className=\"ts_cs_post_large\" style={largeDivStyle}><Card ownerId={wall.Wall.owner} itemData={completeDataObject[itemData[0]]} key={`sqr_crd_${0}_${completeDataObject[itemData[0]].id}`} itemIndex={itemIndex} adjustWidth={100} personalization={wall.Personalization} ThemeRule={wall.ThemeRule} wallID={wall.Wall.id} clickToShowPopUp={clickToShowPopUp} onClickToCTA={onClickToCTA} postSizeInPx={postSizeInPx} wall={wall} completeDataObject={completeDataObject} onClickPopUpSlider={onClickPopUpSlider} /></div>\n        <div className=\"ts_cs_post_small\" style={smallDivStyle}>\n            {\n                (itemData && itemData.length > 0) ? itemData.map((item, index) => {\n                    const cardData = completeDataObject[item];\n                    return (index != 0 ? <Card ownerId={wall.Wall.owner} itemData={cardData} key={`sqr_crd_${index}_${item.id}`} itemIndex={index} adjustWidth={adjustWidth} personalization={wall.Personalization} ThemeRule={wall.ThemeRule} wallID={wall.Wall.id} clickToShowPopUp={clickToShowPopUp} onClickToCTA={onClickToCTA} postSizeInPx={postSizeInPx} wall={wall} completeDataObject={completeDataObject} onClickPopUpSlider={onClickPopUpSlider} /> : null)\n                }) : null\n            } </div>\n\n    </div> : null\n}\n\nexport default CollageRows","import React, { PureComponent } from \"react\";\nimport { connect } from 'react-redux';\nimport { managePostHeight } from '../../../actions/themeActions';\nimport \"./scss/CollageTheme.scss\";\nimport CollageRows from \"./CollageRows\";\nexport const getPostWidth = (windowWidth, ColumnCount) => {\n  const getWidths = (inWidth, cardWidth) => ({ cardWidth, largeDiv: inWidth * 2, smallDiv: 100 - inWidth * 2 });\n\n  switch (ColumnCount) {\n    case 3: return getWidths(windowWidth > 320 ? 100 / 3 : 100 / 3, 100 / 1);\n    case 5: return getWidths(windowWidth > 767 ? 100 / 4 : 100 / 3, windowWidth > 767 ? 100 / 2 : 100 / 1);\n    case 7: return getWidths(windowWidth > 767 ? 100 / 5 : 100 / 3, windowWidth > 767 ? 100 / 3 : 100 / 1);\n    case 9: return getWidths(windowWidth > 767 ? 100 / 6 : 100 / 3, windowWidth > 767 ? 100 / 4 : 100 / 1);\n    default: return getWidths(windowWidth < 767 ? 100 / 3 : 100 / 1, 100 / 1);\n  }\n}\nclass CollageTheme extends PureComponent {\n  state = {\n    postData: [],\n    windowWidth: window.innerWidth\n  }\n  componentDidMount() {\n    const { renderId } = this.props;\n\n    if (renderId.renderId) {\n      this.setState({\n        windowWidth: document.getElementById(renderId.renderId).clientWidth\n      })\n    }\n  }\n  render() {\n    const { postData, completeDataObject, wall, clickToShowPopUp, cardNumber, onClickToCTA, postSizeInPx, onClickPopUpSlider } = this.props;\n    const { windowWidth } = this.state\n    let totalPostBestFit = postData.length;\n    if (wall && wall.Personalization.fitRow == 1) {\n      if (postData.length >= parseInt(cardNumber)) {\n        let bestFitEachRow = postData.length / parseInt(cardNumber);\n        totalPostBestFit = (parseInt(cardNumber) * parseInt(bestFitEachRow));\n      }\n    }\n    var clm = ''\n    const ColumnCount = wall.ThemeRule.numberOfCoumn\n    const { cardWidth, largeDiv, smallDiv } = getPostWidth(windowWidth, ColumnCount)\n    if (windowWidth < 768) clm = 3\n    else clm = ColumnCount ? ColumnCount : 1\n    var i = 0, n = postData.length, newPostdata = [];\n    while (i < n) { newPostdata.push(postData.slice(i, i += clm)); }\n    var postClmnNo = windowWidth < 768 ? '3' : ColumnCount\n    return (\n      <div tabIndex=\"0\" aria-label={`There are ${(postData && postData.length > 0) ? postData.length : 0} posts in the feed`} role=\"feed\" className=\"tb_ct_post_container\">\n        {(newPostdata && newPostdata.length > 0) && newPostdata.map((item, index) => {\n          return item.length == postClmnNo ? <CollageRows ownerId={wall.Wall.owner} itemData={item} key={`sqr_crd_${index}_${item.id}`} itemIndex={index} adjustWidth={cardWidth} personalization={wall.Personalization} ThemeRule={wall.ThemeRule} wallID={wall.Wall.id} clickToShowPopUp={clickToShowPopUp} onClickToCTA={onClickToCTA} postSizeInPx={postSizeInPx} wall={wall} completeDataObject={completeDataObject} largeDiv={largeDiv} smallDiv={smallDiv} onClickPopUpSlider={onClickPopUpSlider} /> : null\n        })}\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    postHeight: state.postHeight.data\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    managePostHeight: (data) => dispatch(managePostHeight(data))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CollageTheme)","import React, { PureComponent, Suspense } from \"react\";\nimport { isTagEmbed } from \"../../../../actions/api\";\nconst DefaultNetwork = React.lazy(() => import(\"./DefaultNetwork\"));\n\nexport default class Network extends PureComponent {\n  render() {\n    const { network, networkClass, ThemeRule, isDefault, Personalization } = this.props;\n    const isDefaultIcon = isDefault ? (network.id === 7 || network.id === 4 || network.id === 36) ? false : true : false\n    const icon = isTagEmbed && network.id == 36 ? \"tagembed\" : network.icon;\n    return (isDefaultIcon ? <div className={`${networkClass} tb__icon tb-${icon.replace(/fa-/g, \"\")}`} aria-label={`post network ${network?.name || \"\"}`}><div></div></div> : <Suspense fallback={<></>}> <DefaultNetwork network={network} networkClass={networkClass} /></Suspense>);\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport { themePostTracking, gtmAnalyticsAction } from '../../../../actions/themeActions'\nimport { isTagEmbed } from '../../../../actions/api'\n\nexport default class ShareOnHover extends PureComponent {\n\n\n  onClickData = (shareURL) => event => {\n    const { item, wallID, ownerId } = this.props;\n    event.stopPropagation();\n    if (!isTagEmbed) themePostTracking({\n      type: 2,\n      action: 2,\n      wall: wallID,\n      feed: item.feedId,\n      post: item.referenceId ? item.referenceId : item.id,\n      owner: ownerId\n    })\n    gtmAnalyticsAction(\"Tagbox\", \"shareUrl\", \"shareUrl\", shareURL)\n    window.open(shareURL, \"_blank\")\n  }\n\n  render() {\n    const { share, shareClass } = this.props;\n    return <div className={`tb_share_wrapper ${shareClass}`}>\n      <div className={`tb_share_button_ tb__icon ${isTagEmbed ? 'tb-share-fill' : 'tb-share'}`}><div></div></div>\n      <div className=\"tb_share_icon_list_wrap\">\n        {share.facebook ?\n          <div className=\"tb_share_icon_list\">\n            <div onClick={this.onClickData(share.facebook)} className=\"tb_share_ico__ tb__icon tb-facebook\" title=\"facebook\"><div></div></div>\n          </div>\n          : ''}\n        {share.twitter ?\n          <div className=\"tb_share_icon_list\">\n            <div onClick={this.onClickData(share.twitter)} className=\"tb_share_ico__  tb__icon tb-twitter\" title=\"twitter\"><div></div></div>\n          </div>\n          : ''}\n        {share.linkedin ?\n          <div className=\"tb_share_icon_list\">\n            <div onClick={this.onClickData(share.linkedin)} className=\"tb_share_ico__ tb__icon tb-linkedin\" title=\"linkedin\"><div></div></div>\n          </div>\n          : ''}\n      </div>\n    </div>\n  }\n}\n","import \"./scss/ShopButton.scss\";\nimport { IS_THEME } from \"../../../../utils\";\nconst ShopButton = ({ ThemeRule, btnClass }) => {\n  const shopBtnStyle = { fontFamily: ThemeRule.css_font }\n  return <div className={`tb_shop_btn_wrap ${btnClass}`}>\n    <div className={`tb_shop_btn${ThemeRule.postHover || IS_THEME(4) || IS_THEME(55) ? ' tb_shop_btn_light' : ' tb_shop_btn_dark'}`} style={shopBtnStyle}>\n      {ThemeRule.shoppingText}\n    </div>\n  </div>\n}\n\n\nexport default ShopButton;"],"names":["Media","React","trim_content_length","isTagEmbed","_ref","itemData","personalization","adjustWidth","ThemeRule","clickToShowPopUp","itemIndex","wallID","ownerId","postSizeInPx","wall","onClickPopUpSlider","postTrack","useRef","mediaType","type","postTextContent","trimcontent","PostTrimContent","content","responsiveCardSize2x","useEffect","suiteTrack","isTagShop","themeImpressionTracking","isHotspot","hotspot","ugc_products","length","isShopBtn","themeMode","postHover","isPopUp","_jsx","id","concat","className","style","width","padding","float","network","tabIndex","role","parseInt","ref","referenceId","feedId","children","onClick","_jsxs","tabindex","share","status","ShareOnHover","shareClass","item","Suspense","fallback","_Fragment","postFileNew","filename","ThemeID","widgetTheme","Network","networkClass","isDefault","iconType","Personalization","ShopButton","btnClass","largeDiv","smallDiv","completeDataObject","parentID","onClickToCTA","postPosition","highlightPosition","sumPost","largeDivStyle","smallDivStyle","Card","Wall","owner","map","index","cardData","getPostWidth","windowWidth","ColumnCount","getWidths","inWidth","cardWidth","CollageTheme","PureComponent","constructor","arguments","state","postData","window","innerWidth","componentDidMount","renderId","this","props","setState","document","getElementById","clientWidth","render","cardNumber","totalPostBestFit","fitRow","bestFitEachRow","clm","numberOfCoumn","i","n","newPostdata","push","slice","postClmnNo","CollageRows","connect","postHeight","data","dispatch","managePostHeight","DefaultNetwork","isDefaultIcon","icon","replace","name","onClickData","shareURL","event","stopPropagation","themePostTracking","action","feed","post","gtmAnalyticsAction","open","facebook","title","twitter","linkedin","shopBtnStyle","fontFamily","css_font","IS_THEME","shoppingText"],"sourceRoot":""}