{"version":3,"file":"static/js/6349.041f8af6.chunk.js","mappings":"iNAKA,MAYA,EAZqBA,IAAkC,IAADC,EAAA,IAAhC,OAAEC,EAAM,KAAEC,EAAI,WAACC,GAAYJ,EAC7C,MAAMK,EAAmD,aAA5B,OAAJF,QAAI,IAAJA,GAAU,QAANF,EAAJE,EAAMG,YAAI,IAAAL,OAAN,EAAJA,EAAYM,mBAAkCC,EAAAA,GACvE,OAAOC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UACzCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBC,SAC/BT,GAAWU,EAAAA,IAAgLH,EAAAA,EAAAA,KAAAI,EAAAA,SAAA,CAAAF,SAC3K,KAAdP,GAAoBK,EAAAA,EAAAA,KAAA,UAAQK,QAASA,KAAMC,EAAAA,EAAAA,IAAc,GAAIL,UAAU,uBAAsBC,SAAC,gBAAsBK,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAF,SAAA,EAAEF,EAAAA,EAAAA,KAAA,UAAQK,QAASA,KAAMC,EAAAA,EAAAA,IAAc,GAAIL,UAAU,uBAAuBO,MAAO,CAAEC,YAAa,QAASP,SAAC,sBACxNF,EAAAA,EAAAA,KAAA,UAAQK,QAASA,KAAMC,EAAAA,EAAAA,IAAc,GAAIL,UAAU,sCAAqCC,SAAC,0BAF5EF,EAAAA,EAAAA,KAAA,KAAGU,KAAM,GAAGd,EAAmBe,EAAAA,GAAcC,EAAAA,KAAWC,OAAQ,SAAUZ,UAAU,uBAAsBC,SAAEY,EAAAA,GAAe,mBAAqB,kBAM3K,ECFV,EAVqBvB,IAAsD,IAArD,OAAEE,EAAM,MAAEsB,EAAK,YAAEC,EAAW,WAAErB,EAAU,KAACD,GAAMH,EACnE,OAAOgB,EAAAA,EAAAA,MAAA,OAAKN,UAAU,wBAAuBC,SAAA,EAC3CK,EAAAA,EAAAA,MAAA,OAAKN,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,SAAEa,KACjCf,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAAEe,EAAAA,EAAAA,IAAMD,MACrChB,EAAAA,EAAAA,KAACkB,EAAY,CAACzB,OAAQA,EAAQC,KAAMA,EAAMC,WAAYA,OAEtDF,EAAyC,MAAhCO,EAAAA,EAAAA,KAACmB,EAAAA,EAAa,CAACzB,KAAMA,MAC5B,C,wECRR,MASA,EATsBH,IAAuB,IAADC,EAAA,IAArB,OAAE4B,EAAM,KAAE1B,GAAMH,EACrC,MAAMK,EAAmD,aAA5B,OAAJF,QAAI,IAAJA,GAAU,QAANF,EAAJE,EAAMG,YAAI,IAAAL,OAAN,EAAJA,EAAYM,mBAAkCC,EAAAA,GACjEsB,EAAWzB,EAAmB,eAAiB0B,EAAAA,GAAY,cAAgBR,EAAAA,GAAe,kBAAoB,oBACpH,OAAOd,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,UACxCF,EAAAA,EAAAA,KAAA,KAAGU,KAAMU,GAAkB,GAAGxB,EAAmB,wBAA0B2B,EAAAA,KAAgBV,OAAQ,SAAUZ,UAAU,yBAAyBO,MAAO,CACrJgB,gBAAiB,OAAOC,EAAAA,iBAAuBJ,MAC/CnB,SAAC,OACC,C","sources":["app/Components/ErrorPages/Elements/ErrorButtons.js","app/Components/ErrorPages/Elements/ErrorMessage.jsx","app/Components/ErrorPages/Elements/ErrorBranding.js"],"sourcesContent":["import { AppUrls, isPreview, isSocialWall } from \"../../../../actions/api\";\r\nimport { TagembedUrl } from \"../../../../actions/api\";\r\nimport { tagembedUrl } from \"../../../../constants\"; \r\nimport { onWindowEvent } from \"../../../../utils/Common\";\r\n\r\nconst ErrorButtons = ({ editor, wall,error_code }) => {\r\n    const isTagEmbedStatus = wall?.User?.userDatabaseType == \"tagembed\" || tagembedUrl\r\n    return <div className=\"tb_error_page_actions\">\r\n        <div className=\"tb_error_action_list\">\r\n            {!editor && !isPreview ? <a href={`${isTagEmbedStatus ? TagembedUrl : AppUrls}`} target={'_blank'} className=\"tb_error_btn_primary\">{isSocialWall ? `Add Another Feed` : `Access Now`}</a> : <>\r\n            {   error_code == 213 ? <button onClick={() => onWindowEvent(5)} className=\"tb_error_btn_primary\">Update Now</button> : <><button onClick={() => onWindowEvent(2)} className=\"tb_error_btn_primary\" style={{ marginRight: '10px' }}>Add Another Feed</button>\r\n                        <button onClick={() => onWindowEvent(1)} className=\"loadDemoWall tb_error_btn_secondary\">Show Demo Posts</button></>\r\n                }\r\n            </>}\r\n        </div>\r\n    </div>\r\n}\r\nexport default ErrorButtons","import ErrorBranding from \"./ErrorBranding\";\r\nimport parse from \"html-react-parser\";\r\nimport ErrorButtons from \"./ErrorButtons\";\r\nconst ErrorMessage = ({ editor, title, description, error_code,wall }) => {\r\n  return <div className=\"tb_error_page_wrapper\">\r\n    <div className=\"tb_error_content\">\r\n      <div className=\"tb_error_title\">{title}</div>\r\n      <div className=\"tb_error_des\">{parse(description)}</div>\r\n      <ErrorButtons editor={editor} wall={wall} error_code={error_code} />\r\n    </div>\r\n    {!editor ? <ErrorBranding wall={wall} /> : null}\r\n  </div>\r\n}\r\nexport default ErrorMessage\r\n","import { isTagShop, isSocialWall } from \"../../../../actions/api\";\r\nimport { CloudUrl, tagembedUrl, WebWidgetUrl } from \"../../../../constants\";\r\n\r\nconst ErrorBranding = ({ isLink, wall }) => {\r\n  const isTagEmbedStatus = wall?.User?.userDatabaseType == \"tagembed\" || tagembedUrl\r\n  const logoName = isTagEmbedStatus ? 'tagembed.svg' : isTagShop ? 'tagshop.svg' : isSocialWall ? 'socialwalls.svg' : 'tagbox-widget.svg'\r\n  return <div className=\"tb_error_page_logo\">\r\n    <a href={isLink ? isLink : `${isTagEmbedStatus ? `https://tagembed.com/` : WebWidgetUrl}`} target={'_blank'} className=\"tb_error_page_logo_ico\" style={{\r\n      backgroundImage: `url(${CloudUrl}/media/logo/${logoName})`\r\n    }}> </a>\r\n  </div>\r\n}\r\nexport default ErrorBranding\r\n"],"names":["_ref","_wall$User","editor","wall","error_code","isTagEmbedStatus","User","userDatabaseType","tagembedUrl","_jsx","className","children","isPreview","_Fragment","onClick","onWindowEvent","_jsxs","style","marginRight","href","TagembedUrl","AppUrls","target","isSocialWall","title","description","parse","ErrorButtons","ErrorBranding","isLink","logoName","isTagShop","WebWidgetUrl","backgroundImage","CloudUrl"],"sourceRoot":""}