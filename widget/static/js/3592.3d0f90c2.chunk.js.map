{"version":3,"file":"static/js/3592.3d0f90c2.chunk.js","mappings":"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","sources":["app/Header/HeaderType/Elements/HeaderConstant.js","app/Header/HeaderType/HeaderType3.js","utils/Common.js"],"sourcesContent":["export const styleHeaderBanner = (Banner) => {\n    const bannerStyle = {\n        backgroundImage: Banner.transparent == 1 || Banner.bannerType == 5 ? 'none' : `url(${Banner.CustomBannerImage})`,\n        backgroundColor: Banner.transparent == 1 ? 'transparent' : Banner.background_color, //rmoved :- || Banner.CustomBannerImage\n        height: Banner.banner_height+'px'\n    }\n    const bannerStyleBgRight = { backgroundColor: Banner.transparent == 1 ? 'transparent' : Banner.background_color_two }\n    const subTitleStyle = {\n        color: Banner.subTitle_font_color,\n        fontSize: Banner.subTitle_font_size,\n        fontFamily: Banner.subtitle_css_font == 'None' ? null : Banner.subtitle_css_font,\n    }\n    const subTitleVarentClass = Banner.subtitle_font_varient\n    const titleStyle = {\n        color: Banner.title_font_color,\n        fontSize: Banner.title_font_size,\n        fontFamily: Banner.title_css_font == 'None' ? null : Banner.title_css_font,\n    }\n    const titleVarentClass = Banner.title_font_varient\n    var socialIconSize = 50\n    if (Banner.social_icon_size > 50) socialIconSize = 50\n    else socialIconSize = Banner.social_icon_size\n    const iconAreaStyle = {\n        height: socialIconSize * 1.8,\n        width: socialIconSize * 1.8\n    }\n    const iconStyle = { fontSize: socialIconSize }\n    const facebookIconAreaStyle = { borderColor: (Banner.social_icon_color_status === 2) ? Banner.social_icon_color : '#1b74e4', }\n    const facebookIconStyle = { color: (Banner.social_icon_color_status === 2) ? Banner.social_icon_color : '#1b74e4', }\n    const twitterIconAreaStyle = { borderColor: (Banner.social_icon_color_status === 2) ? Banner.social_icon_color : '#000', }\n    const twitterIconStyle = { color: (Banner.social_icon_color_status === 2) ? Banner.social_icon_color : '#000', }\n    const instagramIconAreaStyle = { borderColor: (Banner.social_icon_color_status === 2) ? Banner.social_icon_color : '#E2306C', }\n    const instagramIconStyle = { color: (Banner.social_icon_color_status === 2) ? Banner.social_icon_color : '#E2306C', }\n    const isFacebook = String(Banner.social_icons).includes(\"1\");\n    const isTwitter = String(Banner.social_icons).includes(\"2\");\n    const isInstagram = String(Banner.social_icons).includes(\"3\");\n    return { bannerStyle, bannerStyleBgRight, subTitleStyle, titleStyle, iconAreaStyle, iconStyle, isFacebook, isTwitter, isInstagram, facebookIconAreaStyle, facebookIconStyle, twitterIconAreaStyle, twitterIconStyle, instagramIconAreaStyle, instagramIconStyle, subTitleVarentClass, titleVarentClass }\n}\n","import React from \"react\"; \nimport { styleHeaderBanner } from \"./Elements/HeaderConstant\";\nimport { CloudHostUrl, TagboxUpload } from \"../../../constants\"; \nimport './scss/HeaderType3.scss'\nimport { ensureFullyQualifiedUrl, GET_MEDIA_NAME } from \"../../../utils/Common\";\n\nconst HeaderType3 = ({ Banner }) => {\n  const { bannerStyle, subTitleStyle, titleStyle, iconAreaStyle, iconStyle, isFacebook, isTwitter, isInstagram, facebookIconAreaStyle, facebookIconStyle, twitterIconAreaStyle, twitterIconStyle, instagramIconAreaStyle, instagramIconStyle } = styleHeaderBanner(Banner);\n  var bLogoImg = Banner.LogoImage;\n  if (bLogoImg && String(bLogoImg).length > 0 && String(bLogoImg).includes(\"banner/logo_bnr\") && String(bLogoImg).includes(TagboxUpload)) bLogoImg = String(Banner.LogoImage).replace(TagboxUpload, \"\")\n  else if (bLogoImg.includes(TagboxUpload) && bLogoImg.split(TagboxUpload)[1] === '') bLogoImg = String(Banner.LogoImage).replace(TagboxUpload, \"\")\n  else if (bLogoImg && String(bLogoImg).length > 0) {\n    let LogoImage = bLogoImg.split('/').pop();\n    if (LogoImage == 'logo_bnr-2.svg' || LogoImage == 'logo_bnr-3.svg' || LogoImage == 'logo_bnr-5.svg') {\n      bLogoImg = `${CloudHostUrl}react-app/media/banner/logo_bnr-3.svg`\n    }\n  }\n\n  const NetworkIcon = (url,iconStyle,networkStyle,iconClass,label,iconAreaStyle,iconAreaStyleNetwork)=> <a href={url ? ensureFullyQualifiedUrl(url) : '#'} target=\"blank\" className=\"tb_header3_social_icon_list__\" role=\"button\" aria-label={label} rel=\"nofollow\" style={{ ...iconAreaStyle, ...iconAreaStyleNetwork }}>\n    <div className={`tb_header3_social_icon__ tb__icon  ${iconClass}`} style={{ ...iconStyle, ...networkStyle }}> </div>\n  </a> \n\n  var bCustomStyle = bannerStyle;\n  if (bCustomStyle && bCustomStyle.backgroundImage.includes(\"bg-bnr-3.png\") && bCustomStyle.backgroundImage.includes(TagboxUpload)) bCustomStyle.backgroundImage = bCustomStyle.backgroundImage.replace(TagboxUpload, \"https://test.taggbox.com/widget/assets/media/banner/\")\n  return <div className=\"tb_wall_header_wrap__\" style={bCustomStyle}>\n    <div className=\"tb_header3_row__\">\n      <div className=\"tb_header3_column_logo__\">\n        {bLogoImg ?\n          <div className=\"tb_header3_logo__\">\n            <img loading=\"lazy\" className=\"tb_header3_logo_img__\" src={bLogoImg} alt={GET_MEDIA_NAME(bLogoImg)} width={180} height={52} />\n          </div>\n          : ''}\n      </div>\n      <div className=\"tb_header3_column_content__\">\n        <div className=\"tb_header3_content__\">\n          <div className={`tb_header3_subtitle__`} style={subTitleStyle}>{Banner.subTitle}</div>\n          <div className={`tb_header3_title__`} style={titleStyle}>{Banner.title}</div>\n        </div>\n      </div>\n      <div className=\"tb_header3_column_icons__\">\n\n        {Banner.social_icon_status === 1 ? <div className=\"tb_header3_social_icons__\">\n\n          {isFacebook ?\n            <NetworkIcon url={Banner.facebook_url} iconStyle={iconStyle} networkStyle={facebookIconStyle} iconAreaStyle={iconAreaStyle} iconAreaStyleNetwork={facebookIconAreaStyle} iconClass=\"tb-facebook\" label=\"Facebook\"/>\n             : ''}\n            {isTwitter ?\n            <NetworkIcon url={Banner.twitter_url} iconStyle={iconStyle} networkStyle={twitterIconStyle} iconAreaStyle={iconAreaStyle} iconAreaStyleNetwork={twitterIconAreaStyle}  iconClass=\"tb-twitter\" label=\"Twitter\"/>\n           : ''}\n          {isInstagram ?\n            <NetworkIcon url={Banner.instagram_url} iconStyle={iconStyle} networkStyle={instagramIconStyle} iconAreaStyle={iconAreaStyle} iconAreaStyleNetwork={instagramIconAreaStyle}  iconClass=\"tb-instagram\" label=\"Instagram\"/>\n             : ''}\n        </div> : null\n        }</div>\n    </div>\n  </div>\n}\nexport default HeaderType3","import { AUTH_TOKEN, isTagbox, isTagShop, Pwidget, reelsPlay, tagembed, tbox, test, wUrl } from \"../actions/api\";\nimport { WebUrl } from \"../constants\";\nimport store from \"../store\";\n\nlet reelPlayTime = [];\nlet playAdded = false;\n\nconst headers = new Headers({\n    'Content-Type': 'application/json',\n    'Authorization': `Bearer ${AUTH_TOKEN}`,\n    'Productdomain': tbox\n});\n\n\nexport const tb_onsite_btn_disabled = (a) =>\n    document.getElementById(\"tb_onsite_btn_id\")?.classList.toggle(\"tb_onsite_btn_disabled\", a === 1);\n\n\nexport const onWindowEvent = (s) => ({\n    1: () => window.onShowDemoPost(1),\n    2: () => window.hendleFeeds(\"addFeeds\"),\n    3: () => window.hendleFeeds(\"manageFeeds\")\n}[s]?.());\n\nexport const formatUnixTimestamp = (timestamp) => {\n    const date = new Date(timestamp * 1000);\n    const monthNames = [\n        'January', 'February', 'March', 'April', 'May', 'June',\n        'July', 'August', 'September', 'October', 'November', 'December'\n    ];\n    return `${monthNames[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()}`;\n}\n\nexport const generateUniqueString = () => Math.floor(Math.random() * 10000).toString().padStart(4, '0');\n\nexport const reelPlayTimeUpdateData = (time) => {\n    try {\n        reelPlayTime.push(time)\n    }\n    catch (ex) {\n        console.log(ex)\n    }\n}\n\nexport const isValidAuthorImage = (url) => url && url !== \"\" && !url.includes('ui-avatars');\n\nexport const bytesToSize = (b) => {\n    const units = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (!b) return '0 Byte';\n    const i = Math.floor(Math.log(b) / Math.log(1024));\n    return { size: Math.round(b / Math.pow(1024, i), 2), sizeText: units[i] };\n};\n\n\nexport const ensureFullyQualifiedUrl = (url) =>\n    url.startsWith('http://') || url.startsWith('https://') ? url : 'https://' + url;\n\nexport const timeAgo = (timestamp) => {\n    const diff = Date.now() - timestamp * 1000;\n    const units = [\n        { label: \"year\", ms: 31536000000 },\n        { label: \"month\", ms: 2592000000 },\n        { label: \"week\", ms: 604800000 },\n        { label: \"day\", ms: 86400000 },\n        { label: \"hour\", ms: 3600000 },\n        { label: \"minute\", ms: 60000 }\n    ];\n\n    if (diff < 60000) return \"just now\";\n\n    const unit = units.find(({ ms }) => diff >= ms);\n    const value = Math.floor(diff / unit.ms);\n    return `${value} ${unit.label}${value > 1 ? \"s\" : \"\"} ago`;\n}\n\n\nexport const STRING_TO_URL_CONVERT = (string) => {\n    try {\n        if (!string?.includes(\"http\")) return string;\n        return [...new Set(string.match(/(((ftp|https?):\\/\\/)[\\w@:%_\\+.~#?&//=]+)/g))].reduce(\n            (result, url) =>\n                result.replaceAll(\n                    url,\n                    `<a class=\"text_links_\" role=\"link\" target=\"_blank\" href=\"${url}\">${url}</a>`\n                ),\n            string\n        );\n    } catch {\n        return string;\n    }\n};\n\nexport const brandingUrl = () => [`${WebUrl}`, 'Website Widget'];\nexport const GET_MEDIA_NAME = (p) => p && String(p) ? unescape(p).split('/').pop().split(\"/\").slice(-1).join().split(\".\").shift() : '';\n\n\nexport const mainClass = ![\"localhost\", \"widget\", \"wall_id=\"].every((key) => wUrl(key))\n    ? (isTagbox || [`${Pwidget}.${tagembed}`, `${Pwidget}${test}${tagembed}`, `${Pwidget}s.${tagembed}`].some((url) => wUrl(url)))\n        ? \"tag_main__root\"\n        : isTagShop\n            ? \"taggShopRoot\"\n            : \"taggbox_main\"\n    : \"taggbox_main\";\n\n\nexport const kFormatter = (value) => {\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    const index = Math.floor(Math.log10(value) / 3) || 0;\n    return index ? +(value / Math.pow(1e3, index)).toFixed(0) + suffixes[index] : value;\n};\n\nexport const convertToAtob = (isValue) => isTagbox ? isValue : atob(isValue)\n\n\nexport const isHex = (color) => color?.startsWith('#');\n\nexport const hexToRgb = (hex) => {\n    if (isHex(hex)) {\n        const bigint = parseInt(hex.slice(1), 16);\n        return {\n            r: (bigint >> 16) & 255,\n            g: (bigint >> 8) & 255,\n            b: bigint & 255,\n        };\n    } else {\n        const matches = hex?.match(/\\d+/g)?.map(Number) || [0, 0, 0];\n        return { r: matches[0], g: matches[1], b: matches[2] };\n    }\n};\n\nexport const colorDistanceLight = (color) => {\n    const { r, g, b } = hexToRgb(color);\n    return Math.sqrt((255 - r) ** 2 + (255 - g) ** 2 + (255 - b) ** 2) <= 30;\n};\n\nexport const colorDistanceDark = (color) => {\n    const { r, g, b } = hexToRgb(color);\n    return Math.sqrt((r - 50) ** 2 + (g - 50) ** 2 + (b - 50) ** 2) < 50;\n};\n\n\nexport const getTextColor = (textColor, bgColor) => {\n\n    if (textColor?.startsWith('rgba')) textColor = '#000000';\n\n    const isColorMatch = (color, matches) => matches.some((match) => color?.includes(match));\n    const isWhite = (color) => isColorMatch(color, ['ffffff', '255, 255, 255', '#fff']);\n    const isBlack = (color) => isColorMatch(color, ['000000', '0, 0, 0', '#000']);\n\n    const [similarWhite, similarDark] = [colorDistanceLight(textColor), colorDistanceDark(textColor)];\n    const [similarWhiteBg, similarDarkBg] = [colorDistanceLight(bgColor), colorDistanceDark(bgColor)];\n\n    if ((similarWhite && similarWhiteBg) || (isWhite(textColor) && isWhite(bgColor))) return '#000000';\n    if ((similarDark && similarDarkBg) || (isBlack(textColor) && isBlack(bgColor))) return '#ffffff';\n\n    return textColor;\n}\n\n\nexport const findFromArray = (d, i, n) => d && d.length > 0 ? d.findIndex(c => c.id === i) : n;\n\n\nexport const reelPlayTimeUpdate = () => {\n    try {\n        const { wall } = store.getState().appData;\n\n        if (!playAdded) {\n            window.addEventListener('beforeunload', () => {\n                if (reelPlayTime.length === 0) return;\n\n                const playTime = reelPlayTime.reduce((total, time) => total + time, 0);\n                if (playTime > 0) {\n                    fetch(reelsPlay, {\n                        method: 'POST',\n                        headers,\n                        body: JSON.stringify({\n                            playCount: reelPlayTime.length,\n                            id: wall.ThemeInfo.wallId,\n                            playTime,\n                            owner: wall.ThemeInfo.ownerId,\n                        }),\n                        keepalive: true,\n                    }).finally(() => (reelPlayTime = [], playAdded = false));\n                } else {\n                    reelPlayTime = [];\n                    playAdded = false;\n                }\n            });\n\n            playAdded = true;\n        }\n    } catch (ex) {\n        console.error(ex);\n    }\n};\n\n\nexport const GET_IMAGE_SIZE = (url) => \n    new Promise((resolve, reject) => \n        Object.assign(new Image(), {\n            onload: function () { resolve({ width: this.naturalWidth, height: this.naturalHeight }); },\n            onerror: (e) => reject(new Error(`Image loading error: ${e.message}`)),\n            src: url\n        })\n    );"],"names":["styleHeaderBanner","Banner","bannerStyle","backgroundImage","transparent","bannerType","CustomBannerImage","backgroundColor","background_color","height","banner_height","bannerStyleBgRight","background_color_two","subTitleStyle","color","subTitle_font_color","fontSize","subTitle_font_size","fontFamily","subtitle_css_font","subTitleVarentClass","subtitle_font_varient","titleStyle","title_font_color","title_font_size","title_css_font","titleVarentClass","title_font_varient","socialIconSize","iconAreaStyle","social_icon_size","width","iconStyle","facebookIconAreaStyle","borderColor","social_icon_color_status","social_icon_color","facebookIconStyle","twitterIconAreaStyle","twitterIconStyle","instagramIconAreaStyle","instagramIconStyle","isFacebook","String","social_icons","includes","isTwitter","isInstagram","_ref","bLogoImg","LogoImage","length","TagboxUpload","replace","split","pop","CloudHostUrl","NetworkIcon","url","networkStyle","iconClass","label","iconAreaStyleNetwork","_jsx","href","ensureFullyQualifiedUrl","target","className","role","rel","style","children","bCustomStyle","_jsxs","loading","src","alt","GET_MEDIA_NAME","subTitle","title","social_icon_status","facebook_url","twitter_url","instagram_url","reelPlayTime","playAdded","headers","Headers","AUTH_TOKEN","tbox","tb_onsite_btn_disabled","a","_document$getElementB","document","getElementById","classList","toggle","onWindowEvent","s","_$2$3$s","_$2$","window","onShowDemoPost","hendleFeeds","call","formatUnixTimestamp","timestamp","date","Date","getMonth","getDate","getFullYear","generateUniqueString","Math","floor","random","toString","padStart","reelPlayTimeUpdateData","time","push","ex","console","log","isValidAuthorImage","bytesToSize","b","i","size","round","pow","sizeText","startsWith","timeAgo","diff","now","unit","ms","find","value","STRING_TO_URL_CONVERT","string","Set","match","reduce","result","replaceAll","brandingUrl","WebUrl","p","unescape","slice","join","shift","mainClass","every","key","wUrl","isTagbox","Pwidget","tagembed","test","some","isTagShop","kFormatter","index","log10","toFixed","convertToAtob","isValue","atob","hexToRgb","hex","bigint","parseInt","r","g","_hex$match","matches","map","Number","colorDistanceLight","sqrt","colorDistanceDark","getTextColor","textColor","bgColor","_textColor","isColorMatch","isWhite","isBlack","similarWhite","similarDark","similarWhiteBg","similarDarkBg","findFromArray","d","n","findIndex","c","id","reelPlayTimeUpdate","wall","store","getState","appData","addEventListener","playTime","total","fetch","reelsPlay","method","body","JSON","stringify","playCount","ThemeInfo","wallId","owner","ownerId","keepalive","finally","error","GET_IMAGE_SIZE","Promise","resolve","reject","Object","assign","Image","onload","this","naturalWidth","naturalHeight","onerror","e","Error","message"],"sourceRoot":""}