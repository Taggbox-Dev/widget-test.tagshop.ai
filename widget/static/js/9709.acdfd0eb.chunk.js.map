{"version":3,"file":"static/js/9709.acdfd0eb.chunk.js","mappings":"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","sources":["app/Themes/Elements/Network/Network.js","app/Themes/RatingBadge/index.js"],"sourcesContent":["import React, { PureComponent, Suspense } from \"react\";\nimport { isTagEmbed } from \"../../../../actions/api\";\nconst DefaultNetwork = React.lazy(() => import(\"./DefaultNetwork\"));\n\nexport default class Network extends PureComponent {\n  render() {\n    const { network, networkClass, ThemeRule, isDefault, Personalization } = this.props;\n    const isDefaultIcon = isDefault ? (network.id === 7 || network.id === 4 || network.id === 36) ? false : true : false\n    const icon = isTagEmbed && network.id == 36 ? \"tagembed\" : network.icon;\n    return (isDefaultIcon ? <div className={`${networkClass} tb__icon tb-${icon.replace(/fa-/g, \"\")}`} aria-label={`post network ${network?.name || \"\"}`}><div></div></div> : <Suspense fallback={<></>}> <DefaultNetwork network={network} networkClass={networkClass} /></Suspense>);\n  }\n}\n","import React, { PureComponent, Suspense } from \"react\";\nimport Network from \"../Elements/Network/Network\";\nimport \"./scss/RatingBadge.scss\"\nconst AverageRating = React.lazy(() => import('../Elements/AverageRating/AverageRating'));\nconst SmallBranding = React.lazy(() => import('../Elements/Branding/SmallBranding'));\n\nexport default class RatingBadge extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      avgRate: 0,\n      totalReviews: 0\n    };\n  }\n\n  totalReviewNetworks = (reviewFilters) => {\n    const { wall } = this.props;\n    let avgReview = 0\n    let totalReview = 0\n    let append = []\n    reviewFilters.map((item, index) => {\n      const items = item.Network\n      avgReview += items.averageReviews * items.totalReviews;\n      totalReview += items.totalReviews;\n      append.push(index < 5 ? <div key={index} className=\"tb_rb_social_list\" role=\"listitem\" aria-label={items?.name}>\n        <Network\n          networkClass={\"tb_rb_avg_social_ico\"}\n          network={items}\n          isDefault={true}\n          ThemeRule={wall.ThemeRule}\n        />\n      </div>\n        : null)\n    })\n    this.setState({\n      avgRate: (avgReview / totalReview).toFixed(1),\n      totalReviews: totalReview\n    })\n    return append\n  }\n\n\n  render() {\n    const { postData, reviewFilters, wall, languageSetting, isFreeAdsStatus } = this.props;\n    const { avgRate, totalReviews } = this.state\n    const cardStyle = { backgroundColor: wall.ThemeRule.cardColor, borderRadius: wall.ThemeRule.radius };\n\n    return (\n      <div className={`tb_rb_post_container tb_rb_size_${wall.ThemeRule.cardSize} tb_rb_position_${wall.ThemeRule.cardPosition}`} style={cardStyle}>\n        <div className=\"tb_rb_post_wrap\">\n          <div className=\"tb_rb_social_\" role=\"list\">\n            {this.totalReviewNetworks(reviewFilters)}\n          </div>\n          <div className=\"tb_rb_rating_wrap\">\n            <div className={`tb_rb__title tb-cTBfont-${wall.ThemeRule.font_varient}`}>Reviews</div>\n            <div className={`tb_rb_avg_rating tb-cTBfont-${wall.ThemeRule.font_varient}`} aria-label={`Rating ${avgRate}`}>{avgRate}</div>\n            <Suspense fallback={<></>}>\n              <AverageRating size={18} rating={avgRate} />\n            </Suspense>\n            <div className={`tb_rb_based_on tb-cTBfont-${wall.ThemeRule.font_varient}`} aria-label={`Based on ${totalReviews} reviews`}>Based on <div className=\"tb_rb_based_on_count\">{totalReviews}</div> reviews</div>\n            {isFreeAdsStatus ? <Suspense fallback={<></>}><SmallBranding languageSetting={languageSetting} wallId={wall.Wall.id} themeID={wall.Personalization.widgetTheme} isCenter={true} /> </Suspense> : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n"],"names":["DefaultNetwork","React","Network","PureComponent","render","network","networkClass","ThemeRule","isDefault","Personalization","this","props","isDefaultIcon","id","icon","isTagEmbed","_jsx","className","concat","replace","name","children","_jsxs","Suspense","fallback","_Fragment","AverageRating","SmallBranding","RatingBadge","constructor","super","totalReviewNetworks","reviewFilters","wall","avgReview","totalReview","append","map","item","index","items","averageReviews","totalReviews","push","role","setState","avgRate","toFixed","state","postData","languageSetting","isFreeAdsStatus","cardStyle","backgroundColor","cardColor","borderRadius","radius","cardSize","cardPosition","style","font_varient","size","rating","wallId","Wall","themeID","widgetTheme","isCenter"],"sourceRoot":""}