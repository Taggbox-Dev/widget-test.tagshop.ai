{"version":3,"file":"static/js/5922.dc625825.chunk.js","mappings":"0NAOA,MAaA,EAbcA,IAAkD,IAAjD,KAAEC,EAAI,WAAEC,EAAU,MAAEC,EAAK,OAAEC,EAAM,OAAEC,GAAQL,EACxD,MAAMM,GAAYL,EAAKM,QACjBC,KAAW,CAAC,EAAE,GAAGC,SAASR,EAAKS,OAAkC,GAAvBR,EAAWS,UACrDC,KAAcV,EAAWU,cAAeC,EAAAA,IAC9C,OAAOC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EACrCC,EAAAA,EAAAA,KAACC,EAAAA,QAAS,CAACjB,KAAMA,EAAMkB,UAAW,oBAAqBC,KAAMd,EAAWe,UAAWnB,EAAWS,WAC7FH,GACDS,EAAAA,EAAAA,KAACK,EAAAA,EAAK,CAACC,WAAW,eAAetB,KAAMA,EAAMuB,KAAM,IAAKC,SAAS,EAAMC,UAAU,EAAOf,UAAU,EAAMgB,OAAO,EAAMC,UAAU,EAAMzB,MAAOA,EAAOC,OAAQA,KAE3Ja,EAAAA,EAAAA,KAACY,EAAAA,EAAK,CAACC,WAAW,eAAe7B,KAAMA,EAAMuB,KAAM,IAAKjB,SAAS,EAAOwB,OAAQC,EAAAA,GAAWJ,UAAU,EAAMzB,MAAOA,EAAOC,OAAQA,IAChIQ,GAAcK,EAAAA,EAAAA,KAACgB,EAAAA,EAAI,CAAChC,KAAMA,EAAMC,WAAYA,EAAYG,OAAQA,EAAQ6B,iBAAkBhC,EAAWgC,mBAAuB,OAC3H,C,+BCTR,IAAIC,EAAuBC,EAAQ,OAEnC,SAASC,IAAiB,CAC1B,SAASC,IAA0B,CACnCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWb,EAAf,CAIA,IAAIc,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIE,KAAO,sBACLF,CAPN,CAQF,CAEA,SAASG,IACP,OAAOV,CACT,CAHAA,EAAKW,WAAaX,EAMlB,IAAIY,EAAiB,CACnBC,MAAOb,EACPc,OAAQd,EACRe,KAAMf,EACNgB,KAAMhB,EACNiB,OAAQjB,EACRkB,OAAQlB,EACRmB,OAAQnB,EACRoB,OAAQpB,EAERqB,IAAKrB,EACLsB,QAASZ,EACTa,QAASvB,EACTwB,YAAaxB,EACbyB,WAAYf,EACZgB,KAAM1B,EACN2B,SAAUjB,EACVkB,MAAOlB,EACPmB,UAAWnB,EACXoB,MAAOpB,EACPqB,MAAOrB,EAEPsB,eAAgBpC,EAChBC,kBAAmBF,GAKrB,OAFAiB,EAAeqB,UAAYrB,EAEpBA,CACT,C,kBC/CEd,EAAOC,QAAUL,EAAQ,MAARA,E,yBCNnBI,EAAOC,QAFoB,8C","sources":["app/Themes/Grid/Pixel/Elements/Media.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import React from \"react\";\r\nimport { isSocialEmbed, isTagShop } from \"../../../../../actions/api\";\r\nimport Image from '../../../Elements/Media/Image';\r\nimport Video from '../../../Elements/Media/Video';\r\nimport MediaIcon from '../../../Elements/MediaIcon/MediaIcon';\r\nimport Like from '../../../Elements/Reactions/Like';\r\n\r\nconst Media = ({ Post, ThemeStyle, index, inView, wallID }) => {\r\n  const mediaIcon = Post.hotspot ? false : true\r\n  const isVideo = ([3,5].includes(Post.type)) && (ThemeStyle.autoPlay == 1) ? true : false\r\n  const interactive = ThemeStyle.interactive && isSocialEmbed ? true : false\r\n  return <div className=\"tb_g_p_media_wrap\">\r\n      <MediaIcon Post={Post} IconClass={`tb_g_p_media_icon`} show={mediaIcon} hideVideo={ThemeStyle.autoPlay} />\r\n      {isVideo ? \r\n      <Video VideoClass=\"tb_g_p_video\" Post={Post} size={100} isCover={true} controls={false} autoPlay={true} muted={true} observer={true} index={index} inView={inView} /> \r\n      :\r\n      <Image ImageClass=\"tb_g_p_image\" Post={Post} size={100} hotspot={false} blurBG={isTagShop} observer={true} index={index} inView={inView} /> }\r\n      {interactive ? <Like Post={Post} ThemeStyle={ThemeStyle} wallID={wallID} interactiveCount={ThemeStyle.interactiveCount} /> : null}\r\n  </div>\r\n}\r\nexport default Media","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["_ref","Post","ThemeStyle","index","inView","wallID","mediaIcon","hotspot","isVideo","includes","type","autoPlay","interactive","isSocialEmbed","_jsxs","className","children","_jsx","MediaIcon","IconClass","show","hideVideo","Video","VideoClass","size","isCover","controls","muted","observer","Image","ImageClass","blurBG","isTagShop","Like","interactiveCount","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"sourceRoot":""}