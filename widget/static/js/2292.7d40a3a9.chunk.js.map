{"version":3,"file":"static/js/2292.7d40a3a9.chunk.js","mappings":"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","sources":["app/Themes/Elements/Network/Network.js","app/Themes/Elements/PostContent/PostContent.jsx","app/Themes/Elements/ShareOnHover/ShareOnHover.js","app/Themes/NewsCard/Elements/Media.js","app/Themes/NewsCard/Elements/Card.js","app/Themes/NewsCard/index.js"],"sourcesContent":["import React, { PureComponent, Suspense } from \"react\";\r\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from \"../../../../utils/Network\";\r\nimport \"./IconDefaultColor.scss\"\r\nconst DefaultNetwork = React.lazy(() => import(\"./DefaultNetwork\"));\r\n\r\nexport default class Network extends PureComponent {\r\n  render() {\r\n    const { networkId, networkClass, iconStyle } = this.props;\r\n    const defaultNetworks = [7, 4, 36]\r\n    const isDefaultIcon = iconStyle?.default==505 || (defaultNetworks.includes(networkId))\r\n    return (isDefaultIcon ?  <Suspense fallback={<></>}><DefaultNetwork networkId={networkId} networkClass={networkClass} /></Suspense> : <div className={`${networkClass} tb__icon tb-${GET_NETWORK_ICON(networkId)}`} aria-label={`post network ${GET_NETWORK_NAME(networkId)}`}><div></div></div>);\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport { isTagShop } from \"../../../../actions/api\";\r\nimport parse from \"html-react-parser\";\r\nimport { STRING_TO_URL_CONVERT } from \"../../../../utils/Common\";\r\n// import PostContentHighlight from \"./PostContentHighlight\";\r\n\r\nexport default class PostContent extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.contentRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n      setTimeout(() => {\r\n        if (this.contentRef?.current?.clientHeight) {\r\n          const contentHeight = this.contentRef?.current?.clientHeight || 0;\r\n          if (this.props.contentRefCallBack) this.props.contentRefCallBack(contentHeight)\r\n        }\r\n      }, 100);\r\n\r\n    //  console.log(parsedHTML); // Parsed structure\r\n  }\r\n\r\n  render() {\r\n    const { CardStyle, contentClass, content, contentTitle, maxLines, isReadMore } = this.props;\r\n    const trimLines = CardStyle.content.trimcontent && !isTagShop ? CardStyle.content.trimcontent : 0;\r\n    const truncateStyle = {\r\n      WebkitLineClamp: maxLines,\r\n      textAlign: CardStyle.style.textAlign\r\n    };\r\n    const contentData = STRING_TO_URL_CONVERT(content);\r\n    const trimClasses = `${trimLines ? ` tb_content_line-${trimLines}` : ``}`\r\n    const contentClasses = `${contentClass} ${!isReadMore ? trimClasses : ''} tb-cTBfont-${CardStyle.style.variant}`\r\n    return (\r\n      <div className={contentClasses} ref={this.contentRef} style={truncateStyle}>\r\n        {contentTitle ? <div className=\"tb_bold_txt__\">{parse(contentTitle)}</div> : null}\r\n        {parse(contentData)}\r\n        {/* <PostContentHighlight content={contentData} CardStyle={CardStyle} /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport { gtmAnalytics, themePostTracking } from \"../../../../actions/moredataAction\";\r\nimport './scss/ShareOnHover.scss'\r\n\r\nexport default class ShareOnHover extends PureComponent {\r\n  onClickData = (shareURL) => event => {\r\n    const { Post, ThemeInfo } = this.props;\r\n    event.stopPropagation();\r\n      themePostTracking({\r\n      type: 2,\r\n      action: 2,\r\n      wall: ThemeInfo.wallID,\r\n      feed: Post.feedId,\r\n      post: Post.referenceId ? Post.referenceId : Post.id,\r\n      owner: ThemeInfo.ownerId\r\n    })\r\n    gtmAnalytics(\"Tagbox\", \"shareUrl\", \"shareUrl\", shareURL)\r\n    window.open(shareURL, \"_blank\")\r\n  }\r\n\r\n  render() {\r\n    const { shareClass, Post } = this.props;\r\n    const {facebook,twitter, linkedin } = Post?.share;\r\n    \r\n    const GetShareIncon=({shareOn, icon})=>{\r\n      return <div className=\"tb_share_icon_list\">\r\n            <div onClick={this.onClickData(shareOn)} className={`tb_share_ico__ tb__icon tb-${icon}`} title={icon}><div></div></div>\r\n      </div>\r\n    }\r\n    return <div className={`tb_share_wrapper ${shareClass}`}>\r\n      <div className={`tb_share_button_ tb__icon ${'tb-share'}`}><div></div></div>\r\n      <div className=\"tb_share_icon_list_wrap\">\r\n        {facebook ? <GetShareIncon shareOn={facebook} icon={'facebook'} />  : ''}\r\n        {twitter  ? <GetShareIncon shareOn={twitter} icon={'twitter'} />  : ''}\r\n        {linkedin ? <GetShareIncon shareOn={linkedin} icon={'linkedin'} />  : ''}\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { isTagShop, isTagbox } from \"../../../../actions/api\";\r\nimport Image from \"../../Elements/Media/Image\";\r\nimport Video from \"../../Elements/Media/Video\";\r\nimport MediaIcon from \"../../Elements/MediaIcon/MediaIcon\";\r\nimport Network from \"../../Elements/Network/Network\";\r\n\r\nconst Media = ({ Post, ThemeStyle, CardStyle, ThemeInfo, index, inView }) => {\r\n  const autoPlay = (([3, 5].includes(Post.type)) && ThemeStyle.autoPlay == 1) || false\r\n  const size = isTagbox && CardStyle.style.ratio ? CardStyle.style.ratio : false\r\n  const networkOnTop =  !ThemeInfo.id == 59 && !isTagShop && !isTagbox ? true : false\r\n\r\n  return <div className=\"tb_nc_media_wrap\">\r\n    {networkOnTop ?\r\n      <div className=\"tb_nc_social_ tb_nc_social_top_\">\r\n        <Network networkClass={'tb_nc_social_ico'} networkId={Post.network.id}  network={Post.network} iconStyle={CardStyle.icon} />\r\n      </div> : null}\r\n      <MediaIcon Post={Post} IconClass={networkOnTop ? 'tb_nc_media_icon_te' : 'tb_nc_media_icon'} show={true}  hideVideo={autoPlay} /> \r\n      {autoPlay  ?\r\n      <Video VideoClass=\"tb_nc_video\" Post={Post} size={size} isCover={true} controls={false} autoPlay={autoPlay} muted={true} index={index} inView={inView} />\r\n      :\r\n      <Image ImageClass=\"tb_nc_image\" Post={Post} size={size} hotspot={isTagShop} blurBG={false} observer={true} index={index} inView={inView} />\r\n    }\r\n  </div>\r\n}\r\nexport default Media","import React, { Suspense, useRef } from 'react'\r\nimport { PostTrimContent } from \"../../../../utils\";\r\nimport { isTagShop, isTagbox } from \"../../../../actions/api\";\r\nimport Media from \"./Media\";\r\nimport PostContent from \"../../Elements/PostContent/PostContent\";\r\nimport ShareOnHover from \"../../Elements/ShareOnHover/ShareOnHover\";\r\nimport CTAButton from \"../../Elements/CTA/CtaButton\";\r\nimport InViewWrapper from '../../Elements/InViewWrapper';\r\nimport AuthorDetails from '../../Elements/Author/AuthorDetails';\r\nconst SocialAction = React.lazy(() => import('../../Elements/SocialAction/SocialAction'));\r\nconst Rating = React.lazy(() => import(\"../../Elements/Rating/Rating\"));\r\n\r\n\r\nconst trim_content_length = 200;\r\n\r\nconst Card = ({ postSize, clickToShowPopUp, index, onClickToCTA, ThemeStyle, CardStyle, Post, ThemeInfo, counter }) => {\r\n  const themeId = ThemeInfo.id;\r\n  const mediaType = Post.type !== 1;\r\n  const rating = Post.rating > 0;\r\n  const contentClass = Post.rating > 0 ? \"tb_nc_rating_content\" : \"tb_nc_content\";\r\n  const textDecorate = Post.type === 1 && CardStyle.style.textDecoration ? \"tb_nc_text_decoration tb_nc_text_post\" : \"\";\r\n  const postTextContent = CardStyle.content.trimcontent ? PostTrimContent(Post.content.text, trim_content_length) : Post.content.text;\r\n\r\n  return (\r\n    <InViewWrapper>\r\n      {({ ref, inView }) => (\r\n        <div ref={ref} style={{ width: `${postSize}%`, padding: CardStyle.style.padding / 2, opacity: inView ? 1 : 0, transition: inView ? 'opacity .5s ease-in-out' : '' }} className={`tb_nc_post_wrapper${(isTagbox && themeId === 83) ? ` tb_nc_post_gradient tb_nc_gradient-${counter}` : \"\"}`} role=\"article\" area-label={Post.content.text} post-id={Post.referenceId ? Post.referenceId : Post.id} feed-id={Post.feedId}>\r\n          <div id={`tb_nc_id-${Post.id}`} tb-network={Post.networkId} post-id={Post.referenceId || Post.id} feed-id={Post.feedId} tabIndex=\"0\" area-label={postTextContent} role=\"article\">\r\n            <div className=\"tb_nc_post_wrap_in\">\r\n              <div className=\"tb_nc_post_in\" onClick={clickToShowPopUp(index, Post)} role=\"button\" aria-label=\"open detail modal for post\" tabIndex=\"0\">\r\n                {Post.share.status ? (\r\n                  <ShareOnHover share={Post.share} shareClass={\"tb_nc_share_container\"} Post={Post} ThemeInfo={ThemeInfo} />\r\n                ) : null}\r\n                {mediaType ? (\r\n                  <Media Post={Post} CardStyle={CardStyle} ThemeStyle={ThemeStyle} ThemeInfo={ThemeInfo} index={index} inView={inView} />\r\n                ) : null}\r\n                {rating && themeId !== 59 && !isTagShop ? (\r\n                  <div className=\"tb_nc_rating__\">\r\n                    <Suspense fallback={<div className='rating-default-height'></div>}>\r\n                      <Rating rating={Post.rating} networkId={Post.networkId} />\r\n                    </Suspense>\r\n                  </div>\r\n                ) : null}\r\n                <div className=\"tb_nc_contant_wrapper\">\r\n                  <AuthorDetails className={'tb_nc'} Post={Post} CardStyle={CardStyle} ThemeInfo={ThemeInfo} inView={inView} />\r\n\r\n                  {Post.ctaStatus ?\r\n                    <div className=\"tb_nc_post_cta\">\r\n                      <CTAButton ctaClass={\"tb_nc_post_cta_btn\"} cta={Post} Post={Post} onClickToCTA={onClickToCTA} />\r\n                    </div>\r\n                    : null}\r\n                  {rating && isTagShop ? (\r\n                    <div className=\"tb_nc_rating__\">\r\n                      <Suspense fallback={<div className='rating-default-height'></div>}>\r\n                        <Rating rating={Post.rating} networkId={Post.networkId} />\r\n                      </Suspense>\r\n                    </div>\r\n                  ) : null}\r\n                  {(CardStyle.content.status || Post.type === 1) ? (\r\n                    <PostContent contentClass={`${contentClass} ${textDecorate}`} Post={Post} content={postTextContent} CardStyle={CardStyle} contentTitle={Post.content.title} />\r\n                  ) : null}\r\n                </div>\r\n                {CardStyle.actionStatus ? (\r\n                  <Suspense fallback={''}>\r\n                    <SocialAction Post={Post} CardStyle={CardStyle} actionClass={`tb_nc_social_action__`} />\r\n                  </Suspense>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </InViewWrapper>\r\n  );\r\n}\r\nexport default Card","import React, { PureComponent } from \"react\";\r\nimport Masonry from 'react-masonry-component';\r\nimport { isTagbox } from '../../../actions/api'\r\nimport './scss/NewsCard.scss'\r\nimport Card from './Elements/Card';\r\nimport { getColumnCount, getSizeInPercent } from \"../../../utils\";\r\nclass NewsCard extends PureComponent {\r\n\r\n  componentDidMount(){\r\n    this.props.loadBranding()\r\n  }\r\n\r\n  render() {\r\n    const { postData, completeDataObject, CardStyle, ThemeStyle, ThemeInfo, clickToShowPopUp, onClickToCTA, onClickPopUpSlider, containerSize } = this.props;\r\n    const minCardSize = (CardStyle.minimumWidth || 150 ) + 20\r\n    const columns =  getColumnCount(containerSize.width, ThemeStyle.column, minCardSize);\r\n    const postSize = getSizeInPercent(containerSize.width, columns)\r\n\r\n    let counter = 0;\r\n\r\n    return (\r\n      <Masonry\r\n        className={`tb_nc_post_container`}\r\n        tabIndex='0'\r\n        aria-label={`There are ${(postData && postData.length > 0) ? postData.length : 0} posts in the feed`} role=\"feed\"\r\n        elementType={'div'}\r\n        options={{\r\n          transitionDuration: 0,\r\n          percentPosition: true,\r\n          itemSelector: '.tb_nc_post_wrapper',\r\n          horizontalOrder: true,\r\n          resize: true,\r\n        }}\r\n        disableImagesLoaded={false}\r\n        updateOnEachImageLoad={false}\r\n        imagesLoadedOptions={{}}\r\n        enableResizableChildren={true}>{\r\n          ((postData && postData.length > 0)) && postData.map((item, index) => {\r\n            const cardData = completeDataObject[item];\r\n            counter = (isTagbox && ThemeInfo?.id == 83) ? index % 6 === 0 ? 1 : counter + 1 : 1;\r\n            return <Card key={index} postSize={postSize} clickToShowPopUp={clickToShowPopUp} onClickToCTA={onClickToCTA} onClickPopUpSlider={onClickPopUpSlider} Post={cardData} index={index} CardStyle={CardStyle} ThemeStyle={ThemeStyle} ThemeInfo={ThemeInfo}/>\r\n          })\r\n        }\r\n      </Masonry>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewsCard\r\n\r\n\r\n"],"names":["DefaultNetwork","React","Network","PureComponent","render","networkId","networkClass","iconStyle","this","props","default","includes","_jsx","Suspense","fallback","_Fragment","children","className","GET_NETWORK_ICON","GET_NETWORK_NAME","PostContent","constructor","super","contentRef","componentDidMount","setTimeout","_this$contentRef","_this$contentRef$curr","current","clientHeight","_this$contentRef2","_this$contentRef2$cur","contentHeight","contentRefCallBack","CardStyle","contentClass","content","contentTitle","maxLines","isReadMore","trimLines","trimcontent","isTagShop","truncateStyle","WebkitLineClamp","textAlign","style","contentData","STRING_TO_URL_CONVERT","contentClasses","variant","_jsxs","ref","parse","ShareOnHover","arguments","onClickData","shareURL","event","Post","ThemeInfo","stopPropagation","themePostTracking","type","action","wall","wallID","feed","feedId","post","referenceId","id","owner","ownerId","gtmAnalytics","window","open","shareClass","facebook","twitter","linkedin","share","GetShareIncon","_ref","shareOn","icon","onClick","title","ThemeStyle","index","inView","autoPlay","size","isTagbox","ratio","networkOnTop","network","MediaIcon","IconClass","show","hideVideo","Video","VideoClass","isCover","controls","muted","Image","ImageClass","hotspot","blurBG","observer","SocialAction","Rating","postSize","clickToShowPopUp","onClickToCTA","counter","themeId","mediaType","rating","textDecorate","textDecoration","postTextContent","PostTrimContent","text","InViewWrapper","_ref2","width","padding","opacity","transition","role","tabIndex","status","Media","AuthorDetails","ctaStatus","CTAButton","ctaClass","cta","actionStatus","actionClass","NewsCard","loadBranding","postData","completeDataObject","onClickPopUpSlider","containerSize","minCardSize","minimumWidth","columns","getColumnCount","column","getSizeInPercent","Masonry","length","elementType","options","transitionDuration","percentPosition","itemSelector","horizontalOrder","resize","disableImagesLoaded","updateOnEachImageLoad","imagesLoadedOptions","enableResizableChildren","map","item","cardData","Card"],"sourceRoot":""}