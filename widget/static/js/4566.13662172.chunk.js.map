{"version":3,"file":"static/js/4566.13662172.chunk.js","mappings":"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","sources":["app/Themes/Elements/CardSnapUp.js","app/Components/UserComponents/OnsiteUploadButton/index.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport OnsiteUploadButton from '../../Components/UserComponents/OnsiteUploadButton'\r\n\r\nexport default class CardSnapUp extends Component {\r\n       constructor(props) {\r\n              super(props);\r\n              this.state = {\r\n                     snapBtnSize: 0,\r\n                     sizeClass : ''\r\n              };\r\n              this.updateDimensions = this.updateDimensions.bind(this);\r\n       }\r\n\r\n       componentDidMount() {\r\n              window.addEventListener('resize', this.updateDimensions);\r\n              this.updateDimensions();\r\n       }\r\n\r\n       componentWillUnmount() {\r\n              window.removeEventListener('resize', this.updateDimensions);\r\n       }\r\n       componentDidUpdate() {\r\n              this.updateDimensions();\r\n       }\r\n\r\n       updateDimensions() {\r\n\r\n              const { className } = this.props\r\n              const snapBtnSize = this.divRef.offsetWidth;\r\n\r\n              if (snapBtnSize !== this.state.snapBtnSize) {\r\n                     if(snapBtnSize < 200 && snapBtnSize > 150){\r\n                            this.setState({ sizeClass: `${className}-3x` });\r\n                     }else if(snapBtnSize < 150 && snapBtnSize > 120) {\r\n                            this.setState({ sizeClass: `${className}-2x` });\r\n                     }else if(snapBtnSize < 120 && snapBtnSize > 0) {\r\n                            this.setState({ sizeClass: `${className}-1x` });\r\n                     }\r\n                     this.setState({ snapBtnSize });\r\n              }\r\n       }\r\n       render() {\r\n              const { className, wallId, webId, SnapUp } = this.props\r\n              const { sizeClass } = this.state\r\n              return (\r\n                     <div className={`${className} ${sizeClass}`} ref={(ref) => { this.divRef = ref; }}>\r\n                           <OnsiteUploadButton SnapUp={SnapUp} id={wallId} webId={webId}/>\r\n                     </div>\r\n              )\r\n       }\r\n}","import React, { PureComponent } from \"react\";\r\nimport QRCode from \"react-qr-code\";\r\nimport { connect } from \"react-redux\";\r\nimport { ServerUrl, TagShopServerUrl, SocialWallServerUrl } from '../../../../constants' \r\nimport { isTagShop, isSocialWall, isSocialEmbed, isEditor, isPreview, isUgcsuit } from '../../../../actions/api'\r\nimport { wUrl } from \"../../../../utils\";\r\nimport { onSitePopup } from \"../../../../actions/OtherActions\";\r\nimport './scss/OnsiteUploadButton.scss';\r\n\r\n class OnsiteUploadButton extends PureComponent {\r\n\r\n  render() {\r\n    const { SnapUp, id, webId } = this.props;\r\n    var ugcSuite = window.ugcSuite ? { ugcSuite: 1 } : isUgcsuit ? { ugcSuite: 1 } : {}\r\n\r\n    const isTagshopWall = !webId && isTagShop ? true : false\r\n\r\n    const { QrCode, Form } = SnapUp\r\n\r\n    const QRButtonText = QrCode.status || QrCode.text != '' ? QrCode.text : ''\r\n    const QRLink = isTagShop ? `${TagShopServerUrl}/${id}/onsite-upload${isTagshopWall ? '?wall=1' : ''}` : `${isSocialWall && !isSocialEmbed ? SocialWallServerUrl : ServerUrl}/${id}?onsite-upload=true${isUgcsuit}`\r\n\r\n    const wallQRClass = isSocialWall && !isSocialEmbed ? QRButtonText.length < 31 ? 'tb_snap_btn_wall tb_snap_btn_wall_v' : 'tb_snap_btn_wall' : ''\r\n    const position = QrCode?.position ? ` tb_pos-${QrCode.position}` : null\r\n    return Form.status && (isTagShop || Form.status) && (QrCode.status == 1 || QRButtonText !== '') ? <div className={`tb_onsite_upload_btn_wrap ${wallQRClass}${position}`}>\r\n      <div className=\"tb_onsite_upload_btn\">\r\n        <div className=\"tb_snap_btn_bg\" style={{ opacity: isSocialWall ? 0.7 : null }}><div></div></div>\r\n        <div className='tb_onsite_btn' onClick={() => isEditor || isPreview || wUrl(\"display.socialwalls.com\")  ? this.props.onSitePopup(false) : this.props.onSitePopup(true)}>\r\n          <div className=\"tb_onsite_qr_btn_wrap\">\r\n            {QrCode.status == 1 ? <div className='tb_onsite_qr_code'>\r\n              <QRCode level=\"L\" size={60} value={QRLink} />\r\n            </div> : null}\r\n            {QRButtonText !== '' ?\r\n              <div className={`tb_onsite_btn_txt tb-cTBfont-${QrCode.style.variant}`}>\r\n                {QRButtonText}\r\n              </div> : ''}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div> : null\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    modalPop: state.modalPop\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSitePopup: (status) => dispatch(onSitePopup(status)),\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OnsiteUploadButton);"],"names":["CardSnapUp","Component","constructor","props","super","this","state","snapBtnSize","sizeClass","updateDimensions","bind","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","componentDidUpdate","className","divRef","offsetWidth","setState","render","wallId","webId","SnapUp","_jsx","ref","children","OnsiteUploadButton","id","PureComponent","ugcSuite","isUgcsuit","isTagshopWall","isTagShop","QrCode","Form","QRButtonText","status","text","QRLink","TagShopServerUrl","isSocialWall","isSocialEmbed","SocialWallServerUrl","ServerUrl","wallQRClass","length","position","_jsxs","style","opacity","onClick","isEditor","isPreview","wUrl","onSitePopup","QRCode","level","size","value","variant","connect","modalPop","dispatch"],"sourceRoot":""}