{"version":3,"file":"static/js/3127.e5eec4fb.chunk.js","mappings":"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","sources":["app/Themes/CollageTheme/Elements/Media.js","app/Themes/Elements/Media/Video.js","../node_modules/react-image-size/lib/index.js","../node_modules/react-image-size/lib/lib/constants.js","../node_modules/react-image-size/lib/lib/getImageSize.js","../node_modules/react-image-size/lib/lib/useImageSize.js"],"sourcesContent":["import React, { Suspense } from \"react\";\nimport { isTagEmbed, isTagShop } from \"../../../../actions/api\";\nimport MediaIcon from \"../../Elements/MediaIcon/MediaIcon\";\nimport Image from \"../../Elements/Media/Image\";\nimport Video from \"../../Elements/Media/Video\";\nconst Network = React.lazy(() => import(\"../../Elements/Network/Network\"));\nconst Media = ({ itemData, wallID, ThemeID, ownerId, wall }) => {\n  const mediaIcon = isTagShop && !itemData.hotspot ? true : false\n  const isVideo = (itemData.type === 3 || itemData.type === 5) && (wall.ThemeRule.autoPlay == 1 || !isTagShop) ? true : false\n\n  return <div className=\"tb_ct_media_wrap\" role=\"button\" tabindex=\"0\" aria-label=\"Pop Up Button\">\n    {isTagEmbed ? <div className=\"tb_ct_social_top_\">\n      <Suspense fallback={<></>}><Network networkClass={'tb_ct_social__ico'} network={itemData.network} isDefault={wall.ThemeRule.iconType === 1 ? true : false} ThemeRule={wall.ThemeRule} /></Suspense>\n    </div> : null}\n    <MediaIcon itemData={itemData} IconClass=\"tb_ct_media_icon\" show={mediaIcon} />\n    {isVideo ? <Video VideoClass=\"tb_ct_video\" data={itemData} wallID={wallID} themeID={wall.Personalization.widgetTheme} ownerId={ownerId} size={100} isCover={true} muted={true} />\n      : <Image ImageClass=\"tb_ct_image\" data={itemData} wallID={wallID} themeID={ThemeID} ownerId={ownerId} size={100} hotspot={itemData.hotspot ? true : false} />}\n  </div>\n}\nexport default Media","import React, { PureComponent } from \"react\";\nimport { getImageSize } from 'react-image-size';\nimport ReactPlayer from \"react-player\"\nimport { POPUP_VIDEO_RENEW } from '../../../../actions/themeActions'\nimport { isTagShop, isTagEmbed } from \"../../../../actions/api\";\nimport PostBranding from \"../Branding/PostBranding\";\n\nconst mediaReplaceText = (mediaUrl, networkId) => {\n    switch (networkId) {\n        case 25:\n            const soundCloud = String(mediaUrl).replace(\"https://w.soundcloud.com/player/?url=\", \"\")\n            return soundCloud\n            break;\n\n        default:\n            return mediaUrl\n            break;\n    }\n\n}\nexport default class Video extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loadError: false,\n            paddingBottom: 100,\n            videoLoaded: false,\n            imgUrl: this.props.data.postFileNew,\n            isVisible: false,\n        }\n        this.videoRef = React.createRef();\n        this.observer = null;\n    }\n    componentWillMount() {\n        const { data } = this.props;\n        let updateVideo = document.querySelector(`#video_p_${data.id}`);\n        if (updateVideo) {\n            updateVideo.play()\n            updateVideo.muted = true;\n        }\n\n        if (this.props.size) {\n            this.setState({\n                paddingBottom: this.props.size == 1 ? null : isTagEmbed ? this.props.size : this.props.size\n            })\n        } else {\n            this.onMediaLoad();\n        }\n    }\n\n    componentDidMount() {\n        const { data } = this.props;\n        let updateVideo = document.querySelector(`#video_p_${data.id}`);\n        if (updateVideo) {\n            updateVideo.play()\n            updateVideo.muted = true;\n        }\n\n        if (this.props.size) {\n            this.setState({\n                paddingBottom: this.props.size == 1 ? null : isTagEmbed ? this.props.size : this.props.size\n            })\n        } else {\n            this.onMediaLoad();\n        }\n        try {\n            this.observer = new IntersectionObserver(\n                ([entry]) => {\n                    this.setState({ isVisible: entry.isIntersecting });\n                },\n                {\n                    threshold: 0.5, // Video is considered visible if 50% of it is in the viewport\n                }\n            );\n\n            if (this.videoRef.current) this.observer.observe(this.videoRef.current);\n        }\n        catch (error) {\n            this.setState({ isVisible: true });\n        }\n    }\n\n    onMediaLoad = async (props) => {\n        const { data } = this.props;\n        if (data && Object.keys(data).length > 0 && [4, 5, 3].includes(data.type)) {\n            if (data.mediaHeight && data.mediaHeight != \"\" && data.mediaWidth && data.mediaWidth != \"\") {\n                this.setState({\n                    paddingBottom: (data.mediaHeight * 100) / data.mediaWidth\n                })\n            } else {\n                try {\n                    const { width, height } = await getImageSize(data.postFileNew);\n                    this.setState({\n                        paddingBottom: (height * 100) / width\n                    })\n                } catch (error) {\n                    this.setState({\n                        paddingBottom: 100\n                    })\n                }\n            }\n        }\n    }\n    setVideoLoaded = event => {\n        this.setState({\n            videoLoaded: event\n        })\n    }\n\n    componentWillUnmount() {\n        if (this.observer && this.videoRef.current) {\n            this.observer.unobserve(this.videoRef.current);\n        }\n    }\n    render() {\n        const { VideoClass, data, wallID, isCover, controls, autoPlay, handleVideoEnded, muted } = this.props\n        const { paddingBottom, videoLoaded, isVisible } = this.state\n        const videoStyle = {\n            paddingBottom: `${paddingBottom}%`\n        };\n        const mediaClip = data.mediaClip && String(data.mediaClip).length > 0 ? data.mediaClip : data.mediaUrl\n        return <div className={`${VideoClass}_wrap_ mediaHolder${data.id}`} style={videoStyle} ref={this.videoRef}>\n            {/* {data?.postBranding ? <PostBranding size={1} /> : null} */}\n            <ReactPlayer\n                // ref={videoRef}\n                className={`${VideoClass} video${data.id}`}\n                url={mediaReplaceText(mediaClip, data.network.id)}\n                data-type=\"video\"\n                data-network={data.network.id}\n                data-link={data.link}\n                data-wall-id={wallID}\n                data-item-id={data.id}\n                data-feed-id={data.feedId ? data.feedId : \"\"}\n                data-load={0}\n                config={{\n                    facebook: {\n                        appId: '117029975354072',\n                        attributes: {\n                            'data-width': 'auto',\n                            'data-height': `${document.querySelector('.ts_rt_post_in') ? `${document.querySelector('.ts_rt_post_in').clientHeight} px` : '100%'}`,\n\n                        }\n                    },\n                    file: {\n                        attributes: {\n                            preload: 'metadata',\n                            // onError: (e) => IMG_LOAD_AFTER_COMPLETE_LAYOUT_FOR_POP_UP_VIDEO(e)\n                        }\n                    }\n                }}\n                loop={autoPlay ? true : true}\n                onError={(e) => {\n                    if (!data.stories || data.stories == 0) POPUP_VIDEO_RENEW(e, data.id)\n\n                    //this.setVideoLoaded(false)\n                }}\n                //(data.stories == 0) ? POPUP_VIDEO_RENEW(e) : null}\n                autoPlay={autoPlay}\n                muted={muted}\n                volume={autoPlay ? 1 : 0}\n                playsinline={true}\n                onReady={(e) => { isTagShop ? this.setVideoLoaded(false) : this.setVideoLoaded(true) }}\n                playing={isTagShop ? isVisible : autoPlay}\n                height={'100%'}\n                width={'100%'}\n                controls={controls ? controls : false}\n                // onProgress={onPlayingVideo}\n                style={{ backgroundImage: (!videoLoaded) ? `url(${data.postFileNew})` : `url(${data.postFileNew})`, backgroundSize: isCover ? 'cover' : 'contain', backgroundPosition: 'center', backgroundRepeat: 'no-repeat' }}\n                onEnded={handleVideoEnded ? handleVideoEnded : null}\n            />\n        </div>\n    }\n}\n\n\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useImageSize = exports.getImageSize = exports.Error = void 0;\nvar constants_1 = require(\"./lib/constants\");\nObject.defineProperty(exports, \"Error\", { enumerable: true, get: function () { return constants_1.ErrorMessage; } });\nvar getImageSize_1 = require(\"./lib/getImageSize\");\nObject.defineProperty(exports, \"getImageSize\", { enumerable: true, get: function () { return getImageSize_1.getImageSize; } });\nvar useImageSize_1 = require(\"./lib/useImageSize\");\nObject.defineProperty(exports, \"useImageSize\", { enumerable: true, get: function () { return useImageSize_1.useImageSize; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ErrorMessage = void 0;\nexports.ErrorMessage = {\n    WINDOW_IS_NOT_DEFINED: 'Window is not defined',\n    URL_IS_NOT_DEFINED: 'Url is not defined',\n    TIMEOUT: 'Timeout',\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getImageSize = void 0;\nconst constants_1 = require(\"./constants\");\nconst getImageSize = (url, options = {}) => {\n    return new Promise((resolve, reject) => {\n        if (typeof window === 'undefined') {\n            return reject(constants_1.ErrorMessage.WINDOW_IS_NOT_DEFINED);\n        }\n        if (!url) {\n            return reject(constants_1.ErrorMessage.URL_IS_NOT_DEFINED);\n        }\n        let timer = null;\n        const img = new Image();\n        img.addEventListener('load', () => {\n            if (timer) {\n                window.clearTimeout(timer);\n            }\n            resolve({ width: img.naturalWidth, height: img.naturalHeight });\n        });\n        img.addEventListener('error', (event) => {\n            if (timer) {\n                window.clearTimeout(timer);\n            }\n            reject(`${event.type}: ${event.message}`);\n        });\n        img.src = url;\n        if (options.timeout) {\n            timer = window.setTimeout(() => reject(constants_1.ErrorMessage.TIMEOUT), options.timeout);\n        }\n    });\n};\nexports.getImageSize = getImageSize;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useImageSize = void 0;\nconst react_1 = require(\"react\");\nconst getImageSize_1 = require(\"./getImageSize\");\nconst useImageSize = (url, options) => {\n    const [dimensions, setDimensions] = (0, react_1.useState)(null);\n    const [loading, setLoading] = (0, react_1.useState)(false);\n    const [error, setError] = (0, react_1.useState)(null);\n    (0, react_1.useEffect)(() => {\n        const fetch = () => __awaiter(void 0, void 0, void 0, function* () {\n            setLoading(true);\n            setDimensions(null);\n            try {\n                const { width, height } = yield (0, getImageSize_1.getImageSize)(url, options);\n                setDimensions({ width, height });\n            }\n            catch (error) {\n                setError(error.toString());\n            }\n            finally {\n                setLoading(false);\n            }\n        });\n        fetch();\n    }, [url, options]);\n    return [dimensions, { loading, error }];\n};\nexports.useImageSize = useImageSize;\n"],"names":["Network","React","_ref","itemData","wallID","ThemeID","ownerId","wall","mediaIcon","isTagShop","hotspot","isVideo","type","ThemeRule","autoPlay","_jsxs","className","role","tabindex","children","isTagEmbed","_jsx","Suspense","fallback","_Fragment","networkClass","network","isDefault","iconType","MediaIcon","IconClass","show","Video","VideoClass","data","themeID","Personalization","widgetTheme","size","isCover","muted","Image","ImageClass","mediaReplaceText","mediaUrl","networkId","String","replace","PureComponent","constructor","props","super","onMediaLoad","async","this","Object","keys","length","includes","mediaHeight","mediaWidth","setState","paddingBottom","width","height","getImageSize","postFileNew","error","setVideoLoaded","event","videoLoaded","state","loadError","imgUrl","isVisible","videoRef","observer","componentWillMount","updateVideo","document","querySelector","concat","id","play","componentDidMount","IntersectionObserver","entry","isIntersecting","threshold","current","observe","componentWillUnmount","unobserve","render","controls","handleVideoEnded","videoStyle","mediaClip","style","ref","ReactPlayer","url","link","feedId","config","facebook","appId","attributes","clientHeight","file","preload","loop","onError","e","stories","POPUP_VIDEO_RENEW","volume","playsinline","onReady","playing","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","onEnded","exports","constants_1","require","getImageSize_1","defineProperty","enumerable","get","useImageSize_1","value","ErrorMessage","WINDOW_IS_NOT_DEFINED","URL_IS_NOT_DEFINED","TIMEOUT","options","arguments","undefined","Promise","resolve","reject","window","timer","img","addEventListener","clearTimeout","naturalWidth","naturalHeight","message","src","timeout","setTimeout","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","result","done","then","apply","useImageSize","react_1","dimensions","setDimensions","useState","loading","setLoading","setError","useEffect","toString"],"sourceRoot":""}