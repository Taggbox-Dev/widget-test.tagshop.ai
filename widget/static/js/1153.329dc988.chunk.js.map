{"version":3,"file":"static/js/1153.329dc988.chunk.js","mappings":"+KAEA,MAAMA,EAASC,EAAAA,MAAW,IAAM,kCAC1BC,EAAOD,EAAAA,MAAW,IAAM,kCACxBE,EAAUF,EAAAA,MAAW,IAAM,0CAwBjC,EAtBsBG,IAAsE,IAArE,OAAEC,EAAM,gBAAEC,EAAe,SAAEC,EAAQ,QAAEC,EAAO,UAAEC,EAAS,KAAEC,GAAMN,EACpF,MAAMO,EAAWN,EAAOM,UAAWN,EAAOM,SAASC,OAAS,EAAC,IAAAC,OAAOR,EAAOM,UAAkB,GACvFG,KAAcR,EAAgBQ,YAAeT,EAAOU,aACpDC,KAAkBV,EAAgBQ,aAAcR,EAAgBC,UAAaF,EAAOU,aAC1F,OAAOE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAuB,aAAW,iBAAiB,uBAAqB,sBAAqBC,SAAA,EACjHF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,CAC1BL,GAAaM,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACC,UAAUF,EAAAA,EAAAA,KAAAG,EAAAA,SAAA,IAAMJ,UAACC,EAAAA,EAAAA,KAACpB,EAAM,CAACK,OAAQA,EAAQG,QAASA,EAASgB,YAAa,2BAAwC,IACxIP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,CAC/BL,GAAaM,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,SAAEd,EAAOoB,OAAc,IACtER,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC7BL,GAAaM,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,SAAER,IAAkB,GAChEK,GAAiBI,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,SAAC,MAAU,GAC3Db,EAAgBC,UAAWU,EAAAA,EAAAA,MAACI,EAAAA,SAAQ,CAACC,UAAUF,EAAAA,EAAAA,KAAAG,EAAAA,SAAA,IAAMJ,SAAA,EAACC,EAAAA,EAAAA,KAAClB,EAAI,CAACK,SAAUA,EAAUmB,UAAS,yBAAAb,OAA2BJ,EAAUkB,cAAgBC,YAAanB,EAAUmB,cAAe,OAAe,YAIxMC,EAAAA,GAGS,MAFTT,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,UAC5BC,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAACC,UAAUF,EAAAA,EAAAA,KAAAG,EAAAA,SAAA,IAAMJ,UAACC,EAAAA,EAAAA,KAACjB,EAAO,CAAC2B,aAAc,oBAAqBtB,QAASA,EAASuB,UAAkC,IAAvBtB,EAAUuB,SAA+BvB,UAAWA,UAExJ,C","sources":["app/Themes/SquarePhoto/Elements/AuthorDetails.js"],"sourcesContent":["import React, { Suspense } from \"react\";\nimport { isTagEmbed } from \"../../../../actions/api\";\nconst Author = React.lazy(() => import(\"../../Elements/Author/Author\"));\nconst Time = React.lazy(() => import(\"../../Elements/Time/Time\"));\nconst Network = React.lazy(() => import(\"../../Elements/Network/Network\"));\n\nconst AuthorDetails = ({ author, personalization, postTime, network, ThemeRule, font }) => {\n  const username = author.username ? author.username.length > 0 ? `@${author.username}` : `` : '';\n  const postAuthor = (personalization.postAuthor && !author.isInstaUser) ? true : false;\n  const authorSeprator = (personalization.postAuthor && personalization.postTime && !author.isInstaUser) ? true : false;\n  return <div className=\"tb_sp_author_wrapper\" aria-label=\"Author details\" aria-roledescription=\"post author details\">\n    <div className=\"tb_sp_author\">\n      {postAuthor ? <Suspense fallback={<></>}><Author author={author} network={network} authorClass={'tb_sp_author_profile'} /></Suspense> : ''}\n      <div className=\"tb_sp_author_info\">\n        {postAuthor ? <div className=\"tb_sp_authorname\">{author.name}</div> : ''}\n        <div className=\"tb_sp_post_info\">\n          {postAuthor ? <div className=\"tb_sp_username\">{username}</div> : ''}\n          {authorSeprator ? <div className=\"tb_sp_seprator\"> </div> : ''}\n          {personalization.postTime ? <Suspense fallback={<></>}><Time postTime={postTime} timeClass={`tb_sp_time tb-cTBfont-${ThemeRule.font_varient}`} authorColor={ThemeRule.authorColor} /> </Suspense> : ''}\n        </div>\n      </div>\n    </div>\n    {!isTagEmbed ?\n      <div className=\"tb_sp_social_\">\n        <Suspense fallback={<></>}><Network networkClass={'tb_sp_social__ico'} network={network} isDefault={ThemeRule.iconType === 1 ? true : false} ThemeRule={ThemeRule} /></Suspense>\n      </div> : null}\n  </div>\n}\nexport default AuthorDetails"],"names":["Author","React","Time","Network","_ref","author","personalization","postTime","network","ThemeRule","font","username","length","concat","postAuthor","isInstaUser","authorSeprator","_jsxs","className","children","_jsx","Suspense","fallback","_Fragment","authorClass","name","timeClass","font_varient","authorColor","isTagEmbed","networkClass","isDefault","iconType"],"sourceRoot":""}