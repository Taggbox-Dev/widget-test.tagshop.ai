{"version":3,"file":"static/js/3298.1dab4ae6.chunk.js","mappings":"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","sources":["app/Themes/Badge/Elements/PopUpCard.js","app/Themes/Elements/Author/Author.js","app/Themes/Elements/Author/Elements/AuthorAvatar.js","app/Themes/Elements/Network/Network.js","app/Themes/Elements/PostContent/PostContent.js","app/Themes/Elements/Rating/Rating.js"],"sourcesContent":["import React, { PureComponent } from \"react\";\nimport Author from \"../../Elements/Author/Author\";\nimport PostContent from '../../Elements/PostContent/PostContent'\nimport Rating from \"../../Elements/Rating/Rating\";\nimport Network from \"../../Elements/Network/Network\";\nimport { PostTrimContent } from \"../../../../utils\";\nimport { isTagEmbed } from \"../../../../actions/api\";\n\nconst trim_content_length = !isTagEmbed ? 200 : null;\nconst PopUpCard = ({ itemData, personalization, ThemeRule, toggleDivs }) => {\n\n    const contentClass = (itemData.rating > 0) ? 'tb_bt_rating_content' : 'tb_bt_content'\n    const textDecorate = (itemData.type === 1 && personalization.textDecorate) ? 'tb_bt_text_decoration tb_bt_text_post' : '';\n    const postTextContent = personalization.trimcontent ? PostTrimContent(itemData.content, trim_content_length) : itemData.content\n\n    const username = itemData.author.username ? itemData.author.username.length > 0 ? `@${itemData.author.username}` : `` : '';\n    const authorNameStyle = { color: ThemeRule.authorColor };\n\n    const isProduct = itemData.ugc_products && itemData.ugc_products.length > 0 ? true : false\n    const isShopIcon = (isProduct && itemData.hotspot === 0) ? true : false\n    const isHotspot = itemData.hotspot && isProduct ? true : false\n\n\n    return <div id={`tb-bt-post-${itemData.id}`} className=\"tb_bt_post_in\" tb-network={itemData.network.id} tb-product={isShopIcon ? 1 : isHotspot ? 2 : 0}>\n        <div className=\"tb_bt_close_btn\" onClick={toggleDivs}>\n            <div className=\"tb_bt_close_ico tb__icon tb-close-circle-line\"></div>\n        </div>\n        <Author author={itemData.author} network={itemData.network} authorClass={'tb_bt_author_profile'} />\n        <div className=\"tb_bt_post_info\">\n            <div className=\"tb_bt_author_info\">\n                <div className=\"tb_bt_authorname\" style={authorNameStyle}>{itemData.author.name}</div>\n                <div className=\"tb_bt_username\" style={authorNameStyle}>{username}</div>\n            </div>\n            <div className=\"tb_bt_contant_wrapper\">\n                <PostContent contentClass={`${contentClass} ${textDecorate}`} item={itemData} content={postTextContent} font={ThemeRule} ThemeRule={ThemeRule} personalization={personalization} contentTitle={itemData.contentTitle} textAlign={'left'} />\n            </div>\n            <div className=\"tb_bt_post_media_wrapp\" aria-label=\"Rating\" role=\"status\">\n                <div className=\"tb_bt_rating__\"><Rating rating={itemData.rating} network={itemData.network} /> </div>\n            </div>\n            <div className=\"tb_bt_social_\">\n                <Network networkClass={'tb_bt_social_ico'} network={itemData.network} isDefault={ThemeRule.iconType === 1 ? true : false} ThemeRule={ThemeRule} />\n                <div className=\"tb_bt_network_name\">{itemData.network.name}</div>\n            </div>\n        </div>\n    </div>\n}\nexport default PopUpCard","import React, { PureComponent } from \"react\";\nimport { GET_MEDIA_NAME } from \"../../../../utils\";\nimport AuthorAvatar from \"./Elements/AuthorAvatar\";\n\n\nexport default class Author extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isAuthorImagevalid: true\n    }\n  }\n  render() {\n    const { author, authorClass, network } = this.props;\n\n    return <div key={Math.random()} className={authorClass}>\n      {!this.state.isAuthorImagevalid ?\n        <AuthorAvatar authorClass={authorClass} username={author.name} network={network} color={network.id === null ? `#000` : network.color} errorPic={author.errorPic} />\n        :\n        <img className={`${authorClass}__`} src={author.picture && String(author.picture).includes('author.png') ? \" \" : author.picture.replace(/[ ]+/g, \"\")} aria-label=\"author image\" alt={author.name} width={44} height={44}\n          onError={(e) => {\n            this.setState({\n              isAuthorImagevalid: false\n            })\n          }}\n        />\n      }\n    </div>\n  }\n}\n\n","import React, { memo } from 'react';\nconst AuthorAvatar = ({ username, network, authorClass, errorPic }) => {\n    const background = network.color == '#ffffff' ? '#000' : network.color\n    return <img className={`${authorClass}__`} src={errorPic ? errorPic : `https://ui-avatars.com/api/?name=${username.replace(/\\s/g, '')}&background=${String(network.id === null ? `#000` : background).replace(\"#\", '')}&color=fff&length=1`} alt={username} width={45} height={45} aria-label=\"author image\" />\n}\n\nexport default memo(AuthorAvatar);","import React, { PureComponent, Suspense } from \"react\";\nimport { isTagEmbed } from \"../../../../actions/api\";\nconst DefaultNetwork = React.lazy(() => import(\"./DefaultNetwork\"));\n\nexport default class Network extends PureComponent {\n  render() {\n    const { network, networkClass, ThemeRule, isDefault, Personalization } = this.props;\n    const isDefaultIcon = isDefault ? (network.id === 7 || network.id === 4 || network.id === 36) ? false : true : false\n    const icon = isTagEmbed && network.id == 36 ? \"tagembed\" : network.icon;\n    return (isDefaultIcon ? <div className={`${networkClass} tb__icon tb-${icon.replace(/fa-/g, \"\")}`} aria-label={`post network ${network?.name || \"\"}`}><div></div></div> : <Suspense fallback={<></>}> <DefaultNetwork network={network} networkClass={networkClass} /></Suspense>);\n  }\n}\n","import React, { PureComponent, Suspense } from \"react\";\nimport ReactHtmlParser from 'react-html-parser';\nimport { IS_THEME, STRING_TO_URL_CONVERT } from '../../../../utils'\nimport { isTagEmbed, isTagShop } from \"../../../../actions/api\";\nimport Network from \"../../Elements/Network/Network\";\nconst ContentWithOutSlack = React.lazy(() => import('./PostContentConvertion'));\nexport default class PostContent extends PureComponent {\n  constructor(props) {\n    super(props);\n    // this.state = {\n    //   expanded: false,\n    // };\n\n    this.contentRef = React.createRef();\n  }\n  // toggleExpanded = event => {\n  //   this.setState({\n  //     expanded: !this.state.expanded,\n  //   });\n  //   event.stopPropagation()\n  // }\n\n  componentDidMount() {\n    setTimeout(() => {\n      if (this.contentRef?.current?.clientHeight) {\n       const contentHeight = this.contentRef?.current?.clientHeight || 0;\n        if (this.props.contentRefCallBack) this.props.contentRefCallBack(contentHeight)\n      }\n    }, 100);\n  }\n\n\n  render() {\n    const { contentClass, content, ThemeRule, font, personalization, item, contentTitle, readMore, maxLength, textAlign, maxLines, isReadMore } = this.props;\n    //const { expanded } = this.state\n    const truncateStyle = {\n      WebkitLineClamp: maxLines,\n      textAlign: ThemeRule.textAlignment\n    };\n    const textStyle = {\n      textAlign: textAlign ? textAlign : ThemeRule.textAlignment\n    }\n    //isTagEmbed && !IS_THEME(59) ? font.fontColor : null\n    let contentData = item.network.id == 20 ? content : STRING_TO_URL_CONVERT(content);\n\n    if (item.network.id == 12) contentData = ReactHtmlParser(contentData); // for RRS but we have to change from backend.\n\n    //const text = readMore ? expanded ? contentData : contentData.slice(0, maxLength) : contentData;\n\n    const trimClasses = `${ThemeRule.lineTrim ? ` tb_content_line-${ThemeRule.lineTrim}` : ``}`\n    const contentClasses = `${contentClass} ${!isReadMore ? trimClasses : ''} tb-cTBfont-${ThemeRule.font_varient}`\n    return (\n      <div className={contentClasses} ref={this.contentRef} style={truncateStyle}>\n        {contentTitle ? <div className=\"tb_bold_txt__\">{ReactHtmlParser(contentTitle)}</div> : null}\n        <Suspense fallback={<></>}> <ContentWithOutSlack data={item} content={contentData} Personalization={personalization} />\n        </Suspense>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport { isTagEmbed } from \"../../../../actions/api\";\n\nconst NetworkStar = ({ network }) => {\n    const networkStyles = {\n        3: { className: 'tb_rating_ico__ tb__icon tb-default-star', color: '#1b74e4' },\n        19: { className: 'tb_rating_ico__ tb__icon tb-yelp-star', color: '#e00707' },\n        23: { className: 'tb_rating_ico__ tb__icon tb-default-star', color: '#ff385c' },\n        28: isTagEmbed ? { className: 'tb_rating_ico__ tb__icon tb-star', color: '#F8B90C' } : { className: 'tb_rating_ico__ tb__icon tb-default-star', color: '#F8B90C' },\n        29: isTagEmbed ? { className: 'tb_rating_ico__ tb__icon tb-default-star', color: '#000' } : { className: 'tb_rating_ico__ tb__icon tb-default-star', color: '#613983' },\n        33: { className: 'tb_rating_ico__ tb__icon tb-trustpilot', color: '#000' },\n        35: { className: 'tb_rating_ico__ tb__icon tb-star-fill', color: '#34E0A1' },\n    };\n\n    const { className, color } = networkStyles[network.id] || {\n        className: 'tb_rating_ico__ tb__icon tb-default-star',\n        color: '#F8B90C',\n    };\n\n    return <div className={className} style={{ color }} tb-network={network.id}><div></div></div>;\n};\n\nconst ThemeStar = ({ ThemeID }) => {\n    const themeStyles = {\n        59: { className: 'tb_rating_ico__ tb__icon tb-star-fill', color: '#34E0A1' },\n    };\n\n    const { className, color } = themeStyles[ThemeID] || {\n        className: 'tb_rating_ico__ tb__icon tb-star-alt',\n        color: '#F8B90C',\n    };\n\n    return <div className={className} style={{ color }} tb-network={ThemeID}></div>;\n};\nexport default class Rating extends PureComponent {\n    render() {\n        const { rating, network, ThemeID } = this.props;\n        return (\n            <div className=\"tb__rating__\" aria-hidden>\n                {\n                    rating ? [...Array(rating)].map((el, index) => ThemeID ? <ThemeStar key={index} ThemeID={ThemeID} /> : <NetworkStar key={index} network={network} /> ) : null\n                }\n            </div>\n        );\n    }\n}\n"],"names":["trim_content_length","isTagEmbed","_ref","itemData","personalization","ThemeRule","toggleDivs","contentClass","rating","textDecorate","type","postTextContent","trimcontent","PostTrimContent","content","username","author","length","concat","authorNameStyle","color","authorColor","isProduct","ugc_products","isShopIcon","hotspot","isHotspot","_jsxs","id","className","network","children","_jsx","onClick","Author","authorClass","style","name","PostContent","item","font","contentTitle","textAlign","role","Rating","Network","networkClass","isDefault","iconType","PureComponent","constructor","props","super","this","state","isAuthorImagevalid","render","src","picture","String","includes","replace","alt","width","height","onError","e","setState","AuthorAvatar","errorPic","Math","random","background","memo","DefaultNetwork","React","Personalization","isDefaultIcon","icon","Suspense","fallback","_Fragment","ContentWithOutSlack","contentRef","componentDidMount","setTimeout","_this$contentRef","_this$contentRef$curr","current","clientHeight","_this$contentRef2","_this$contentRef2$cur","contentHeight","contentRefCallBack","readMore","maxLength","maxLines","isReadMore","truncateStyle","WebkitLineClamp","textAlignment","contentData","STRING_TO_URL_CONVERT","ReactHtmlParser","trimClasses","lineTrim","contentClasses","font_varient","ref","data","NetworkStar","networkStyles","ThemeStar","_ref2","ThemeID","Array","map","el","index"],"sourceRoot":""}