{"version":3,"file":"static/js/6037.45f68098.chunk.js","mappings":"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","sources":["app/Themes/Elements/Media/Video.js","app/Themes/SquarePhoto/Elements/Media.js","../node_modules/react-image-size/lib/index.js","../node_modules/react-image-size/lib/lib/constants.js","../node_modules/react-image-size/lib/lib/getImageSize.js","../node_modules/react-image-size/lib/lib/useImageSize.js"],"sourcesContent":["import React, { PureComponent } from \"react\";\nimport { getImageSize } from 'react-image-size';\nimport ReactPlayer from \"react-player\"\nimport { POPUP_VIDEO_RENEW } from '../../../../actions/themeActions'\nimport { isTagShop, isTagEmbed } from \"../../../../actions/api\";\nimport PostBranding from \"../Branding/PostBranding\";\n\nconst mediaReplaceText = (mediaUrl, networkId) => {\n    switch (networkId) {\n        case 25:\n            const soundCloud = String(mediaUrl).replace(\"https://w.soundcloud.com/player/?url=\", \"\")\n            return soundCloud\n            break;\n\n        default:\n            return mediaUrl\n            break;\n    }\n\n}\nexport default class Video extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loadError: false,\n            paddingBottom: 100,\n            videoLoaded: false,\n            imgUrl: this.props.data.postFileNew,\n            isVisible: false,\n        }\n        this.videoRef = React.createRef();\n        this.observer = null;\n    }\n    componentWillMount() {\n        const { data } = this.props;\n        let updateVideo = document.querySelector(`#video_p_${data.id}`);\n        if (updateVideo) {\n            updateVideo.play()\n            updateVideo.muted = true;\n        }\n\n        if (this.props.size) {\n            this.setState({\n                paddingBottom: this.props.size == 1 ? null : isTagEmbed ? this.props.size : this.props.size\n            })\n        } else {\n            this.onMediaLoad();\n        }\n    }\n\n    componentDidMount() {\n        const { data } = this.props;\n        let updateVideo = document.querySelector(`#video_p_${data.id}`);\n        if (updateVideo) {\n            updateVideo.play()\n            updateVideo.muted = true;\n        }\n\n        if (this.props.size) {\n            this.setState({\n                paddingBottom: this.props.size == 1 ? null : isTagEmbed ? this.props.size : this.props.size\n            })\n        } else {\n            this.onMediaLoad();\n        }\n        try {\n            this.observer = new IntersectionObserver(\n                ([entry]) => {\n                    this.setState({ isVisible: entry.isIntersecting });\n                },\n                {\n                    threshold: 0.5, // Video is considered visible if 50% of it is in the viewport\n                }\n            );\n\n            if (this.videoRef.current) this.observer.observe(this.videoRef.current);\n        }\n        catch (error) {\n            this.setState({ isVisible: true });\n        }\n    }\n\n    onMediaLoad = async (props) => {\n        const { data } = this.props;\n        if (data && Object.keys(data).length > 0 && [4, 5, 3].includes(data.type)) {\n            if (data.mediaHeight && data.mediaHeight != \"\" && data.mediaWidth && data.mediaWidth != \"\") {\n                this.setState({\n                    paddingBottom: (data.mediaHeight * 100) / data.mediaWidth\n                })\n            } else {\n                try {\n                    const { width, height } = await getImageSize(data.postFileNew);\n                    this.setState({\n                        paddingBottom: (height * 100) / width\n                    })\n                } catch (error) {\n                    this.setState({\n                        paddingBottom: 100\n                    })\n                }\n            }\n        }\n    }\n    setVideoLoaded = event => {\n        this.setState({\n            videoLoaded: event\n        })\n    }\n\n    componentWillUnmount() {\n        if (this.observer && this.videoRef.current) {\n            this.observer.unobserve(this.videoRef.current);\n        }\n    }\n    render() {\n        const { VideoClass, data, wallID, isCover, controls, autoPlay, handleVideoEnded, muted } = this.props\n        const { paddingBottom, videoLoaded, isVisible } = this.state\n        const videoStyle = {\n            paddingBottom: `${paddingBottom}%`\n        };\n        const mediaClip = data.mediaClip && String(data.mediaClip).length > 0 ? data.mediaClip : data.mediaUrl\n        return <div className={`${VideoClass}_wrap_ mediaHolder${data.id}`} style={videoStyle} ref={this.videoRef}>\n            {/* {data?.postBranding ? <PostBranding size={1} /> : null} */}\n            <ReactPlayer\n                // ref={videoRef}\n                className={`${VideoClass} video${data.id}`}\n                url={mediaReplaceText(mediaClip, data.network.id)}\n                data-type=\"video\"\n                data-network={data.network.id}\n                data-link={data.link}\n                data-wall-id={wallID}\n                data-item-id={data.id}\n                data-feed-id={data.feedId ? data.feedId : \"\"}\n                data-load={0}\n                config={{\n                    facebook: {\n                        appId: '117029975354072',\n                        attributes: {\n                            'data-width': 'auto',\n                            'data-height': `${document.querySelector('.ts_rt_post_in') ? `${document.querySelector('.ts_rt_post_in').clientHeight} px` : '100%'}`,\n\n                        }\n                    },\n                    file: {\n                        attributes: {\n                            preload: 'metadata',\n                            // onError: (e) => IMG_LOAD_AFTER_COMPLETE_LAYOUT_FOR_POP_UP_VIDEO(e)\n                        }\n                    }\n                }}\n                loop={autoPlay ? true : true}\n                onError={(e) => {\n                    if (!data.stories || data.stories == 0) POPUP_VIDEO_RENEW(e, data.id)\n\n                    //this.setVideoLoaded(false)\n                }}\n                //(data.stories == 0) ? POPUP_VIDEO_RENEW(e) : null}\n                autoPlay={autoPlay}\n                muted={muted}\n                volume={autoPlay ? 1 : 0}\n                playsinline={true}\n                onReady={(e) => { isTagShop ? this.setVideoLoaded(false) : this.setVideoLoaded(true) }}\n                playing={isTagShop ? isVisible : autoPlay}\n                height={'100%'}\n                width={'100%'}\n                controls={controls ? controls : false}\n                // onProgress={onPlayingVideo}\n                style={{ backgroundImage: (!videoLoaded) ? `url(${data.postFileNew})` : `url(${data.postFileNew})`, backgroundSize: isCover ? 'cover' : 'contain', backgroundPosition: 'center', backgroundRepeat: 'no-repeat' }}\n                onEnded={handleVideoEnded ? handleVideoEnded : null}\n            />\n        </div>\n    }\n}\n\n\n\n","import React, { Suspense } from \"react\";\nimport { isTagbox, isTagShop } from \"../../../../actions/api\";\nimport MediaIcon from \"../../Elements/MediaIcon/MediaIcon\";\nimport Image from \"../../Elements/Media/Image\";\nimport Video from \"../../Elements/Media/Video\";\nconst Network = React.lazy(() => import(\"../../Elements/Network/Network\"));\nconst Media = ({ itemData, wallID, ThemeID, ownerId, wall }) => {\n  const isUserType = wall?.User?.userDatabaseType == \"tagembed\"\n  const mediaIcon = itemData.hotspot ? false : true\n  const isVideo = (itemData.type === 3 || itemData.type === 5) && (wall.ThemeRule.autoPlay == 1) ? true : false\n  return <div className=\"tb_sp_media_wrap\" role=\"button\" tabindex=\"0\" aria-label=\"Pop Up Button\">\n    {!isUserType && !isTagbox ? <div className=\"tb_sp_social_top_\">\n      <Suspense fallback={<></>}><Network networkClass={'tb_sp_social__ico'} network={itemData.network} isDefault={wall.ThemeRule.iconType === 1 ? true : false} ThemeRule={wall.ThemeRule} /></Suspense>\n    </div> : null}\n    <MediaIcon itemData={itemData} IconClass={`tb_sp_media_icon${isUserType ? ' tb_sp_media_icon_te' : ''}`} show={mediaIcon} isCenter={isUserType} />\n    {isVideo ? <Video VideoClass=\"tb_sp_video\" data={itemData} wallID={wallID} themeID={wall.Personalization.widgetTheme} ownerId={ownerId} size={100} isCover={true} muted={true} autoPlay={true} />\n      : <Image ImageClass=\"tb_sp_image\" data={itemData} wallID={wallID} themeID={ThemeID} ownerId={ownerId} size={100} hotspot={itemData.hotspot ? true : false} />}\n  </div>\n}\nexport default Media","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useImageSize = exports.getImageSize = exports.Error = void 0;\nvar constants_1 = require(\"./lib/constants\");\nObject.defineProperty(exports, \"Error\", { enumerable: true, get: function () { return constants_1.ErrorMessage; } });\nvar getImageSize_1 = require(\"./lib/getImageSize\");\nObject.defineProperty(exports, \"getImageSize\", { enumerable: true, get: function () { return getImageSize_1.getImageSize; } });\nvar useImageSize_1 = require(\"./lib/useImageSize\");\nObject.defineProperty(exports, \"useImageSize\", { enumerable: true, get: function () { return useImageSize_1.useImageSize; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ErrorMessage = void 0;\nexports.ErrorMessage = {\n    WINDOW_IS_NOT_DEFINED: 'Window is not defined',\n    URL_IS_NOT_DEFINED: 'Url is not defined',\n    TIMEOUT: 'Timeout',\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getImageSize = void 0;\nconst constants_1 = require(\"./constants\");\nconst getImageSize = (url, options = {}) => {\n    return new Promise((resolve, reject) => {\n        if (typeof window === 'undefined') {\n            return reject(constants_1.ErrorMessage.WINDOW_IS_NOT_DEFINED);\n        }\n        if (!url) {\n            return reject(constants_1.ErrorMessage.URL_IS_NOT_DEFINED);\n        }\n        let timer = null;\n        const img = new Image();\n        img.addEventListener('load', () => {\n            if (timer) {\n                window.clearTimeout(timer);\n            }\n            resolve({ width: img.naturalWidth, height: img.naturalHeight });\n        });\n        img.addEventListener('error', (event) => {\n            if (timer) {\n                window.clearTimeout(timer);\n            }\n            reject(`${event.type}: ${event.message}`);\n        });\n        img.src = url;\n        if (options.timeout) {\n            timer = window.setTimeout(() => reject(constants_1.ErrorMessage.TIMEOUT), options.timeout);\n        }\n    });\n};\nexports.getImageSize = getImageSize;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useImageSize = void 0;\nconst react_1 = require(\"react\");\nconst getImageSize_1 = require(\"./getImageSize\");\nconst useImageSize = (url, options) => {\n    const [dimensions, setDimensions] = (0, react_1.useState)(null);\n    const [loading, setLoading] = (0, react_1.useState)(false);\n    const [error, setError] = (0, react_1.useState)(null);\n    (0, react_1.useEffect)(() => {\n        const fetch = () => __awaiter(void 0, void 0, void 0, function* () {\n            setLoading(true);\n            setDimensions(null);\n            try {\n                const { width, height } = yield (0, getImageSize_1.getImageSize)(url, options);\n                setDimensions({ width, height });\n            }\n            catch (error) {\n                setError(error.toString());\n            }\n            finally {\n                setLoading(false);\n            }\n        });\n        fetch();\n    }, [url, options]);\n    return [dimensions, { loading, error }];\n};\nexports.useImageSize = useImageSize;\n"],"names":["mediaReplaceText","mediaUrl","networkId","String","replace","Video","PureComponent","constructor","props","super","onMediaLoad","async","data","this","Object","keys","length","includes","type","mediaHeight","mediaWidth","setState","paddingBottom","width","height","getImageSize","postFileNew","error","setVideoLoaded","event","videoLoaded","state","loadError","imgUrl","isVisible","videoRef","React","observer","componentWillMount","updateVideo","document","querySelector","concat","id","play","muted","size","isTagEmbed","componentDidMount","IntersectionObserver","_ref","entry","isIntersecting","threshold","current","observe","componentWillUnmount","unobserve","render","VideoClass","wallID","isCover","controls","autoPlay","handleVideoEnded","videoStyle","mediaClip","_jsx","className","style","ref","children","ReactPlayer","url","network","link","feedId","config","facebook","appId","attributes","clientHeight","file","preload","loop","onError","e","stories","POPUP_VIDEO_RENEW","volume","playsinline","onReady","isTagShop","playing","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","onEnded","Network","_wall$User","itemData","ThemeID","ownerId","wall","isUserType","User","userDatabaseType","mediaIcon","hotspot","isVideo","ThemeRule","_jsxs","role","tabindex","isTagbox","Suspense","fallback","_Fragment","networkClass","isDefault","iconType","MediaIcon","IconClass","show","isCenter","themeID","Personalization","widgetTheme","Image","ImageClass","exports","constants_1","require","getImageSize_1","defineProperty","enumerable","get","useImageSize_1","value","ErrorMessage","WINDOW_IS_NOT_DEFINED","URL_IS_NOT_DEFINED","TIMEOUT","options","arguments","undefined","Promise","resolve","reject","window","timer","img","addEventListener","clearTimeout","naturalWidth","naturalHeight","message","src","timeout","setTimeout","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","result","done","then","apply","useImageSize","react_1","dimensions","setDimensions","useState","loading","setLoading","setError","useEffect","toString"],"sourceRoot":""}