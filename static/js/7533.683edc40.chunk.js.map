{"version":3,"file":"static/js/7533.683edc40.chunk.js","mappings":"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","sources":["app/Themes/Elements/Author/Author.js","app/Themes/Elements/PostContent/PostContent.jsx","app/Themes/Elements/Rating/Rating.js","app/Themes/Elements/Seprator/Seprator.js","app/Themes/Elements/ShareOnHover/ShareOnHover.js","app/Themes/Elements/Time/Time.js","app/Themes/HorizontalColumns/Elements/Media.js","app/Themes/HorizontalColumns/Elements/AuthorDetails.js","app/Themes/HorizontalColumns/Elements/Card.js","app/Themes/HorizontalColumns/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import React, {PureComponent } from \"react\";\r\nimport { GET_NETWORK_COLOR } from \"../../../../utils/Network\";\r\nexport default class Author extends PureComponent {\r\n\r\n  render() {\r\n    const { author, authorClass, networkId, size, inView } = this.props;\r\n\r\n    return <div key={Math.random()} className={authorClass} style={{ overflow: networkId == 4 ? 'visible' : '' }}>\r\n              {inView ? <img className={`${authorClass}__`} src={author.picture} aria-label=\"author\" alt={author.name} width={size ? size : 44} height={size ? size : 44}\r\n              onError={(e) => {\r\n                const networkColor = GET_NETWORK_COLOR(networkId); \r\n                const background = networkColor == '#ffffff' ? '000' : networkColor.replace(\"#\", \"\"); \r\n                e.target.src = author.errorPic ? author.errorPic : `https://ui-avatars.com/api/?name=${author.name.replace(/\\s/g, '')}&background=${background}&color=fff&length=1`}}\r\n              /> : null}\r\n          </div>\r\n  }\r\n}\r\n\r\n","import React, { PureComponent } from \"react\";\r\nimport { isTagShop } from \"../../../../actions/api\";\r\nimport parse from \"html-react-parser\";\r\nimport { STRING_TO_URL_CONVERT } from \"../../../../utils/Common\";\r\n// import PostContentHighlight from \"./PostContentHighlight\";\r\n\r\nexport default class PostContent extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.contentRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n      setTimeout(() => {\r\n        if (this.contentRef?.current?.clientHeight) {\r\n          const contentHeight = this.contentRef?.current?.clientHeight || 0;\r\n          if (this.props.contentRefCallBack) this.props.contentRefCallBack(contentHeight)\r\n        }\r\n      }, 100);\r\n\r\n    //  console.log(parsedHTML); // Parsed structure\r\n  }\r\n\r\n  render() {\r\n    const { CardStyle, contentClass, content, contentTitle, maxLines, isReadMore } = this.props;\r\n    const trimLines = CardStyle.content.trimcontent && !isTagShop ? CardStyle.content.trimcontent : 0;\r\n    const truncateStyle = {\r\n      WebkitLineClamp: maxLines,\r\n      textAlign: CardStyle.style.textAlign\r\n    };\r\n    const contentData = STRING_TO_URL_CONVERT(content);\r\n    const trimClasses = `${trimLines ? ` tb_content_line-${trimLines}` : ``}`\r\n    const contentClasses = `${contentClass} ${!isReadMore ? trimClasses : ''} tb-cTBfont-${CardStyle.style.variant}`\r\n    return (\r\n      <div className={contentClasses} ref={this.contentRef} style={truncateStyle}>\r\n        {contentTitle ? <div className=\"tb_bold_txt__\">{parse(contentTitle)}</div> : null}\r\n        {parse(contentData)}\r\n        {/* <PostContentHighlight content={contentData} CardStyle={CardStyle} /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport \"./scss/rating.scss\";\r\n\r\nconst NetworkStar = ({ networkId }) => {\r\n    const networkStyles = {\r\n        3: { className: 'tb_rating_ico__ tb__icon tb-default-star', color: '#1b74e4' },\r\n        19: { className: 'tb_rating_ico__ tb__icon tb-yelp-star', color: '#e00707' },\r\n        23: { className: 'tb_rating_ico__ tb__icon tb-default-star', color: '#ff385c' },\r\n        28: { className: 'tb_rating_ico__ tb__icon tb-default-star', color: '#F8B90C' },\r\n        29: { className: 'tb_rating_ico__ tb__icon tb-default-star', color: '#613983' },\r\n        33: { className: 'tb_rating_ico__ tb__icon tb-trustpilot', color: '#000' },\r\n        35: { className: 'tb_rating_ico__ tb__icon tb-star-fill', color: '#34E0A1' },\r\n    };\r\n\r\n    const { className, color } = networkStyles[networkId] || {\r\n        className: 'tb_rating_ico__ tb__icon tb-default-star',\r\n        color: '#F8B90C',\r\n    };\r\n\r\n    return <div className={className} style={{ color }} tb-network={networkId}><div></div></div>;\r\n};\r\n\r\nconst ThemeStar = ({ ThemeID, networkId }) => {\r\n    const themeStyles = {\r\n        59: { className: 'tb_rating_ico__ tb__icon tb-star-fill', color: '#34E0A1' },\r\n    };\r\n\r\n    const { className, color } = themeStyles[ThemeID] || {\r\n        className: 'tb_rating_ico__ tb__icon tb-default-star',\r\n        color: '#F8B90C',\r\n    };\r\n\r\n    return <div className={className} style={{ color }} tb-network={networkId}></div>;\r\n};\r\nexport default class Rating extends PureComponent {\r\n    render() {\r\n        const { rating, networkId, ThemeID } = this.props;\r\n        return (\r\n            <div className=\"tb__rating__\" aria-hidden>\r\n                {\r\n                    rating ? [...Array(rating)].map((el, index) => ThemeID ? <ThemeStar key={index} ThemeID={ThemeID} networkId={networkId} /> : <NetworkStar key={index} networkId={networkId} /> ) : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\"; \r\nconst Seprator = (props) => {\r\n  const { sepClass } = props;\r\n  return <div className={sepClass}>   </div>\r\n}\r\n\r\nexport default Seprator","import React, { PureComponent } from \"react\";\r\nimport { gtmAnalytics, themePostTracking } from \"../../../../actions/moredataAction\";\r\nimport './scss/ShareOnHover.scss'\r\n\r\nexport default class ShareOnHover extends PureComponent {\r\n  onClickData = (shareURL) => event => {\r\n    const { Post, ThemeInfo } = this.props;\r\n    event.stopPropagation();\r\n      themePostTracking({\r\n      type: 2,\r\n      action: 2,\r\n      wall: ThemeInfo.wallID,\r\n      feed: Post.feedId,\r\n      post: Post.referenceId ? Post.referenceId : Post.id,\r\n      owner: ThemeInfo.ownerId\r\n    })\r\n    gtmAnalytics(\"Tagbox\", \"shareUrl\", \"shareUrl\", shareURL)\r\n    window.open(shareURL, \"_blank\")\r\n  }\r\n\r\n  render() {\r\n    const { shareClass, Post } = this.props;\r\n    const {facebook,twitter, linkedin } = Post?.share;\r\n    \r\n    const GetShareIncon=({shareOn, icon})=>{\r\n      return <div className=\"tb_share_icon_list\">\r\n            <div onClick={this.onClickData(shareOn)} className={`tb_share_ico__ tb__icon tb-${icon}`} title={icon}><div></div></div>\r\n      </div>\r\n    }\r\n    return <div className={`tb_share_wrapper ${shareClass}`}>\r\n      <div className={`tb_share_button_ tb__icon ${'tb-share'}`}><div></div></div>\r\n      <div className=\"tb_share_icon_list_wrap\">\r\n        {facebook ? <GetShareIncon shareOn={facebook} icon={'facebook'} />  : ''}\r\n        {twitter  ? <GetShareIncon shareOn={twitter} icon={'twitter'} />  : ''}\r\n        {linkedin ? <GetShareIncon shareOn={linkedin} icon={'linkedin'} />  : ''}\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n","import React, { memo } from \"react\"; \r\nimport { timeAgo } from \"../../../../utils/Common\";\r\nconst Time = (props) => {\r\n  const { createdAt, timeClass } = props;\r\n  return <div className={timeClass} role=\"status\" aria-label={`post timestamp ${timeAgo(createdAt)}`}>{timeAgo(createdAt)}</div>\r\n}\r\n\r\nexport default memo(Time)","  import React from \"react\";\r\n  import { isTagbox, isTagShop } from \"../../../../actions/api\";\r\n  import Video from \"../../Elements/Media/Video\";\r\n  import Image from \"../../Elements/Media/Image\";\r\n  import MediaIcon from \"../../Elements/MediaIcon/MediaIcon\";\r\n  const Media = ({ Post, ThemeInfo, ThemeStyle, CardStyle, index, inView }) => {\r\n    const autoPlay = ([3,5].includes(Post.type)) && ThemeStyle.autoPlay == 1 ? true : false;\r\n    const size = ThemeInfo.productType == 9 || isTagbox ? CardStyle.style.ratio ? CardStyle.style.ratio : 100 : 100;\r\n    const mediaIcon = Post.hotspot ? false : true;\r\n    return (\r\n      <div className=\"tb_hc_media_wrap\">\r\n        {mediaIcon ? (\r\n          <MediaIcon Post={Post} IconClass=\"tb_hc_media_icon\" show={mediaIcon} isCenter={false} hideVideo={autoPlay}/>\r\n        ) : null}\r\n        {autoPlay ? (\r\n          <Video VideoClass=\"tb_hc_video\" Post={Post} size={size} isCover={true} controls={false} autoPlay={autoPlay} muted={true} observer={false} index={index} inView={inView} />\r\n        ) : (\r\n          <Image ImageClass=\"tb_hc_image\" Post={Post} size={size} hotspot={true} blurBG={isTagShop} observer={false} index={index} inView={inView} />\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n  export default Media;\r\n","import React from 'react';\r\nimport Time from '../../Elements/Time/Time';\r\nimport Network from '../../Elements/Network/Network';\r\nimport Author from '../../Elements/Author/Author';\r\nimport Seprator from '../../Elements/Seprator/Seprator';\r\nconst AuthorDetails = ({ Post, CardStyle, inView }) => {\r\n  const { author, networkId } = Post\r\n  const username = author.username ? author.username.length > 0 ? `@${author.username}` : `` : '';\r\n  const postAuthor = (CardStyle.author.status && !author.isInstaUser) ? true : false;\r\n  const authorSeprator = (CardStyle.author.status && CardStyle.timeStatus && !author.isInstaUser) ? true : false;\r\n  const networkIcon = (networkId !== null && networkId !== '') ? true : false\r\n  return <div className=\"tb_hc_author_wrapper\" aria-label=\"Author details\" aria-roledescription=\"post author details\">\r\n    {postAuthor ? <Author network={Post.network} author={author} authorClass={'tb_hc_author_profile'} size={46} inView={inView} /> : ''}\r\n    <div className=\"tb_hc_author_info\">\r\n      {postAuthor ? <div className={`tb_hc_authorname tb-cTBfont-${CardStyle.author.variant}`}>{author.name}</div> : ''}\r\n      {<div className=\"tb_hc_post_info\">\r\n        {postAuthor ? <div className=\"tb_hc_username\">{username}</div> : ''}\r\n        {authorSeprator ? <Seprator sepClass={`tb_hc_seprator`} /> : ''}\r\n        {CardStyle.timeStatus ? \r\n        <Time createdAt={Post.createdAt} timeClass={`tb_hc_time tb-cTBfont-${CardStyle.author.variant}`} /> : ''}\r\n      </div>}\r\n    </div>\r\n    {networkIcon ?\r\n      <div className=\"tb_hc_social_\">\r\n        <Network networkClass={'tb_hc_social_ico'} networkId={networkId} iconStyle={CardStyle.icon} />\r\n      </div>\r\n      : null}\r\n  </div>\r\n}\r\nexport default AuthorDetails","import React, { PureComponent } from \"react\";\r\nimport { PostTrimContent  } from '../../../../utils'\r\nimport { isTagShop } from \"../../../../actions/api\";\r\nimport Media from \"./Media\";\r\nimport CTAButton from \"../../Elements/CTA/CtaButton\";\r\nimport Rating from \"../../Elements/Rating/Rating\";\r\nimport SocialAction from \"../../Elements/SocialAction/SocialAction\";\r\nimport AuthorDetails from \"./AuthorDetails\";\r\nimport PostContent from \"../../Elements/PostContent/PostContent\";\r\nimport ShareOnHover from \"../../Elements/ShareOnHover/ShareOnHover\";\r\nimport InViewWrapper from '../../Elements/InViewWrapper';\r\n\r\n\r\nconst trim_content_length = 140;\r\nexport default class Card extends PureComponent {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      isExpanded: false,\r\n      hiddenHeight: 0,\r\n      height: 0\r\n    };\r\n    this.toggleExpand = this.toggleExpand.bind(this);\r\n  }\r\n\r\n  contentRef = ref => {\r\n    this.setState({\r\n      height: ref\r\n    })\r\n\r\n  }\r\n\r\n  contentRefHidden = ref => {\r\n    this.setState({\r\n      hiddenHeight: ref\r\n    })\r\n  }\r\n\r\n  toggleExpand = (event) => {\r\n    event.stopPropagation()\r\n    this.setState({\r\n      isExpanded: !this.state.isExpanded\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    const { Post, CardStyle, index, ThemeInfo, onClickToCTA, ThemeStyle } = this.props;\r\n    const mediaType = Post.type !== 1 ? true : false;\r\n    const rating = Post.rating && (Post.rating > 0) ? true : false;\r\n    const contentClass = (Post.rating > 0) ? 'tb_hc_rating_content' : 'tb_hc_content';\r\n    const noMediaClass = (Post.type === 1) ? 'tb_hc_text_post' : '';\r\n    const textDecorate = (Post.type === 1) && String(Post.content).length > 0 && (CardStyle.style.textDecoration) ? 'tb_hc_text_decoration' : '';\r\n    const ctaActive = Post.cta.status ? true : false;\r\n    const postTextContent =  CardStyle.content.trimcontent ? PostTrimContent(Post.content.text, trim_content_length) : Post.content.text\r\n\r\n    return <InViewWrapper>\r\n        {({ ref, inView }) => (\r\n          <div id={`tb_hc_id-${Post.id}`} className=\"tb_hc_post_wrapper\" ref={ref} style={{ padding: CardStyle.style.padding / 2 }} role=\"article\" aria-label={`Post ${parseInt(index) + 1},${postTextContent}`}>\r\n            <div className=\"tb_hc_post_in\"  role=\"button\" aria-label=\"Popup\" tabIndex={0}>\r\n                {Post.share.status ? <ShareOnHover share={Post.share} shareClass={\"tb_hc_share_container\"} Post={Post} ThemeInfo={ThemeInfo} />: ''}\r\n                {mediaType ? <Media Post={Post} CardStyle={CardStyle} ThemeInfo={ThemeInfo} ThemeStyle={ThemeStyle} index={index} inView={inView}/> \r\n                : null}\r\n              <div className={`tb_hc_contant_wrapper ${noMediaClass}`}>\r\n                <AuthorDetails Post={Post} CardStyle={CardStyle} inView={inView} />\r\n                {ctaActive ? <div className=\"tb_hc_post_cta\" onClick={(e) => { e.stopPropagation() }}>\r\n                  <CTAButton ctaClass={\"tb_hc_post_cta_btn\"} Post={Post} onClickToCTA={onClickToCTA} />\r\n                </div>\r\n                : ''} \r\n                {rating ? <div className={`tb_hc_rating__`}> \r\n                <Rating rating={Post.rating} networkId={Post.networkId} ThemeID={ThemeInfo.id} />\r\n                </div> : null}\r\n                {(CardStyle.content.status) || Post.type == 1 ?\r\n                  <div className={`tb_hc_content_wrapper__`}>\r\n                      <PostContent contentClass={`${contentClass}${textDecorate}`} Post={Post} content={postTextContent} CardStyle={CardStyle} contentTitle={Post.content.title} /> \r\n                  </div>\r\n                  : null}\r\n              </div> \r\n              {isTagShop  ? (CardStyle.actionStatus ?\r\n              <SocialAction Post={Post} CardStyle={CardStyle} actionClass={`tb_hc_social_action__`} />\r\n            : null) : ''}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </InViewWrapper>\r\n  }\r\n}\r\n","import React, { Component,  memo } from \"react\";\r\n//import { isMobile } from 'react-device-detect';\r\nimport { connect } from \"react-redux\";\r\nimport { Splide, SplideSlide, SplideTrack } from '@splidejs/react-splide'; \r\nimport { isTagShop } from \"../../../actions/api\";\r\nimport { detectMobile } from '../../../utils'\r\nimport Card from \"./Elements/Card\";\r\nimport '../scss/ThemesSplide.scss'\r\nimport './scss/HorizontalColumns.scss' \r\nimport { mainClass } from \"../../../utils/Common\";\r\nimport { nextData } from \"../../../actions/moredataAction\";\r\nclass HorizontalColumn extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { loadData : false }\r\n    this.inputRefs = {};  \r\n    this.isDragging = false; // Class property to track dragging\r\n  }\r\n  state = {\r\n    windowWidth: document.getElementById(mainClass) && document.getElementById(mainClass).clientWidth ? document.getElementById(mainClass).clientWidth : window.innerWidth,\r\n    sliderHeight: 300\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.onScreenLoad()\r\n  }\r\n  onScreenLoad = () => {\r\n    const { renderId } = this.props.renderId\r\n    this.setState({\r\n      windowWidth: renderId && document.getElementById(renderId) ? document.getElementById(renderId).clientWidth : document.getElementById(mainClass) && document.getElementById(mainClass).clientWidth ? document.getElementById(mainClass).clientWidth : window.innerWidth\r\n    })\r\n  }\r\n\r\n  requestData = () => {\r\n    const { appendData, ThemeInfo, ThemeStyle, preRender, hasMoreData, nextData } = this.props;\r\n    !this.state.loadData && this.updatepost(0) \r\n    if (hasMoreData) {\r\n      nextData(\r\n        isTagShop ? ThemeInfo.webId : ThemeInfo.wallId,\r\n        Math.floor(Date.now() / 1000),\r\n        ThemeStyle.totalPosts,\r\n        appendData.networkID,\r\n        appendData.after,\r\n        preRender,\r\n        appendData.heightEvent\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    var slider = document.querySelector('.tb_hc_post_slider');\r\n    var height = slider ? slider.offsetHeight : this.state.height;\r\n    setTimeout(() => {\r\n      this.setState({\r\n        sliderHeight: height\r\n      })\r\n      const classNameRole = document.querySelectorAll('.splide__slide');\r\n      classNameRole && classNameRole.forEach((element) => {element.removeAttribute(\"aria-hidden\");element.removeAttribute(\"role\")});\r\n    }, 100);\r\n    const { postData } = this.props;\r\n\r\n    if (postData && postData.length == 1) {\r\n\r\n      let arrow_left_id = document.querySelector(\".tb_hc_arrow_left__\")\r\n      let arrow_right_id = document.querySelector(\".tb_hc_arrow_right__\")\r\n      if (arrow_left_id && arrow_right_id) {\r\n        arrow_left_id.style = 'display:none'\r\n        arrow_right_id.style = 'display:none'\r\n      }\r\n\r\n      document.body.addEventListener('click', function () { myFunction() });\r\n\r\n      myFunction();\r\n\r\n      function myFunction() {\r\n        setTimeout(() => {\r\n          let splide01 = document.querySelector(\".splide__list\");\r\n          if (splide01 != null) {\r\n            splide01.style.transform = 'translateX(0)';\r\n          }\r\n        }, 100);\r\n      }\r\n      window.addEventListener(\"resize\", myFunction);\r\n    }\r\n    else {\r\n      window.addEventListener(\"resize\", () => {\r\n        this.onScreenLoad();\r\n      });\r\n    }\r\n\r\n    let splide02 = document.querySelector(\"#kt_aside_toggle\");\r\n    if (splide02 != null) {\r\n      splide02.addEventListener(\"click\", this.reScrolled)\r\n    }\r\n\r\n    window.addEventListener('keydown', this.handleKeyPress);\r\n\r\n  }\r\n\r\n  updatepost = (e) => {    \r\n    if(!this.state.loadData){ \r\n      this.setState({ loadData : true })\r\n      setTimeout(() => this.props.loadMoredata() , (e*1000))\r\n    }\r\n}\r\n\r\n  handleKeyPress = event => {\r\n    try {\r\n      const { ThemeStyle } = this.props \r\n      if (ThemeStyle.slide.autoSlide == 1) {\r\n        const isInput = ['INPUT', 'TEXTAREA'].includes(event.target.tagName);\r\n        if (!isInput && event.code === 'Space') {\r\n          const { parentID } = this.props\r\n          event.preventDefault(); // Prevent scrolling the page\r\n          var Autoplay = this.inputRefs[parentID].splide.Components.Autoplay;\r\n          if (Autoplay.isPaused()) Autoplay.play();\r\n          else Autoplay.pause();\r\n        }\r\n      }\r\n    }\r\n    catch (error) {\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyPress);\r\n  }\r\n  reScrolled = () => {\r\n\r\n    setTimeout(() => {\r\n      let splide__list = document.querySelector('.splide__list');\r\n      let getWidth = document.querySelector(\".splide__slide\").offsetWidth;\r\n      const isVisibleAll = document.querySelectorAll('.splide__slide.is-visible').length;\r\n      const isVisible = document.querySelector('.splide__slide.is-active.is-visible');\r\n      const str = isVisible.getAttribute('aria-label').substring(0, 2)\r\n      const getIndex = Number(str) + (isVisibleAll - 1) + isVisibleAll\r\n      if (getIndex > 0) {\r\n        splide__list.style.transition = '0s ease';\r\n        splide__list.style.transform = `translateX(-${(getIndex * getWidth)}px)`;\r\n      } else {\r\n        splide__list.style.transform = `translateX(0px)`;\r\n      }\r\n    }, 200);\r\n  }\r\n\r\n\r\n  componentDidUpdate() {\r\n    var slider = document.querySelector('.tb_hc_post_slider');\r\n    var height = slider ? slider.offsetHeight : this.state.height;\r\n    if ((height + 15) != this.state.sliderHeight) {\r\n      setTimeout(() => {\r\n        this.setState({\r\n          sliderHeight: height + 15\r\n        })\r\n      }, 100);\r\n    }\r\n  }\r\n  autoScrollSlider = (splide) => {\r\n   \r\n    const { ThemeStyle } = this.props\r\n    const autoScrollStatus = ThemeStyle.autoScrollStatus;\r\n   \r\n    splide.on(\"drag\", () =>{  \r\n       this.isDragging = true; // Reset flag after move\r\n       !this.state.loadData && this.updatepost(0)\r\n    } );\r\n\r\n    splide.on(\"move\", () => { !this.state.loadData && !this.isDragging && this.updatepost(3)} );\r\n\r\n    if (autoScrollStatus == 1) {\r\n      const currentIndex = splide.index\r\n      const slideLength = splide.length\r\n      const permove = splide[\"_o\"].perPage\r\n      if (slideLength - currentIndex === permove) this.requestData()\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { postData, completeDataObject, CardStyle, ThemeStyle, ThemeInfo, cardNumber, parentID,  onClickToCTA, handlePressStart, handlePressEnd  } = this.props;\r\n\r\n    const { sliderHeight } = this.state\r\n    const inputName = parentID;\r\n    const { windowWidth } = this.state;\r\n    const numberOfPosts = ThemeStyle.totalPosts;\r\n    const numberOfCoumn = ThemeStyle.column.desktop;\r\n    const mobileColumn = ThemeStyle.column.mobile;\r\n    const slidePost = ThemeStyle.slide.autoSlide && !isTagShop;\r\n    const slideDuration = ThemeStyle.slide.slideDuration;\r\n    const autoScrollStatus = ThemeStyle.autoScrollStatus;\r\n    const trimContent = CardStyle.content.trimcontent === 1 ? true : false;\r\n    const isMobileStatus =  windowWidth < 768 || detectMobile() ? true : false\r\n\r\n    const renderCount = numberOfPosts > parseInt(cardNumber) ? parseInt(cardNumber) : numberOfPosts\r\n    const manageItemCount = (postData && postData.length) ? isMobileStatus ? 1 : postData.length > renderCount ? renderCount : postData.length : 3\r\n    const desktopCount = (postData && postData.length) ? isMobileStatus ? 1 : postData.length > renderCount ? renderCount : postData.length : 4\r\n    const cloneStatus =  {};\r\n    const isType = autoScrollStatus != 1 ? Object.keys(cloneStatus).length ? false : 'slide' : 'slide'\r\n    const newData = ((manageItemCount == postData.length) || (desktopCount == postData.length)) && !Object.keys(cloneStatus).length ? Array(2).fill(postData).flat() : postData\r\n    const equalHeight =  trimContent ? true : false\r\n    const settings = {\r\n      ...cloneStatus,\r\n      type: autoScrollStatus === 1 ? false : isType,\r\n      role: 'article',\r\n      label: 'social widget',\r\n      rewind: true,\r\n      speed: 1000,\r\n      loop: autoScrollStatus === 1 ? false : true,\r\n      interval: slidePost ? slideDuration * 1000 : 5000,\r\n      perPage: this.props.tuchMobile ? 1 : numberOfCoumn > 0 ? numberOfCoumn : isMobileStatus ? 1 : postData.length > renderCount ? renderCount : postData.length,\r\n      gap: 0,\r\n      perMove:  false,\r\n      autoplay: slidePost ? true : false,\r\n      padding: \"0\",\r\n      pagination: false,\r\n      arrows: isMobileStatus ? true : postData.length >= (numberOfCoumn > 0 ? numberOfCoumn : desktopCount) ? true : false,\r\n      fixedHeight: equalHeight,\r\n      breakpoints: {\r\n        560: {\r\n          perPage: mobileColumn > 0 ? mobileColumn : 1,\r\n          perMove: mobileColumn > 0 ? mobileColumn : 1,\r\n          arrows: postData.length >= (mobileColumn > 0 ? mobileColumn : 1) ? true : false\r\n        },\r\n        767: {\r\n          perPage: numberOfCoumn > 0 ? (numberOfCoumn - 3) < 1 ? numberOfCoumn : numberOfCoumn - 3 : manageItemCount,\r\n          arrows: postData.length >= (numberOfCoumn > 0 ? (numberOfCoumn - 3) < 1 ? numberOfCoumn : numberOfCoumn - 3 : manageItemCount) ? true : false\r\n        },\r\n        991: {\r\n          perPage: numberOfCoumn > 0 ? (numberOfCoumn - 4) < 1 ? numberOfCoumn : (numberOfCoumn - 4) : manageItemCount,\r\n          arrows: postData.length >= (numberOfCoumn > 0 ? (numberOfCoumn - 4) < 1 ? numberOfCoumn : (numberOfCoumn - 4) : manageItemCount) ? true : false\r\n        },\r\n        1200: {\r\n          perPage: numberOfCoumn > 0 ? numberOfCoumn - 1 == 0 ? numberOfCoumn : numberOfCoumn - 1 : manageItemCount,\r\n          arrows: postData.length >= (numberOfCoumn > 0 ? numberOfCoumn - 1 == 0 ? numberOfCoumn : numberOfCoumn - 1 : manageItemCount) ? true : false\r\n        },\r\n        1600: {\r\n          perPage: numberOfCoumn > 0 ? numberOfCoumn : desktopCount,\r\n          arrows: postData.length >= (numberOfCoumn > 0 ? numberOfCoumn : desktopCount) ? true : false\r\n        }\r\n      }\r\n    };\r\n\r\n    return <>{parentID != \"\" ?\r\n      \r\n      <div className=\"tb_hc_post_container\" ref={this.sliderHeight} style={{ minHeight: sliderHeight && sliderHeight!= NaN ? sliderHeight : '' }}>\r\n      \r\n        <Splide  hasTrack={false} className={`tb_hc_post_slider ${equalHeight ? 'tb_hc_fixed_height' : ''}`} options={settings} ref={(parentID) => this.inputRefs[inputName] = parentID}  tag=\"section\" onMove={this.autoScrollSlider}>\r\n          <SplideTrack>\r\n            {\r\n              ((newData && newData.length > 0)) && newData.map((item, index) => {\r\n                const cardData = completeDataObject[item];\r\n                return <SplideSlide \r\n                        data-id={cardData.id} \r\n                        key={index} \r\n                        onMouseDown={handlePressStart}\r\n                        onMouseUp={(e) => handlePressEnd(e, index, cardData)}\r\n                        onTouchStart={handlePressStart}\r\n                        onTouchEnd={(e) => handlePressEnd(e, index ,cardData)}\r\n                        p_id={parentID} className={`tb_${cardData.id}`}>\r\n                    <Card onClickToCTA={onClickToCTA}  Post={cardData} index={index} CardStyle={CardStyle} ThemeStyle={ThemeStyle} ThemeInfo={ThemeInfo}/>\r\n                </SplideSlide>\r\n              })}\r\n          </SplideTrack>\r\n          <div className=\"splide__arrows splide__arrows--ltr tb_hc_arrow_wrapper_\" role=\"navigation\" aria-label=\"Slider Navigation Wrapper\">\r\n            <div role=\"navigation\" className=\"tb_hc_arrow splide__arrow splide__arrow--prev tb_hc_arrow_left__ tb__icon tb-arrow-left-alt\" aria-labelledby=\"Navigation Previous Slide\"> </div>\r\n            <div role=\"navigation\" className=\"tb_hc_arrow splide__arrow splide__arrow--next tb_hc_arrow_right__ tb__icon tb-arrow-right-alt\" aria-labelledby=\"Navigation Next Slide\" onClick={isTagShop ? this.requestData : null}> </div>\r\n          </div>\r\n        </Splide>\r\n      </div> : null} </>\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    nextData: (wallID, timeStamp, postCount, networkId, after, postData, heightEvent, updateInStateNow) => dispatch(nextData(wallID, timeStamp, postCount, networkId, after, postData, heightEvent, updateInStateNow)),\r\n  }\r\n}\r\nexport default memo(connect(\"\", mapDispatchToProps)(HorizontalColumn));","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["Author","PureComponent","render","author","authorClass","networkId","size","inView","this","props","_jsx","className","style","overflow","children","src","picture","alt","name","width","height","onError","e","networkColor","GET_NETWORK_COLOR","background","replace","target","errorPic","Math","random","PostContent","constructor","super","contentRef","React","componentDidMount","setTimeout","_this$contentRef","_this$contentRef$curr","current","clientHeight","_this$contentRef2","_this$contentRef2$cur","contentHeight","contentRefCallBack","CardStyle","contentClass","content","contentTitle","maxLines","isReadMore","trimLines","trimcontent","isTagShop","truncateStyle","WebkitLineClamp","textAlign","contentData","STRING_TO_URL_CONVERT","contentClasses","variant","_jsxs","ref","parse","NetworkStar","_ref","color","ThemeStar","_ref2","ThemeID","Rating","rating","Array","map","el","index","sepClass","ShareOnHover","arguments","onClickData","shareURL","event","Post","ThemeInfo","stopPropagation","themePostTracking","type","action","wall","wallID","feed","feedId","post","referenceId","id","owner","ownerId","gtmAnalytics","window","open","shareClass","facebook","twitter","linkedin","share","GetShareIncon","shareOn","icon","onClick","title","Time","createdAt","timeClass","role","timeAgo","memo","ThemeStyle","autoPlay","includes","productType","isTagbox","ratio","mediaIcon","hotspot","MediaIcon","IconClass","show","isCenter","hideVideo","Video","VideoClass","isCover","controls","muted","observer","Image","ImageClass","blurBG","username","length","postAuthor","status","isInstaUser","authorSeprator","timeStatus","networkIcon","network","Seprator","Network","networkClass","iconStyle","Card","setState","contentRefHidden","hiddenHeight","toggleExpand","isExpanded","state","bind","onClickToCTA","mediaType","noMediaClass","textDecorate","String","textDecoration","ctaActive","cta","postTextContent","PostTrimContent","text","InViewWrapper","padding","parseInt","tabIndex","Media","AuthorDetails","CTAButton","ctaClass","actionStatus","SocialAction","actionClass","HorizontalColumn","Component","windowWidth","document","getElementById","mainClass","clientWidth","innerWidth","sliderHeight","onScreenLoad","renderId","requestData","appendData","preRender","hasMoreData","nextData","loadData","updatepost","webId","wallId","floor","Date","now","totalPosts","networkID","after","heightEvent","loadMoredata","handleKeyPress","slide","autoSlide","tagName","code","parentID","preventDefault","Autoplay","inputRefs","splide","Components","isPaused","play","pause","error","reScrolled","splide__list","querySelector","getWidth","offsetWidth","isVisibleAll","querySelectorAll","str","getAttribute","substring","getIndex","Number","transition","transform","autoScrollSlider","autoScrollStatus","on","isDragging","currentIndex","perPage","UNSAFE_componentWillMount","slider","offsetHeight","classNameRole","forEach","element","removeAttribute","postData","arrow_left_id","arrow_right_id","myFunction","splide01","body","addEventListener","splide02","componentWillUnmount","removeEventListener","componentDidUpdate","completeDataObject","cardNumber","handlePressStart","handlePressEnd","inputName","numberOfPosts","numberOfCoumn","column","desktop","mobileColumn","mobile","slidePost","slideDuration","trimContent","isMobileStatus","detectMobile","renderCount","manageItemCount","desktopCount","cloneStatus","isType","Object","keys","newData","fill","flat","equalHeight","settings","label","rewind","speed","loop","interval","tuchMobile","gap","perMove","autoplay","pagination","arrows","fixedHeight","breakpoints","_Fragment","minHeight","NaN","Splide","hasTrack","options","tag","onMove","SplideTrack","item","cardData","SplideSlide","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","p_id","connect","dispatch","timeStamp","postCount","updateInStateNow","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"sourceRoot":""}