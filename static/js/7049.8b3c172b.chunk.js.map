{"version":3,"file":"static/js/7049.8b3c172b.chunk.js","mappings":"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","sources":["app/Themes/ClassicPhoto/Elements/Media.js","app/Themes/ClassicPhoto/Elements/Card.js","app/Themes/ClassicPhoto/index.js","app/Themes/Elements/SocialAction/SocialAction.js"],"sourcesContent":["import React from 'react'\r\nimport { isTagShop } from \"../../../../actions/api\";\r\nimport Video from '../../Elements/Media/Video';\r\nimport Image from '../../Elements/Media/Image';\r\nimport MediaIcon from '../../Elements/MediaIcon/MediaIcon';\r\n\r\nconst Media = ({ Post, ThemeStyle, CardStyle, index, inView }) => {\r\n  const autoPlay = ([3,5].includes(Post.type) && ThemeStyle.autoPlay === 1) || false\r\n  const size = CardStyle.style.ratio ? CardStyle.style.ratio : false\r\n  const mediaIcon = isTagShop && Post.hotspot ? false : true\r\n\r\n  return <div className=\"tb_cp_media_wrap\">\r\n    <MediaIcon Post={Post} IconClass=\"tb_cp_media_icon\" show={mediaIcon}hideVideo={autoPlay}/>\r\n    {autoPlay ?\r\n      <Video VideoClass=\"tb_cp_video\" Post={Post} size={size} isCover={true} controls={false} autoPlay={true} muted={true} observer={true} index={index} inView={inView}/>\r\n      :\r\n      <Image ImageClass=\"tb_cp_image\" Post={Post} size={size} hotspot={isTagShop} blurBG={isTagShop} observer={true} index={index} inView={inView}/>\r\n    }\r\n  </div>\r\n}\r\nexport default Media","import React, { Suspense, lazy } from 'react'\r\nimport AuthorDetails from '../../Elements/Author/AuthorDetails';\r\nimport Media from './Media';\r\nimport CTAButton from '../../Elements/CTA/CtaButton';\r\nimport SocialAction from '../../Elements/SocialAction/SocialAction';\r\nimport InViewWrapper from '../../Elements/InViewWrapper';\r\nconst ShareOnHover = lazy(() => import('../../Elements/ShareOnHover/ShareOnHover'));\r\nconst Card = ({ postSize, clickToShowPopUp, index, onClickToCTA, ThemeStyle, CardStyle, Post, ThemeInfo }) => {\r\n  const mediaType = Post.type !== 1 ? true : false; \r\n\r\n  return <InViewWrapper>\r\n        {({ ref, inView }) => (\r\n          mediaType ? <div id={`tb_cp_id-${Post.id}`} ref={ref} className={`tb_cp_post_wrapper`} style={{width: `${postSize}%`, padding: CardStyle.style.padding / 2, opacity: inView ? 1 : 0, transition: inView ? 'opacity .5s ease-in-out' : '' }} tb-network={Post.networkId} tb-product={ Post.isShopIcon ? 1 : Post.isHotspot ? 2 : 0} post-id={Post.referenceId ? Post.referenceId : Post.id} feed-id={Post.feedId} tabIndex={0} area-label={Post.content.text} role=\"article\">\r\n          <div className=\"tb_cp_post_in\" onClick={clickToShowPopUp(index, Post)} role=\"button\" aria-label=\"Popup\" tabIndex={0}>\r\n            {CardStyle.shareStatus ? \r\n              <Suspense fallback={<></>}> \r\n                <ShareOnHover Post={Post} ThemeInfo={ThemeInfo} shareClass={'tb_cp_share_container'} />\r\n              </Suspense> \r\n            : ''}\r\n            {mediaType ? \r\n                <Media Post={Post} CardStyle={CardStyle} ThemeStyle={ThemeStyle} index={index} inView={inView}/>\r\n            : ''}\r\n            { Post.ctaStatus ? <div className=\"tb_cp_post_cta\">\r\n                <CTAButton ctaClass={'tb_cp_post_cta_btn'} Post={Post} onClickToCTA={onClickToCTA} />\r\n            </div> : ''}\r\n            <div className=\"tb_cp_contant_wrapper\">\r\n                <AuthorDetails className={'tb_cp'} Post={Post} CardStyle={CardStyle} ThemeStyle={ThemeStyle} inView={inView} />\r\n            </div>\r\n            {CardStyle.actionStatus ? <SocialAction Post={Post} CardStyle={CardStyle} actionClass={`tb_cp_social_action__`} /> : ''}\r\n          </div>\r\n        </div>\r\n        :null)}\r\n      </InViewWrapper>\r\n}\r\nexport default Card","import React, { PureComponent } from \"react\";\r\nimport Masonry from 'react-masonry-component';\r\nimport { isTagShop } from '../../../actions/api'\r\nimport \"./scss/ClassicPhoto.scss\";\r\nimport Card from './Elements/Card';\r\nimport { getColumnCount, getSizeInPercent } from \"../../../utils\";\r\n\r\nconst ClassicPhotoExtend = ({ Posts, completeDataObject, clickToShowPopUp, postSize, onClickToCTA, onClickPopUpSlider, CardStyle, ThemeStyle, ThemeInfo }) => {\r\n  return ((Posts && Posts.length > 0)) && Posts.map((item, index) => {\r\n    const Post = completeDataObject[item];\r\n    return <Card key={index} postSize={postSize} clickToShowPopUp={clickToShowPopUp} onClickToCTA={onClickToCTA} onClickPopUpSlider={onClickPopUpSlider} Post={Post} index={index} CardStyle={CardStyle} ThemeStyle={ThemeStyle}  ThemeInfo={ThemeInfo}/>\r\n  })\r\n}\r\n\r\nclass ClassicPhoto extends PureComponent {  \r\n    state = {\r\n      loadDelaydata : false\r\n    }\r\n    \r\n    componentDidMount() {\r\n      window.addEventListener(\"scroll\", this.handleScroll);\r\n      this.props.loadBranding()\r\n    }\r\n    componentWillUnmount() {\r\n      window.removeEventListener(\"scroll\", this.handleScroll);\r\n    }\r\n\r\n    handleScroll = () => {\r\n      if(!this.state.loadDelaydata){\r\n          this.setState({ loadDelaydata : true },()=>this.props.loadMoredata())\r\n      }\r\n    };\r\n\r\n  render() {\r\n    const { postData, completeDataObject, CardStyle, ThemeStyle, ThemeInfo, clickToShowPopUp, onClickToCTA, onClickPopUpSlider, containerSize } = this.props;\r\n    const minCardSize = ( CardStyle.minimumWidth || 200 ) + 20\r\n    const columns =  getColumnCount(containerSize.width, ThemeStyle.column, minCardSize);\r\n    const postSize = getSizeInPercent(containerSize.width, columns)\r\n\r\n    return isTagShop ? <Masonry\r\n      className={`tb_cp_post_container`}\r\n      tabIndex='0'\r\n      aria-label={`There are ${(postData && postData.length > 0) ? postData.length : 0} posts in the feed`} role=\"feed\"\r\n      elementType={'div'}\r\n      options={{\r\n        transitionDuration: 0,\r\n        percentPosition: true,\r\n        itemSelector: '.tb_cp_post_wrapper',\r\n        horizontalOrder: true,\r\n        resize: true,\r\n      }}\r\n      disableImagesLoaded={false}\r\n      updateOnEachImageLoad={false}\r\n      imagesLoadedOptions={{}}\r\n      enableResizableChildren={true}>\r\n      <ClassicPhotoExtend clickToShowPopUp={clickToShowPopUp} Posts={postData} completeDataObject={completeDataObject} postSize={postSize} onClickToCTA={onClickToCTA} onClickPopUpSlider={onClickPopUpSlider} CardStyle={CardStyle} ThemeStyle={ThemeStyle} ThemeInfo={ThemeInfo} />\r\n    </Masonry>\r\n    :\r\n    <div className=\"tb_cp_post_container\">\r\n      <ClassicPhotoExtend clickToShowPopUp={clickToShowPopUp} Posts={postData} completeDataObject={completeDataObject} postSize={postSize} onClickToCTA={onClickToCTA} onClickPopUpSlider={onClickPopUpSlider} CardStyle={CardStyle} ThemeStyle={ThemeStyle} ThemeInfo={ThemeInfo} />\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default ClassicPhoto\r\n\r\n\r\n","import React, { PureComponent } from \"react\"; \r\nimport { convertToAtob, kFormatter } from \"../../../../utils/Common\";\r\nimport { GET_NETWORK_NAME } from \"../../../../utils/Network\";\r\nimport \"./scss/SocialAction.scss\";\r\n\r\nconst NetworkAction = (networkID, postID, Link, action) => {\r\n  const actions = {\r\n    like: `https://twitter.com/intent/favorite?tweet_id=${convertToAtob(postID)}`,\r\n    comment: `https://twitter.com/intent/tweet?in_reply_to=${convertToAtob(postID)}`,\r\n    retweet: `https://twitter.com/intent/retweet?tweet_id=${convertToAtob(postID)}`\r\n  };\r\n  return networkID === 1 ? actions[action] : Link;\r\n};\r\n\r\nconst SocialItm = ({ label, hrefClick, Icon, count, itemId = 0, type }) => {\r\n  const countNo = count > 0 ? kFormatter(count) : \"\";\r\n  return <div className=\"tb_social_action__list\" role=\"listitem\" aria-roledescription=\"post social action links\">\r\n    <div onClick={event => { event.stopPropagation(); window.open(hrefClick, \"_blank\"); }} className={`tb_social_action__ico_wrap tb_social_action__ico_wrap_${itemId}`} aria-label={`${label} post ${type} count ${countNo}`} role=\"button\" tabIndex=\"0\">\r\n      <div className={`tb_social_action_ico__ tb__icon tb-${Icon}`}>  </div>\r\n      {countNo ? <div className=\"tb_social_action_counts__\">{countNo}</div>:''}\r\n    </div>\r\n  </div>\r\n};\r\n\r\nexport default class SocialAction extends PureComponent {\r\n  componentDidMount() {\r\n    try {\r\n      const { Post } = this.props;\r\n      const socialActionId = `.tb_social_action__ico_wrap_${Post?.id}`;\r\n      document.querySelector(socialActionId)?.addEventListener('keydown', function (event) {\r\n        if (event.key === 'Enter' || event.key === ' ') {\r\n          event.preventDefault();\r\n          this.click(); // Triggers the existing onClick functionality\r\n        }\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { Post, CardStyle, actionClass } = this.props;\r\n    const { icon, style } = CardStyle;\r\n    const iconStyle = { color: icon.default==1 ? icon.color : style.color };\r\n\r\n    const networkID = Post.networkId;\r\n    const { comment, like } = Post.count;\r\n    const likeIcon = [3, 10, 7].includes(networkID) ? 'like' : 'heart-outline';\r\n    const likeIconStatus = [1, 2, 3, 7, 8, 9, 10, 18].includes(networkID);\r\n    const commentIconStatus = ![29, 19].includes(networkID);\r\n    const networkName = GET_NETWORK_NAME(networkID);\r\n\r\n    return ![29, 26, 23, 6, 5, 11, 12, 15, 20, 21].includes(networkID) ? (\r\n      <div className={actionClass}>\r\n        <div className=\"tb_social_action__\" role=\"list\">\r\n          {likeIconStatus && <SocialItm itemId={Post.id} label={networkName} hrefClick={NetworkAction(networkID, Post.postId, Post.link, 'like')} Icon={likeIcon} iconStyle={iconStyle} count={like} type=\"like\" />}\r\n          {commentIconStatus && <SocialItm itemId={Post.id} label={networkName} hrefClick={NetworkAction(networkID, Post.postId, Post.link, 'comment')} Icon={\"comment\"} iconStyle={iconStyle} count={comment} type=\"comment\" />}\r\n          {networkID === 1 && <SocialItm itemId={Post.id} label={networkName} hrefClick={NetworkAction(networkID, Post.postId, Post.link, 'retweet')} Icon={\"retweet\"} iconStyle={iconStyle} count={comment} type=\"comment\" />}\r\n          <SocialItm label={networkName} itemId={Post.id} hrefClick={Post.link} Icon={\"eye\"} iconStyle={iconStyle} count={0} type=\"view\" />\r\n        </div>\r\n      </div>\r\n    ) : null;\r\n  }\r\n}"],"names":["_ref","Post","ThemeStyle","CardStyle","index","inView","autoPlay","includes","type","size","style","ratio","mediaIcon","isTagShop","hotspot","_jsxs","className","children","_jsx","MediaIcon","IconClass","show","hideVideo","Video","VideoClass","isCover","controls","muted","observer","Image","ImageClass","blurBG","ShareOnHover","lazy","postSize","clickToShowPopUp","onClickToCTA","ThemeInfo","mediaType","InViewWrapper","_ref2","ref","id","width","padding","opacity","transition","networkId","isShopIcon","isHotspot","referenceId","feedId","tabIndex","content","text","role","onClick","shareStatus","Suspense","fallback","_Fragment","shareClass","Media","ctaStatus","CTAButton","ctaClass","AuthorDetails","actionStatus","SocialAction","actionClass","ClassicPhotoExtend","Posts","completeDataObject","onClickPopUpSlider","length","map","item","Card","ClassicPhoto","PureComponent","constructor","arguments","state","loadDelaydata","handleScroll","this","setState","props","loadMoredata","componentDidMount","window","addEventListener","loadBranding","componentWillUnmount","removeEventListener","render","postData","containerSize","minCardSize","minimumWidth","columns","getColumnCount","column","getSizeInPercent","Masonry","elementType","options","transitionDuration","percentPosition","itemSelector","horizontalOrder","resize","disableImagesLoaded","updateOnEachImageLoad","imagesLoadedOptions","enableResizableChildren","NetworkAction","networkID","postID","Link","action","actions","like","convertToAtob","comment","retweet","SocialItm","label","hrefClick","Icon","count","itemId","countNo","kFormatter","event","stopPropagation","open","_document$querySelect","socialActionId","document","querySelector","key","preventDefault","click","e","console","log","icon","iconStyle","color","default","likeIcon","likeIconStatus","commentIconStatus","networkName","GET_NETWORK_NAME","postId","link"],"sourceRoot":""}