{"version":3,"file":"static/js/9738.fa04257b.chunk.js","mappings":"gNAMe,MAAMA,UAAoBC,EAAAA,cACvCC,WAAAA,CAAYC,GACVC,MAAMD,GACNE,KAAKC,WAAaC,EAAAA,WACpB,CACAC,iBAAAA,GACIC,YAAW,KAAO,IAADC,EAAAC,EACf,GAAmB,QAAnBD,EAAIL,KAAKC,kBAAU,IAAAI,GAAS,QAATC,EAAfD,EAAiBE,eAAO,IAAAD,GAAxBA,EAA0BE,aAAc,CAAC,IAADC,EAAAC,EAC1C,MAAMC,GAA+B,QAAfF,EAAAT,KAAKC,kBAAU,IAAAQ,GAAS,QAATC,EAAfD,EAAiBF,eAAO,IAAAG,OAAT,EAAfA,EAA0BF,eAAgB,EAC5DR,KAAKF,MAAMc,oBAAoBZ,KAAKF,MAAMc,mBAAmBD,EACnE,IACC,IAGP,CAEAE,MAAAA,GACE,MAAM,UAAEC,EAAS,aAAEC,EAAY,QAAEC,EAAO,aAAEC,EAAY,SAAEC,EAAQ,WAAEC,GAAenB,KAAKF,MAChFsB,EAAYN,EAAUE,QAAQK,cAAgBC,EAAAA,GAAYR,EAAUE,QAAQK,YAAc,EAC1FE,EAAgB,CACpBC,gBAAiBN,EACjBO,UAAWX,EAAUY,MAAMD,WAEvBE,GAAcC,EAAAA,EAAAA,GAAsBZ,GAEpCa,EAAiB,GAAGd,KAAiBI,EAA2B,GADlD,IAAGC,EAAY,oBAAoBA,IAAc,kBACkBN,EAAUY,MAAMI,UACvG,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWH,EAAgBI,IAAKjC,KAAKC,WAAYyB,MAAOH,EAAcW,SAAA,CACxEjB,GAAekB,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gBAAeE,UAAEE,EAAAA,EAAAA,IAAMnB,KAAuB,MAC5EmB,EAAAA,EAAAA,IAAMT,KAIb,E,6DCpCF,MAAMU,EAAcC,IAAoB,IAAnB,UAAEC,GAAWD,EAC9B,MAUM,UAAEN,EAAS,MAAEQ,GAVG,CAClB,EAAG,CAAER,UAAW,2CAA4CQ,MAAO,WACnE,GAAI,CAAER,UAAW,wCAAyCQ,MAAO,WACjE,GAAI,CAAER,UAAW,2CAA4CQ,MAAO,WACpE,GAAI,CAAER,UAAW,2CAA4CQ,MAAO,WACpE,GAAI,CAAER,UAAW,2CAA4CQ,MAAO,WACpE,GAAI,CAAER,UAAW,yCAA0CQ,MAAO,QAClE,GAAI,CAAER,UAAW,wCAAyCQ,MAAO,YAG1BD,IAAc,CACrDP,UAAW,2CACXQ,MAAO,WAGX,OAAOL,EAAAA,EAAAA,KAAA,OAAKH,UAAWA,EAAWN,MAAO,CAAEc,SAAS,aAAYD,EAAUL,UAACC,EAAAA,EAAAA,KAAA,WAAiB,EAG1FM,EAAYC,IAA6B,IAA5B,QAAEC,EAAO,UAAEJ,GAAWG,EACrC,MAIM,UAAEV,EAAS,MAAEQ,GAJC,CAChB,GAAI,CAAER,UAAW,wCAAyCQ,MAAO,YAG5BG,IAAY,CACjDX,UAAW,2CACXQ,MAAO,WAGX,OAAOL,EAAAA,EAAAA,KAAA,OAAKH,UAAWA,EAAWN,MAAO,CAAEc,SAAS,aAAYD,GAAiB,EAEtE,MAAMK,UAAehD,EAAAA,cAChCiB,MAAAA,GACI,MAAM,OAAEgC,EAAM,UAAEN,EAAS,QAAEI,GAAY3C,KAAKF,MAC5C,OACIqC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,eAAe,iBAAWE,SAEjCW,EAAS,IAAIC,MAAMD,IAASE,KAAI,CAACC,EAAIC,IAAUN,GAAUR,EAAAA,EAAAA,KAACM,EAAS,CAAaE,QAASA,EAASJ,UAAWA,GAApCU,IAAoDd,EAAAA,EAAAA,KAACE,EAAW,CAAaE,UAAWA,GAAlBU,KAAoC,MAInM,E,qFCxCW,MAAMC,UAAqBtD,EAAAA,cAAcC,WAAAA,GAAA,SAAAsD,WAAA,KACtDC,YAAeC,GAAaC,IAC1B,MAAM,KAAEC,EAAI,UAAEC,GAAcxD,KAAKF,MACjCwD,EAAMG,mBACJC,EAAAA,EAAAA,IAAkB,CAClBC,KAAM,EACNC,OAAQ,EACRC,KAAML,EAAUM,OAChBC,KAAMR,EAAKS,OACXC,KAAMV,EAAKW,YAAcX,EAAKW,YAAcX,EAAKY,GACjDC,MAAOZ,EAAUa,WAEnBC,EAAAA,EAAAA,IAAa,SAAU,WAAY,WAAYjB,GAC/CkB,OAAOC,KAAKnB,EAAU,SAAS,CAChC,CAEDxC,MAAAA,GACE,MAAM,WAAE4D,EAAU,KAAElB,GAASvD,KAAKF,OAC5B,SAAC4E,EAAQ,QAACC,EAAO,SAAEC,GAAiB,OAAJrB,QAAI,IAAJA,OAAI,EAAJA,EAAMsB,MAEtCC,EAAcxC,IAAoB,IAAnB,QAACyC,EAAO,KAAEC,GAAK1C,EAClC,OAAOH,EAAAA,EAAAA,KAAA,OAAKH,UAAU,qBAAoBE,UACpCC,EAAAA,EAAAA,KAAA,OAAK8C,QAASjF,KAAKoD,YAAY2B,GAAU/C,UAAW,8BAA8BgD,IAAQE,MAAOF,EAAK9C,UAACC,EAAAA,EAAAA,KAAA,aACvG,EAER,OAAOJ,EAAAA,EAAAA,MAAA,OAAKC,UAAW,oBAAoByC,IAAavC,SAAA,EACtDC,EAAAA,EAAAA,KAAA,OAAKH,UAAW,qCAA0CE,UAACC,EAAAA,EAAAA,KAAA,aAC3DJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBE,SAAA,CACrCwC,GAAWvC,EAAAA,EAAAA,KAAC2C,EAAa,CAACC,QAASL,EAAUM,KAAM,aAAkB,GACrEL,GAAWxC,EAAAA,EAAAA,KAAC2C,EAAa,CAACC,QAASJ,EAASK,KAAM,YAAiB,GACnEJ,GAAWzC,EAAAA,EAAAA,KAAC2C,EAAa,CAACC,QAASH,EAAUI,KAAM,aAAkB,QAG5E,E,gGCnCF,MAAMG,GAASC,EAAAA,EAAAA,OAAK,IAAM,kCACpBC,GAAOD,EAAAA,EAAAA,OAAK,IAAM,kCAClBE,GAAUF,EAAAA,EAAAA,OAAK,IAAM,0CACrBG,GAAWH,EAAAA,EAAAA,OAAK,IAAM,iCA8B5B,EA5BsB9C,IAA6C,IAA5C,KAAEiB,EAAI,UAAEzC,EAAS,UAAE0C,EAAS,OAAEgC,GAAQlD,EAC3D,MAAM,OAAEmD,EAAM,UAAElD,GAAcgB,GACxB,QAAEmC,GAAYlC,EAAUW,GACxBwB,EAAWF,EAAOE,UAAWF,EAAOE,SAASC,OAAS,EAAI,IAAIH,EAAOE,WAAkB,GACvFE,GAAaC,EAAAA,EAAAA,IAAYL,EAAOM,MAEhCC,KAAclF,EAAU2E,OAAOQ,QAAWJ,GAC1CK,KAAkBpF,EAAU2E,OAAOQ,SAAUnF,EAAUqF,YAAeN,GAAyB,IAAZF,GACzF,OAAO5D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAuB,aAAW,iBAAiB,uBAAqB,sBAAqBE,SAAA,EACjHH,EAAAA,EAAAA,MAAA,OAAKC,UAAW,eAAeE,SAAA,CAC5B8D,GAAajE,EAAAA,EAAAA,MAACqE,EAAAA,SAAQ,CAACC,UAAUlE,EAAAA,EAAAA,KAAA,OAAKH,UAAU,yBAA8BE,SAAA,EAACC,EAAAA,EAAAA,KAACgD,EAAM,CAACM,OAAQA,EAAQa,QAAS/C,EAAK+C,QAAS/D,UAAWA,EAAWgE,YAAa,uBAAwBf,OAAQA,IAAU,OAAe,IAC3NzD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBE,SAAA,CAC/B8D,GAAa7D,EAAAA,EAAAA,KAAA,OAAKH,UAAU,mBAAkBE,SAAEuD,EAAOM,OAAc,IACtEhE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBE,SAAA,CAC7B8D,GAA0B,IAAZL,GAAiBxD,EAAAA,EAAAA,KAAA,OAAKH,UAAU,iBAAgBE,SAAEyD,IAAkB,GAClFO,GAAiB/D,EAAAA,EAAAA,KAACiE,EAAAA,SAAQ,CAACC,UAAUlE,EAAAA,EAAAA,KAAA,UAAYD,UAACC,EAAAA,EAAAA,KAACoD,EAAQ,CAACiB,SAAU,qBAAkC,GACxG1F,EAAUqF,YAAahE,EAAAA,EAAAA,KAACiE,EAAAA,SAAQ,CAACC,UAAUlE,EAAAA,EAAAA,KAAAsE,EAAAA,SAAA,IAAMvE,UAClDC,EAAAA,EAAAA,KAACkD,EAAI,CAACqB,UAAWnD,EAAKmD,UAAWC,UAAW,yBAAyB7F,EAAU2E,OAAO3D,cAA2B,aAIvHK,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gBAAeE,UAC1BC,EAAAA,EAAAA,KAACiE,EAAAA,SAAQ,CAACC,UAAUlE,EAAAA,EAAAA,KAAA,OAAKT,MAAO,CAACkF,SAAS,MAAY1E,UACpDC,EAAAA,EAAAA,KAACmD,EAAO,CAACuB,aAAc,mBAAoBtE,UAAWA,EAAWuE,UAAWhG,EAAUkE,aAGxF,E,gDC1BR,MAkBA,EAlBc1C,IAAgE,IAA/D,KAAEiB,EAAI,WAAEwD,EAAU,UAAEjG,EAAS,UAAE0C,EAAS,MAAEP,EAAK,OAAEuC,GAAQlD,EACtE,MAAM0E,EAAa,CAAC,EAAG,GAAGC,SAAS1D,EAAKI,OAAiC,GAAvBoD,EAAWC,WAAkB,EACzEE,KAAOC,EAAAA,KAAYrG,EAAUY,MAAM0F,QAAQtG,EAAUY,MAAM0F,MAC3DC,EAAiC,KAAhB7D,EAAUW,KAAa7C,EAAAA,KAAc6F,EAAAA,GAE5D,OAAOpF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBE,SAAA,CACrCmF,GACClF,EAAAA,EAAAA,KAAA,OAAKH,UAAU,kCAAiCE,UAC9CC,EAAAA,EAAAA,KAACmD,EAAAA,QAAO,CAACuB,aAAc,mBAAoBtE,UAAWgB,EAAK+C,QAAQnC,GAAKmC,QAAS/C,EAAK+C,QAASQ,UAAWhG,EAAUkE,SAC7G,MACT7C,EAAAA,EAAAA,KAACmF,EAAAA,QAAS,CAAC/D,KAAMA,EAAMgE,UAAWF,EAAe,sBAAwB,mBAAoBG,MAAM,EAAOC,UAAWT,IACpHA,GACD7E,EAAAA,EAAAA,KAACuF,EAAAA,EAAK,CAACC,WAAW,cAAcpE,KAAMA,EAAM2D,KAAMA,EAAMU,SAAS,EAAMC,UAAU,EAAOb,SAAUA,EAAUc,OAAO,EAAM7E,MAAOA,EAAOuC,OAAQA,KAE/IrD,EAAAA,EAAAA,KAAC4F,EAAAA,EAAK,CAACC,WAAW,cAAczE,KAAMA,EAAM2D,KAAMA,EAAMe,QAAS3G,EAAAA,GAAW4G,QAAQ,EAAOC,UAAU,EAAMlF,MAAOA,EAAOuC,OAAQA,MAE/H,E,sECXR,MAuDA,EArDalD,IAAkI,IAAjI,YAAE8F,EAAW,iBAAEC,EAAgB,MAAEpF,EAAK,aAAEqF,EAAY,mBAAEC,EAAkB,WAAExB,EAAU,UAAEjG,EAAS,KAAEyC,EAAI,UAAEC,EAAS,QAAEgF,GAASlG,EACrI,MAAMmG,EAAUjF,EAAUW,GACpBuE,EAA0B,IAAdnF,EAAKI,KACjBd,EAASU,EAAKV,OAAS,EACvB9B,EAAewC,EAAKV,OAAS,EAAI,uBAAyB,gBAC1D8F,EAA6B,IAAdpF,EAAKI,MAAc7C,EAAUY,MAAMkH,eAAiB,wCAA0C,GAC7GC,EAAkB/H,EAAUE,QAAQK,aAAcyH,EAAAA,EAAAA,IAAgBvF,EAAKvC,QAAQ+H,KAR7D,KAQ0FxF,EAAKvC,QAAQ+H,KAE/H,OACE5G,EAAAA,EAAAA,KAAC6G,EAAAA,EAAa,CAAA9G,SACXQ,IAAA,IAAC,IAAET,EAAG,OAAEuD,GAAQ9C,EAAA,OACfP,EAAAA,EAAAA,KAAA,OAAKF,IAAKA,EAAKP,MAAO,CAAEuH,MAAO,GAAGb,KAAgBc,QAASpI,EAAUY,MAAMwH,QAAU,EAAGC,QAAS3D,EAAS,EAAI,EAAG4D,WAAY5D,EAAS,0BAA4B,IAAKxD,UAAW,sBAAsBmF,EAAAA,IAAwB,KAAZsB,EAAkB,uCAAuCD,IAAW,IAAOa,KAAK,UAAU,aAAY9F,EAAKvC,QAAQ+H,KAAK7G,UAC5UC,EAAAA,EAAAA,KAAA,OAAKgC,GAAI,YAAYZ,EAAKY,KAAM,aAAYZ,EAAKhB,UAAW,UAASgB,EAAKW,aAAeX,EAAKY,GAAI,UAASZ,EAAKS,OAAQsF,SAAS,IAAI,aAAYT,EAAiBQ,KAAK,UAASnH,UAC9KC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,qBAAoBE,UACjCH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAgBiD,QAASoD,EAAiBpF,EAAOM,GAAO8F,KAAK,SAAS,aAAW,6BAA6BC,SAAS,IAAGpH,SAAA,CACtIqB,EAAKsB,MAAMoB,QACR9D,EAAAA,EAAAA,KAACe,EAAAA,QAAY,CAAC2B,MAAOtB,EAAKsB,MAAOJ,WAAY,wBAAyBlB,KAAMA,EAAMC,UAAWA,IAC7F,KACHkF,GACCvG,EAAAA,EAAAA,KAACoH,EAAK,CAAChG,KAAMA,EAAMzC,UAAWA,EAAWiG,WAAYA,EAAYvD,UAAWA,EAAWP,MAAOA,EAAOuC,OAAQA,IAC3G,KACH3C,GAAuB,KAAZ4F,IAAmBnH,EAAAA,IAC7Ba,EAAAA,EAAAA,KAAA,OAAKH,UAAU,iBAAgBE,UAC7BC,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CAACC,OAAQU,EAAKV,OAAQN,UAAWgB,EAAKhB,cAE7C,MACJR,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBE,SAAA,EACtCC,EAAAA,EAAAA,KAACqH,EAAa,CAACjG,KAAMA,EAAMzC,UAAWA,EAAWiG,WAAYA,EAAY2B,UAAWA,EAAWlF,UAAWA,EAAWgC,OAAQA,IACzHjC,EAAKkG,WACHtH,EAAAA,EAAAA,KAAA,OAAKH,UAAU,iBAAgBE,UAC7BC,EAAAA,EAAAA,KAACuH,EAAAA,QAAS,CAACC,SAAU,qBAAsBC,IAAKrG,EAAMA,KAAMA,EAAM+E,aAAcA,MAEpF,KACDzF,GAAUvB,EAAAA,IACPa,EAAAA,EAAAA,KAAA,OAAKH,UAAU,iBAAgBE,UAC7BC,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CAACC,OAAQU,EAAKV,OAAQN,UAAWgB,EAAKhB,cAE7C,KACJzB,EAAUE,QAAQiF,QAChB9D,EAAAA,EAAAA,KAACxC,EAAAA,QAAW,CAACoB,aAAc,GAAGA,KAAgB4H,IAAgBpF,KAAMA,EAAMvC,QAAS6H,EAAiB/H,UAAWA,EAAWG,aAAcsC,EAAKvC,QAAQkE,QACrJ,QAELpE,EAAU+I,cACP1H,EAAAA,EAAAA,KAAC2H,EAAAA,EAAY,CAACvG,KAAMA,EAAMzC,UAAWA,EAAWiJ,YAAa,0BAC7D,aAIN,GAEQ,C","sources":["app/Themes/Elements/PostContent/PostContent.jsx","app/Themes/Elements/Rating/Rating.js","app/Themes/Elements/ShareOnHover/ShareOnHover.js","app/Themes/NewsCard/Elements/AuthorDetails.js","app/Themes/NewsCard/Elements/Media.js","app/Themes/NewsCard/Elements/Card.js"],"sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport { isTagShop } from \"../../../../actions/api\";\r\nimport parse from \"html-react-parser\";\r\nimport { STRING_TO_URL_CONVERT } from \"../../../../utils/Common\";\r\n// import PostContentHighlight from \"./PostContentHighlight\";\r\n\r\nexport default class PostContent extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.contentRef = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n      setTimeout(() => {\r\n        if (this.contentRef?.current?.clientHeight) {\r\n          const contentHeight = this.contentRef?.current?.clientHeight || 0;\r\n          if (this.props.contentRefCallBack) this.props.contentRefCallBack(contentHeight)\r\n        }\r\n      }, 100);\r\n\r\n    //  console.log(parsedHTML); // Parsed structure\r\n  }\r\n\r\n  render() {\r\n    const { CardStyle, contentClass, content, contentTitle, maxLines, isReadMore } = this.props;\r\n    const trimLines = CardStyle.content.trimcontent && !isTagShop ? CardStyle.content.trimcontent : 0;\r\n    const truncateStyle = {\r\n      WebkitLineClamp: maxLines,\r\n      textAlign: CardStyle.style.textAlign\r\n    };\r\n    const contentData = STRING_TO_URL_CONVERT(content);\r\n    const trimClasses = `${trimLines ? ` tb_content_line-${trimLines}` : ``}`\r\n    const contentClasses = `${contentClass} ${!isReadMore ? trimClasses : ''} tb-cTBfont-${CardStyle.style.variant}`\r\n    return (\r\n      <div className={contentClasses} ref={this.contentRef} style={truncateStyle}>\r\n        {contentTitle ? <div className=\"tb_bold_txt__\">{parse(contentTitle)}</div> : null}\r\n        {parse(contentData)}\r\n        {/* <PostContentHighlight content={contentData} CardStyle={CardStyle} /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport \"./scss/rating.scss\";\r\n\r\nconst NetworkStar = ({ networkId }) => {\r\n    const networkStyles = {\r\n        3: { className: 'tb_rating_ico__ tb__icon tb-default-star', color: '#1b74e4' },\r\n        19: { className: 'tb_rating_ico__ tb__icon tb-yelp-star', color: '#e00707' },\r\n        23: { className: 'tb_rating_ico__ tb__icon tb-default-star', color: '#ff385c' },\r\n        28: { className: 'tb_rating_ico__ tb__icon tb-default-star', color: '#F8B90C' },\r\n        29: { className: 'tb_rating_ico__ tb__icon tb-default-star', color: '#613983' },\r\n        33: { className: 'tb_rating_ico__ tb__icon tb-trustpilot', color: '#000' },\r\n        35: { className: 'tb_rating_ico__ tb__icon tb-star-fill', color: '#34E0A1' },\r\n    };\r\n\r\n    const { className, color } = networkStyles[networkId] || {\r\n        className: 'tb_rating_ico__ tb__icon tb-default-star',\r\n        color: '#F8B90C',\r\n    };\r\n\r\n    return <div className={className} style={{ color }} tb-network={networkId}><div></div></div>;\r\n};\r\n\r\nconst ThemeStar = ({ ThemeID, networkId }) => {\r\n    const themeStyles = {\r\n        59: { className: 'tb_rating_ico__ tb__icon tb-star-fill', color: '#34E0A1' },\r\n    };\r\n\r\n    const { className, color } = themeStyles[ThemeID] || {\r\n        className: 'tb_rating_ico__ tb__icon tb-default-star',\r\n        color: '#F8B90C',\r\n    };\r\n\r\n    return <div className={className} style={{ color }} tb-network={networkId}></div>;\r\n};\r\nexport default class Rating extends PureComponent {\r\n    render() {\r\n        const { rating, networkId, ThemeID } = this.props;\r\n        return (\r\n            <div className=\"tb__rating__\" aria-hidden>\r\n                {\r\n                    rating ? [...Array(rating)].map((el, index) => ThemeID ? <ThemeStar key={index} ThemeID={ThemeID} networkId={networkId} /> : <NetworkStar key={index} networkId={networkId} /> ) : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport { gtmAnalytics, themePostTracking } from \"../../../../actions/moredataAction\";\r\nimport './scss/ShareOnHover.scss'\r\n\r\nexport default class ShareOnHover extends PureComponent {\r\n  onClickData = (shareURL) => event => {\r\n    const { Post, ThemeInfo } = this.props;\r\n    event.stopPropagation();\r\n      themePostTracking({\r\n      type: 2,\r\n      action: 2,\r\n      wall: ThemeInfo.wallID,\r\n      feed: Post.feedId,\r\n      post: Post.referenceId ? Post.referenceId : Post.id,\r\n      owner: ThemeInfo.ownerId\r\n    })\r\n    gtmAnalytics(\"Tagbox\", \"shareUrl\", \"shareUrl\", shareURL)\r\n    window.open(shareURL, \"_blank\")\r\n  }\r\n\r\n  render() {\r\n    const { shareClass, Post } = this.props;\r\n    const {facebook,twitter, linkedin } = Post?.share;\r\n    \r\n    const GetShareIncon=({shareOn, icon})=>{\r\n      return <div className=\"tb_share_icon_list\">\r\n            <div onClick={this.onClickData(shareOn)} className={`tb_share_ico__ tb__icon tb-${icon}`} title={icon}><div></div></div>\r\n      </div>\r\n    }\r\n    return <div className={`tb_share_wrapper ${shareClass}`}>\r\n      <div className={`tb_share_button_ tb__icon ${'tb-share'}`}><div></div></div>\r\n      <div className=\"tb_share_icon_list_wrap\">\r\n        {facebook ? <GetShareIncon shareOn={facebook} icon={'facebook'} />  : ''}\r\n        {twitter  ? <GetShareIncon shareOn={twitter} icon={'twitter'} />  : ''}\r\n        {linkedin ? <GetShareIncon shareOn={linkedin} icon={'linkedin'} />  : ''}\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n","import React, { Suspense, lazy } from \"react\";\r\nimport { isInstaUser } from \"../../../../utils\";\r\nconst Author = lazy(() => import( \"../../Elements/Author/Author\"));\r\nconst Time = lazy(() => import( \"../../Elements/Time/Time\"));\r\nconst Network = lazy(() => import( \"../../Elements/Network/Network\"));\r\nconst Seprator = lazy(() => import( \"../../Elements/Seprator/Seprator\"));\r\n\r\nconst AuthorDetails = ({ Post, CardStyle, ThemeInfo, inView }) => {\r\n  const { author, networkId } = Post\r\n  const { ThemeId } = ThemeInfo.id\r\n  const username = author.username ? author.username.length > 0 ? `@${author.username}` : `` : '';\r\n  const instaUser =  isInstaUser(author.name);\r\n\r\n  const postAuthor = (CardStyle.author.status && !instaUser) ? true : false;\r\n  const authorSeprator = (CardStyle.author.status && CardStyle.timeStatus && !instaUser && username != '') ? true : false;\r\n  return <div className=\"tb_nc_author_wrapper\" aria-label=\"Author details\" aria-roledescription=\"post author details\">\r\n    <div className={`tb_nc_author`}>\r\n      {postAuthor ? <Suspense fallback={<div className=\"tb_nc_author_profile\"></div>}><Author author={author} network={Post.network} networkId={networkId} authorClass={'tb_nc_author_profile'} inView={inView} /> </Suspense> : ''}\r\n      <div className=\"tb_nc_author_info\">\r\n        {postAuthor ? <div className=\"tb_nc_authorname\">{author.name}</div> : ''}\r\n        <div className=\"tb_nc_post_info\">\r\n          {postAuthor && username != '' ? <div className=\"tb_nc_username\">{username}</div> : ''}\r\n          {authorSeprator ? <Suspense fallback={<div></div>}><Seprator sepClass={`tb_nc_seprator`} /></Suspense> : ''}\r\n          {CardStyle.timeStatus ? <Suspense fallback={<></>}>\r\n          <Time createdAt={Post.createdAt} timeClass={`tb_nc_time tb-cTBfont-${CardStyle.author.variant}`} /></Suspense> : ''}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"tb_nc_social_\">\r\n        <Suspense fallback={<div style={{minWidth:20}}></div>}>\r\n          <Network networkClass={'tb_nc_social_ico'} networkId={networkId} iconStyle={CardStyle.icon} />\r\n        </Suspense>\r\n      </div>\r\n  </div>\r\n}\r\nexport default AuthorDetails","import React from \"react\";\r\nimport { isTagShop, isTagbox } from \"../../../../actions/api\";\r\nimport Image from \"../../Elements/Media/Image\";\r\nimport Video from \"../../Elements/Media/Video\";\r\nimport MediaIcon from \"../../Elements/MediaIcon/MediaIcon\";\r\nimport Network from \"../../Elements/Network/Network\";\r\n\r\nconst Media = ({ Post, ThemeStyle, CardStyle, ThemeInfo, index, inView }) => {\r\n  const autoPlay = (([3, 5].includes(Post.type)) && ThemeStyle.autoPlay == 1) || false\r\n  const size = isTagbox && CardStyle.style.ratio ? CardStyle.style.ratio : false\r\n  const networkOnTop =  !ThemeInfo.id == 59 && !isTagShop && !isTagbox ? true : false\r\n\r\n  return <div className=\"tb_nc_media_wrap\">\r\n    {networkOnTop ?\r\n      <div className=\"tb_nc_social_ tb_nc_social_top_\">\r\n        <Network networkClass={'tb_nc_social_ico'} networkId={Post.network.id}  network={Post.network} iconStyle={CardStyle.icon} />\r\n      </div> : null}\r\n      <MediaIcon Post={Post} IconClass={networkOnTop ? 'tb_nc_media_icon_te' : 'tb_nc_media_icon'} show={true}  hideVideo={autoPlay} /> \r\n      {autoPlay  ?\r\n      <Video VideoClass=\"tb_nc_video\" Post={Post} size={size} isCover={true} controls={false} autoPlay={autoPlay} muted={true} index={index} inView={inView} />\r\n      :\r\n      <Image ImageClass=\"tb_nc_image\" Post={Post} size={size} hotspot={isTagShop} blurBG={false} observer={true} index={index} inView={inView} />\r\n    }\r\n  </div>\r\n}\r\nexport default Media","import React, { useRef } from 'react'\r\nimport { PostTrimContent } from \"../../../../utils\";\r\nimport { isTagShop, isTagbox } from \"../../../../actions/api\";\r\nimport AuthorDetails from \"./AuthorDetails\";\r\nimport Media from \"./Media\";\r\nimport PostContent from \"../../Elements/PostContent/PostContent\";\r\nimport SocialAction from \"../../Elements/SocialAction/SocialAction\";\r\nimport ShareOnHover from \"../../Elements/ShareOnHover/ShareOnHover\";\r\nimport CTAButton from \"../../Elements/CTA/CtaButton\";\r\nimport Rating from \"../../Elements/Rating/Rating\";\r\nimport InViewWrapper from '../../Elements/InViewWrapper';\r\n\r\nconst trim_content_length = 200;\r\n\r\nconst Card = ({ adjustWidth, clickToShowPopUp, index, onClickToCTA, onClickPopUpSlider, ThemeStyle, CardStyle, Post, ThemeInfo, counter }) => {\r\n    const themeId = ThemeInfo.id;\r\n    const mediaType = Post.type !== 1;\r\n    const rating = Post.rating > 0;\r\n    const contentClass = Post.rating > 0 ? \"tb_nc_rating_content\" : \"tb_nc_content\";\r\n    const textDecorate = Post.type === 1 && CardStyle.style.textDecoration ? \"tb_nc_text_decoration tb_nc_text_post\" : \"\";\r\n    const postTextContent = CardStyle.content.trimcontent ? PostTrimContent(Post.content.text, trim_content_length) : Post.content.text;\r\n\r\n    return (\r\n      <InViewWrapper>\r\n        {({ ref, inView }) => (\r\n          <div ref={ref} style={{ width: `${adjustWidth}%`, padding: CardStyle.style.padding / 2, opacity: inView ? 1 : 0, transition: inView ? 'opacity .5s ease-in-out' : ''}} className={`tb_nc_post_wrapper${(isTagbox && themeId === 83) ? ` tb_nc_post_gradient tb_nc_gradient-${counter}`: \"\" }`} role=\"article\" area-label={Post.content.text}>\r\n          <div id={`tb_nc_id-${Post.id}`} tb-network={Post.networkId} post-id={Post.referenceId || Post.id} feed-id={Post.feedId} tabIndex=\"0\" area-label={postTextContent} role=\"article\">\r\n            <div className=\"tb_nc_post_wrap_in\">\r\n              <div className=\"tb_nc_post_in\" onClick={clickToShowPopUp(index, Post)} role=\"button\" aria-label=\"open detail modal for post\" tabIndex=\"0\">\r\n                {Post.share.status ? (\r\n                    <ShareOnHover share={Post.share} shareClass={\"tb_nc_share_container\"} Post={Post} ThemeInfo={ThemeInfo} />\r\n                ) : null}\r\n                {mediaType ? (\r\n                  <Media Post={Post} CardStyle={CardStyle} ThemeStyle={ThemeStyle} ThemeInfo={ThemeInfo} index={index} inView={inView} />\r\n                ) : null}\r\n                {rating  && themeId !== 59 && !isTagShop ? (\r\n                  <div className=\"tb_nc_rating__\">\r\n                    <Rating rating={Post.rating} networkId={Post.networkId} />\r\n                  </div>\r\n                ) : null}\r\n                <div className=\"tb_nc_contant_wrapper\">\r\n                <AuthorDetails Post={Post} CardStyle={CardStyle} ThemeStyle={ThemeStyle} mediaType={mediaType} ThemeInfo={ThemeInfo} inView={inView} />\r\n                  { Post.ctaStatus ?\r\n                      <div className=\"tb_nc_post_cta\">\r\n                        <CTAButton ctaClass={\"tb_nc_post_cta_btn\"} cta={Post} Post={Post} onClickToCTA={onClickToCTA} />\r\n                      </div>\r\n                  : null }\r\n                  {rating && isTagShop ? (\r\n                      <div className=\"tb_nc_rating__\">\r\n                        <Rating rating={Post.rating} networkId={Post.networkId} />\r\n                      </div>\r\n                    ) : null}\r\n                  {(CardStyle.content.status) ? (\r\n                      <PostContent contentClass={`${contentClass} ${textDecorate}`} Post={Post} content={postTextContent} CardStyle={CardStyle} contentTitle={Post.content.title} /> \r\n                  ) : null}\r\n                </div>\r\n                {CardStyle.actionStatus ? (\r\n                    <SocialAction Post={Post} CardStyle={CardStyle} actionClass={`tb_nc_social_action__`}/>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        )}\r\n      </InViewWrapper>\r\n    );\r\n}\r\nexport default Card"],"names":["PostContent","PureComponent","constructor","props","super","this","contentRef","React","componentDidMount","setTimeout","_this$contentRef","_this$contentRef$curr","current","clientHeight","_this$contentRef2","_this$contentRef2$cur","contentHeight","contentRefCallBack","render","CardStyle","contentClass","content","contentTitle","maxLines","isReadMore","trimLines","trimcontent","isTagShop","truncateStyle","WebkitLineClamp","textAlign","style","contentData","STRING_TO_URL_CONVERT","contentClasses","variant","_jsxs","className","ref","children","_jsx","parse","NetworkStar","_ref","networkId","color","ThemeStar","_ref2","ThemeID","Rating","rating","Array","map","el","index","ShareOnHover","arguments","onClickData","shareURL","event","Post","ThemeInfo","stopPropagation","themePostTracking","type","action","wall","wallID","feed","feedId","post","referenceId","id","owner","ownerId","gtmAnalytics","window","open","shareClass","facebook","twitter","linkedin","share","GetShareIncon","shareOn","icon","onClick","title","Author","lazy","Time","Network","Seprator","inView","author","ThemeId","username","length","instaUser","isInstaUser","name","postAuthor","status","authorSeprator","timeStatus","Suspense","fallback","network","authorClass","sepClass","_Fragment","createdAt","timeClass","minWidth","networkClass","iconStyle","ThemeStyle","autoPlay","includes","size","isTagbox","ratio","networkOnTop","MediaIcon","IconClass","show","hideVideo","Video","VideoClass","isCover","controls","muted","Image","ImageClass","hotspot","blurBG","observer","adjustWidth","clickToShowPopUp","onClickToCTA","onClickPopUpSlider","counter","themeId","mediaType","textDecorate","textDecoration","postTextContent","PostTrimContent","text","InViewWrapper","width","padding","opacity","transition","role","tabIndex","Media","AuthorDetails","ctaStatus","CTAButton","ctaClass","cta","actionStatus","SocialAction","actionClass"],"sourceRoot":""}